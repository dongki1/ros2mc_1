// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const MissionResultRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  instance_count: primitiveTypes.uint32,
  seq_reached: primitiveTypes.int32,
  seq_current: primitiveTypes.uint16,
  seq_total: primitiveTypes.uint16,
  valid: primitiveTypes.bool,
  warning: primitiveTypes.bool,
  finished: primitiveTypes.bool,
  failure: primitiveTypes.bool,
  item_do_jump_changed: primitiveTypes.bool,
  item_changed_index: primitiveTypes.uint16,
  item_do_jump_remaining: primitiveTypes.uint16,
  execution_mode: primitiveTypes.uint8,
});
const MissionResultRefArray = ArrayType(MissionResultRefStruct);
const MissionResultRefStructArray = StructType({
  data: MissionResultRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class MissionResultWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new MissionResultRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._instance_countIntialized = true;
      this._seq_reachedIntialized = true;
      this._seq_currentIntialized = true;
      this._seq_totalIntialized = true;
      this._validIntialized = true;
      this._warningIntialized = true;
      this._finishedIntialized = true;
      this._failureIntialized = true;
      this._item_do_jump_changedIntialized = true;
      this._item_changed_indexIntialized = true;
      this._item_do_jump_remainingIntialized = true;
      this._execution_modeIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new MissionResultRefStruct();
    this._timestampIntialized = false;
    this._instance_countIntialized = false;
    this._seq_reachedIntialized = false;
    this._seq_currentIntialized = false;
    this._seq_totalIntialized = false;
    this._validIntialized = false;
    this._warningIntialized = false;
    this._finishedIntialized = false;
    this._failureIntialized = false;
    this._item_do_jump_changedIntialized = false;
    this._item_changed_indexIntialized = false;
    this._item_do_jump_remainingIntialized = false;
    this._execution_modeIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new MissionResultWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new MissionResultArrayWrapper;
  }
  static get ArrayType() {
    return MissionResultArrayWrapper;
  }
  static get refObjectArrayType() {
    return MissionResultRefStructArray
  }
  static get refObjectType() {
    return MissionResultRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in MissionResult');
      }
      if (checkConsistency && !this._instance_countIntialized) {
        throw new TypeError('Invalid argument: instance_count in MissionResult');
      }
      if (checkConsistency && !this._seq_reachedIntialized) {
        throw new TypeError('Invalid argument: seq_reached in MissionResult');
      }
      if (checkConsistency && !this._seq_currentIntialized) {
        throw new TypeError('Invalid argument: seq_current in MissionResult');
      }
      if (checkConsistency && !this._seq_totalIntialized) {
        throw new TypeError('Invalid argument: seq_total in MissionResult');
      }
      if (checkConsistency && !this._validIntialized) {
        throw new TypeError('Invalid argument: valid in MissionResult');
      }
      if (checkConsistency && !this._warningIntialized) {
        throw new TypeError('Invalid argument: warning in MissionResult');
      }
      if (checkConsistency && !this._finishedIntialized) {
        throw new TypeError('Invalid argument: finished in MissionResult');
      }
      if (checkConsistency && !this._failureIntialized) {
        throw new TypeError('Invalid argument: failure in MissionResult');
      }
      if (checkConsistency && !this._item_do_jump_changedIntialized) {
        throw new TypeError('Invalid argument: item_do_jump_changed in MissionResult');
      }
      if (checkConsistency && !this._item_changed_indexIntialized) {
        throw new TypeError('Invalid argument: item_changed_index in MissionResult');
      }
      if (checkConsistency && !this._item_do_jump_remainingIntialized) {
        throw new TypeError('Invalid argument: item_do_jump_remaining in MissionResult');
      }
      if (checkConsistency && !this._execution_modeIntialized) {
        throw new TypeError('Invalid argument: execution_mode in MissionResult');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._instance_countIntialized = true;
    this._refObject.instance_count = refObject.instance_count;
    this._seq_reachedIntialized = true;
    this._refObject.seq_reached = refObject.seq_reached;
    this._seq_currentIntialized = true;
    this._refObject.seq_current = refObject.seq_current;
    this._seq_totalIntialized = true;
    this._refObject.seq_total = refObject.seq_total;
    this._validIntialized = true;
    this._refObject.valid = refObject.valid;
    this._warningIntialized = true;
    this._refObject.warning = refObject.warning;
    this._finishedIntialized = true;
    this._refObject.finished = refObject.finished;
    this._failureIntialized = true;
    this._refObject.failure = refObject.failure;
    this._item_do_jump_changedIntialized = true;
    this._refObject.item_do_jump_changed = refObject.item_do_jump_changed;
    this._item_changed_indexIntialized = true;
    this._refObject.item_changed_index = refObject.item_changed_index;
    this._item_do_jump_remainingIntialized = true;
    this._refObject.item_do_jump_remaining = refObject.item_do_jump_remaining;
    this._execution_modeIntialized = true;
    this._refObject.execution_mode = refObject.execution_mode;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    MissionResultWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'MissionResult'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get instance_count() {
    if (!this._instance_countIntialized) {
      return undefined;
    }
    return this._refObject.instance_count;
  }
  set instance_count(value) {
    this._instance_countIntialized = true;
    this._refObject.instance_count = value;
  }
  get seq_reached() {
    if (!this._seq_reachedIntialized) {
      return undefined;
    }
    return this._refObject.seq_reached;
  }
  set seq_reached(value) {
    this._seq_reachedIntialized = true;
    this._refObject.seq_reached = value;
  }
  get seq_current() {
    if (!this._seq_currentIntialized) {
      return undefined;
    }
    return this._refObject.seq_current;
  }
  set seq_current(value) {
    this._seq_currentIntialized = true;
    this._refObject.seq_current = value;
  }
  get seq_total() {
    if (!this._seq_totalIntialized) {
      return undefined;
    }
    return this._refObject.seq_total;
  }
  set seq_total(value) {
    this._seq_totalIntialized = true;
    this._refObject.seq_total = value;
  }
  get valid() {
    if (!this._validIntialized) {
      return undefined;
    }
    return this._refObject.valid;
  }
  set valid(value) {
    this._validIntialized = true;
    this._refObject.valid = value;
  }
  get warning() {
    if (!this._warningIntialized) {
      return undefined;
    }
    return this._refObject.warning;
  }
  set warning(value) {
    this._warningIntialized = true;
    this._refObject.warning = value;
  }
  get finished() {
    if (!this._finishedIntialized) {
      return undefined;
    }
    return this._refObject.finished;
  }
  set finished(value) {
    this._finishedIntialized = true;
    this._refObject.finished = value;
  }
  get failure() {
    if (!this._failureIntialized) {
      return undefined;
    }
    return this._refObject.failure;
  }
  set failure(value) {
    this._failureIntialized = true;
    this._refObject.failure = value;
  }
  get item_do_jump_changed() {
    if (!this._item_do_jump_changedIntialized) {
      return undefined;
    }
    return this._refObject.item_do_jump_changed;
  }
  set item_do_jump_changed(value) {
    this._item_do_jump_changedIntialized = true;
    this._refObject.item_do_jump_changed = value;
  }
  get item_changed_index() {
    if (!this._item_changed_indexIntialized) {
      return undefined;
    }
    return this._refObject.item_changed_index;
  }
  set item_changed_index(value) {
    this._item_changed_indexIntialized = true;
    this._refObject.item_changed_index = value;
  }
  get item_do_jump_remaining() {
    if (!this._item_do_jump_remainingIntialized) {
      return undefined;
    }
    return this._refObject.item_do_jump_remaining;
  }
  set item_do_jump_remaining(value) {
    this._item_do_jump_remainingIntialized = true;
    this._refObject.item_do_jump_remaining = value;
  }
  get execution_mode() {
    if (!this._execution_modeIntialized) {
      return undefined;
    }
    return this._refObject.execution_mode;
  }
  set execution_mode(value) {
    this._execution_modeIntialized = true;
    this._refObject.execution_mode = value;
  }
  copyRefObject(refObject) {
    this._refObject = new MissionResultRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._instance_countIntialized = true;
    this._seq_reachedIntialized = true;
    this._seq_currentIntialized = true;
    this._seq_totalIntialized = true;
    this._validIntialized = true;
    this._warningIntialized = true;
    this._finishedIntialized = true;
    this._failureIntialized = true;
    this._item_do_jump_changedIntialized = true;
    this._item_changed_indexIntialized = true;
    this._item_do_jump_remainingIntialized = true;
    this._execution_modeIntialized = true;
  }
  copy(other) {
    this._refObject = new MissionResultRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._instance_countIntialized = true;
    this._seq_reachedIntialized = true;
    this._seq_currentIntialized = true;
    this._seq_totalIntialized = true;
    this._validIntialized = true;
    this._warningIntialized = true;
    this._finishedIntialized = true;
    this._failureIntialized = true;
    this._item_do_jump_changedIntialized = true;
    this._item_changed_indexIntialized = true;
    this._item_do_jump_remainingIntialized = true;
    this._execution_modeIntialized = true;
  }
  static get classType() {
    return MissionResultWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"MISSION_EXECUTION_MODE_NORMAL","value":0},{"type":"uint8","name":"MISSION_EXECUTION_MODE_REVERSE","value":1},{"type":"uint8","name":"MISSION_EXECUTION_MODE_FAST_FORWARD","value":2}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"instance_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"seq_reached","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"seq_current","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"seq_total","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"warning","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"finished","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"failure","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"item_do_jump_changed","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"item_changed_index","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"item_do_jump_remaining","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"execution_mode","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"MissionResult","stringUpperBound":null,"isPrimitiveType":false},"msgName":"MissionResult"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","instance_count","seq_reached","seq_current","seq_total","valid","warning","finished","failure","item_do_jump_changed","item_changed_index","item_do_jump_remaining","execution_mode"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class MissionResultArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof MissionResultWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new MissionResultWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MissionResultArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MissionResultArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new MissionResultRefArray(size);
    this._refObject = new MissionResultRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new MissionResultWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof MissionResultArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "MissionResultArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      MissionResultWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return MissionResultWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return MissionResultArrayWrapper;
  }
}
// Define constants (3 in total)
Object.defineProperty(MissionResultWrapper, "MISSION_EXECUTION_MODE_NORMAL", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MissionResultWrapper, "MISSION_EXECUTION_MODE_REVERSE", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MissionResultWrapper, "MISSION_EXECUTION_MODE_FAST_FORWARD", {value: 2, writable: false, enumerable: true, configurable: true});
module.exports = MissionResultWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "MISSION_EXECUTION_MODE_NORMAL",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "MISSION_EXECUTION_MODE_REVERSE",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "MISSION_EXECUTION_MODE_FAST_FORWARD",
      "value": 2
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "instance_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "seq_reached",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "seq_current",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "seq_total",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "warning",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "finished",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "failure",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "item_do_jump_changed",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "item_changed_index",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "item_do_jump_remaining",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "execution_mode",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "MissionResult",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "MissionResult"
}
*/
