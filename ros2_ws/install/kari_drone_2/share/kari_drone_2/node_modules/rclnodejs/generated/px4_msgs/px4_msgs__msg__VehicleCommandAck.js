// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const VehicleCommandAckRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  command: primitiveTypes.uint32,
  result: primitiveTypes.uint8,
  result_param1: primitiveTypes.uint8,
  result_param2: primitiveTypes.int32,
  target_system: primitiveTypes.uint8,
  target_component: primitiveTypes.uint8,
  from_external: primitiveTypes.bool,
});
const VehicleCommandAckRefArray = ArrayType(VehicleCommandAckRefStruct);
const VehicleCommandAckRefStructArray = StructType({
  data: VehicleCommandAckRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class VehicleCommandAckWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new VehicleCommandAckRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._commandIntialized = true;
      this._resultIntialized = true;
      this._result_param1Intialized = true;
      this._result_param2Intialized = true;
      this._target_systemIntialized = true;
      this._target_componentIntialized = true;
      this._from_externalIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new VehicleCommandAckRefStruct();
    this._timestampIntialized = false;
    this._commandIntialized = false;
    this._resultIntialized = false;
    this._result_param1Intialized = false;
    this._result_param2Intialized = false;
    this._target_systemIntialized = false;
    this._target_componentIntialized = false;
    this._from_externalIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new VehicleCommandAckWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new VehicleCommandAckArrayWrapper;
  }
  static get ArrayType() {
    return VehicleCommandAckArrayWrapper;
  }
  static get refObjectArrayType() {
    return VehicleCommandAckRefStructArray
  }
  static get refObjectType() {
    return VehicleCommandAckRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in VehicleCommandAck');
      }
      if (checkConsistency && !this._commandIntialized) {
        throw new TypeError('Invalid argument: command in VehicleCommandAck');
      }
      if (checkConsistency && !this._resultIntialized) {
        throw new TypeError('Invalid argument: result in VehicleCommandAck');
      }
      if (checkConsistency && !this._result_param1Intialized) {
        throw new TypeError('Invalid argument: result_param1 in VehicleCommandAck');
      }
      if (checkConsistency && !this._result_param2Intialized) {
        throw new TypeError('Invalid argument: result_param2 in VehicleCommandAck');
      }
      if (checkConsistency && !this._target_systemIntialized) {
        throw new TypeError('Invalid argument: target_system in VehicleCommandAck');
      }
      if (checkConsistency && !this._target_componentIntialized) {
        throw new TypeError('Invalid argument: target_component in VehicleCommandAck');
      }
      if (checkConsistency && !this._from_externalIntialized) {
        throw new TypeError('Invalid argument: from_external in VehicleCommandAck');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._commandIntialized = true;
    this._refObject.command = refObject.command;
    this._resultIntialized = true;
    this._refObject.result = refObject.result;
    this._result_param1Intialized = true;
    this._refObject.result_param1 = refObject.result_param1;
    this._result_param2Intialized = true;
    this._refObject.result_param2 = refObject.result_param2;
    this._target_systemIntialized = true;
    this._refObject.target_system = refObject.target_system;
    this._target_componentIntialized = true;
    this._refObject.target_component = refObject.target_component;
    this._from_externalIntialized = true;
    this._refObject.from_external = refObject.from_external;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    VehicleCommandAckWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'VehicleCommandAck'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get command() {
    if (!this._commandIntialized) {
      return undefined;
    }
    return this._refObject.command;
  }
  set command(value) {
    this._commandIntialized = true;
    this._refObject.command = value;
  }
  get result() {
    if (!this._resultIntialized) {
      return undefined;
    }
    return this._refObject.result;
  }
  set result(value) {
    this._resultIntialized = true;
    this._refObject.result = value;
  }
  get result_param1() {
    if (!this._result_param1Intialized) {
      return undefined;
    }
    return this._refObject.result_param1;
  }
  set result_param1(value) {
    this._result_param1Intialized = true;
    this._refObject.result_param1 = value;
  }
  get result_param2() {
    if (!this._result_param2Intialized) {
      return undefined;
    }
    return this._refObject.result_param2;
  }
  set result_param2(value) {
    this._result_param2Intialized = true;
    this._refObject.result_param2 = value;
  }
  get target_system() {
    if (!this._target_systemIntialized) {
      return undefined;
    }
    return this._refObject.target_system;
  }
  set target_system(value) {
    this._target_systemIntialized = true;
    this._refObject.target_system = value;
  }
  get target_component() {
    if (!this._target_componentIntialized) {
      return undefined;
    }
    return this._refObject.target_component;
  }
  set target_component(value) {
    this._target_componentIntialized = true;
    this._refObject.target_component = value;
  }
  get from_external() {
    if (!this._from_externalIntialized) {
      return undefined;
    }
    return this._refObject.from_external;
  }
  set from_external(value) {
    this._from_externalIntialized = true;
    this._refObject.from_external = value;
  }
  copyRefObject(refObject) {
    this._refObject = new VehicleCommandAckRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._commandIntialized = true;
    this._resultIntialized = true;
    this._result_param1Intialized = true;
    this._result_param2Intialized = true;
    this._target_systemIntialized = true;
    this._target_componentIntialized = true;
    this._from_externalIntialized = true;
  }
  copy(other) {
    this._refObject = new VehicleCommandAckRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._commandIntialized = true;
    this._resultIntialized = true;
    this._result_param1Intialized = true;
    this._result_param2Intialized = true;
    this._target_systemIntialized = true;
    this._target_componentIntialized = true;
    this._from_externalIntialized = true;
  }
  static get classType() {
    return VehicleCommandAckWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"VEHICLE_CMD_RESULT_ACCEPTED","value":0},{"type":"uint8","name":"VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED","value":1},{"type":"uint8","name":"VEHICLE_CMD_RESULT_DENIED","value":2},{"type":"uint8","name":"VEHICLE_CMD_RESULT_UNSUPPORTED","value":3},{"type":"uint8","name":"VEHICLE_CMD_RESULT_FAILED","value":4},{"type":"uint8","name":"VEHICLE_CMD_RESULT_IN_PROGRESS","value":5},{"type":"uint8","name":"VEHICLE_CMD_RESULT_CANCELLED","value":6},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_GENERIC","value":0},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_NONE","value":1},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT","value":2},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_TIMEOUT","value":3},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE","value":4},{"type":"uint16","name":"ARM_AUTH_DENIED_REASON_BAD_WEATHER","value":5},{"type":"uint8","name":"ORB_QUEUE_LENGTH","value":4}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"command","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"result","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"result_param1","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"result_param2","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"target_system","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"target_component","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"from_external","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"VehicleCommandAck","stringUpperBound":null,"isPrimitiveType":false},"msgName":"VehicleCommandAck"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","command","result","result_param1","result_param2","target_system","target_component","from_external"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class VehicleCommandAckArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof VehicleCommandAckWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new VehicleCommandAckWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to VehicleCommandAckArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to VehicleCommandAckArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new VehicleCommandAckRefArray(size);
    this._refObject = new VehicleCommandAckRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new VehicleCommandAckWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof VehicleCommandAckArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "VehicleCommandAckArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      VehicleCommandAckWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return VehicleCommandAckWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return VehicleCommandAckArrayWrapper;
  }
}
// Define constants (14 in total)
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_ACCEPTED", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_DENIED", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_UNSUPPORTED", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_FAILED", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_IN_PROGRESS", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "VEHICLE_CMD_RESULT_CANCELLED", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_GENERIC", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_NONE", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_TIMEOUT", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ARM_AUTH_DENIED_REASON_BAD_WEATHER", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(VehicleCommandAckWrapper, "ORB_QUEUE_LENGTH", {value: 4, writable: false, enumerable: true, configurable: true});
module.exports = VehicleCommandAckWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_ACCEPTED",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_TEMPORARILY_REJECTED",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_DENIED",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_UNSUPPORTED",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_FAILED",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_IN_PROGRESS",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "VEHICLE_CMD_RESULT_CANCELLED",
      "value": 6
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_GENERIC",
      "value": 0
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_NONE",
      "value": 1
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_INVALID_WAYPOINT",
      "value": 2
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_TIMEOUT",
      "value": 3
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_AIRSPACE_IN_USE",
      "value": 4
    },
    {
      "type": "uint16",
      "name": "ARM_AUTH_DENIED_REASON_BAD_WEATHER",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "ORB_QUEUE_LENGTH",
      "value": 4
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "command",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "result",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "result_param1",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "result_param2",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "target_system",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "target_component",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "from_external",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "VehicleCommandAck",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "VehicleCommandAck"
}
*/
