// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const CharWrapper = require('../../generated/std_msgs/std_msgs__msg__Char.js');
const UInt8Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt8.js');
const TransponderReportRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  icao_address: primitiveTypes.uint32,
  lat: primitiveTypes.float64,
  lon: primitiveTypes.float64,
  altitude_type: primitiveTypes.uint8,
  altitude: primitiveTypes.float32,
  heading: primitiveTypes.float32,
  hor_velocity: primitiveTypes.float32,
  ver_velocity: primitiveTypes.float32,
  callsign: ArrayType(primitiveTypes.char, 9),
  emitter_type: primitiveTypes.uint8,
  tslc: primitiveTypes.uint8,
  flags: primitiveTypes.uint16,
  squawk: primitiveTypes.uint16,
  uas_id: ArrayType(primitiveTypes.uint8, 18),
});
const TransponderReportRefArray = ArrayType(TransponderReportRefStruct);
const TransponderReportRefStructArray = StructType({
  data: TransponderReportRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class TransponderReportWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new TransponderReportRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._icao_addressIntialized = true;
      this._latIntialized = true;
      this._lonIntialized = true;
      this._altitude_typeIntialized = true;
      this._altitudeIntialized = true;
      this._headingIntialized = true;
      this._hor_velocityIntialized = true;
      this._ver_velocityIntialized = true;
      this._wrapperFields.callsign = CharWrapper.createArray();
      this._wrapperFields.callsign.copy(other._wrapperFields.callsign);
      this._emitter_typeIntialized = true;
      this._tslcIntialized = true;
      this._flagsIntialized = true;
      this._squawkIntialized = true;
      this._wrapperFields.uas_id = UInt8Wrapper.createArray();
      this._wrapperFields.uas_id.copy(other._wrapperFields.uas_id);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new TransponderReportRefStruct();
    this._timestampIntialized = false;
    this._icao_addressIntialized = false;
    this._latIntialized = false;
    this._lonIntialized = false;
    this._altitude_typeIntialized = false;
    this._altitudeIntialized = false;
    this._headingIntialized = false;
    this._hor_velocityIntialized = false;
    this._ver_velocityIntialized = false;
    this._wrapperFields.callsign = CharWrapper.createArray();
    this._emitter_typeIntialized = false;
    this._tslcIntialized = false;
    this._flagsIntialized = false;
    this._squawkIntialized = false;
    this._wrapperFields.uas_id = UInt8Wrapper.createArray();
  }
  static createFromRefObject(refObject) {
    let self = new TransponderReportWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new TransponderReportArrayWrapper;
  }
  static get ArrayType() {
    return TransponderReportArrayWrapper;
  }
  static get refObjectArrayType() {
    return TransponderReportRefStructArray
  }
  static get refObjectType() {
    return TransponderReportRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in TransponderReport');
      }
      if (checkConsistency && !this._icao_addressIntialized) {
        throw new TypeError('Invalid argument: icao_address in TransponderReport');
      }
      if (checkConsistency && !this._latIntialized) {
        throw new TypeError('Invalid argument: lat in TransponderReport');
      }
      if (checkConsistency && !this._lonIntialized) {
        throw new TypeError('Invalid argument: lon in TransponderReport');
      }
      if (checkConsistency && !this._altitude_typeIntialized) {
        throw new TypeError('Invalid argument: altitude_type in TransponderReport');
      }
      if (checkConsistency && !this._altitudeIntialized) {
        throw new TypeError('Invalid argument: altitude in TransponderReport');
      }
      if (checkConsistency && !this._headingIntialized) {
        throw new TypeError('Invalid argument: heading in TransponderReport');
      }
      if (checkConsistency && !this._hor_velocityIntialized) {
        throw new TypeError('Invalid argument: hor_velocity in TransponderReport');
      }
      if (checkConsistency && !this._ver_velocityIntialized) {
        throw new TypeError('Invalid argument: ver_velocity in TransponderReport');
      }
      if (checkConsistency && !this._emitter_typeIntialized) {
        throw new TypeError('Invalid argument: emitter_type in TransponderReport');
      }
      if (checkConsistency && !this._tslcIntialized) {
        throw new TypeError('Invalid argument: tslc in TransponderReport');
      }
      if (checkConsistency && !this._flagsIntialized) {
        throw new TypeError('Invalid argument: flags in TransponderReport');
      }
      if (checkConsistency && !this._squawkIntialized) {
        throw new TypeError('Invalid argument: squawk in TransponderReport');
      }
    this._refObject.callsign = Array.from(this._wrapperFields.callsign.data);
    this._refObject.uas_id = Array.from(this._wrapperFields.uas_id.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._icao_addressIntialized = true;
    this._refObject.icao_address = refObject.icao_address;
    this._latIntialized = true;
    this._refObject.lat = refObject.lat;
    this._lonIntialized = true;
    this._refObject.lon = refObject.lon;
    this._altitude_typeIntialized = true;
    this._refObject.altitude_type = refObject.altitude_type;
    this._altitudeIntialized = true;
    this._refObject.altitude = refObject.altitude;
    this._headingIntialized = true;
    this._refObject.heading = refObject.heading;
    this._hor_velocityIntialized = true;
    this._refObject.hor_velocity = refObject.hor_velocity;
    this._ver_velocityIntialized = true;
    this._refObject.ver_velocity = refObject.ver_velocity;
    this._wrapperFields.callsign.fill(refObject.callsign.toArray());
    this._emitter_typeIntialized = true;
    this._refObject.emitter_type = refObject.emitter_type;
    this._tslcIntialized = true;
    this._refObject.tslc = refObject.tslc;
    this._flagsIntialized = true;
    this._refObject.flags = refObject.flags;
    this._squawkIntialized = true;
    this._refObject.squawk = refObject.squawk;
    this._wrapperFields.uas_id.fill(refObject.uas_id.toArray());
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    TransponderReportWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'TransponderReport'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get icao_address() {
    if (!this._icao_addressIntialized) {
      return undefined;
    }
    return this._refObject.icao_address;
  }
  set icao_address(value) {
    this._icao_addressIntialized = true;
    this._refObject.icao_address = value;
  }
  get lat() {
    if (!this._latIntialized) {
      return undefined;
    }
    return this._refObject.lat;
  }
  set lat(value) {
    this._latIntialized = true;
    this._refObject.lat = value;
  }
  get lon() {
    if (!this._lonIntialized) {
      return undefined;
    }
    return this._refObject.lon;
  }
  set lon(value) {
    this._lonIntialized = true;
    this._refObject.lon = value;
  }
  get altitude_type() {
    if (!this._altitude_typeIntialized) {
      return undefined;
    }
    return this._refObject.altitude_type;
  }
  set altitude_type(value) {
    this._altitude_typeIntialized = true;
    this._refObject.altitude_type = value;
  }
  get altitude() {
    if (!this._altitudeIntialized) {
      return undefined;
    }
    return this._refObject.altitude;
  }
  set altitude(value) {
    this._altitudeIntialized = true;
    this._refObject.altitude = value;
  }
  get heading() {
    if (!this._headingIntialized) {
      return undefined;
    }
    return this._refObject.heading;
  }
  set heading(value) {
    this._headingIntialized = true;
    this._refObject.heading = value;
  }
  get hor_velocity() {
    if (!this._hor_velocityIntialized) {
      return undefined;
    }
    return this._refObject.hor_velocity;
  }
  set hor_velocity(value) {
    this._hor_velocityIntialized = true;
    this._refObject.hor_velocity = value;
  }
  get ver_velocity() {
    if (!this._ver_velocityIntialized) {
      return undefined;
    }
    return this._refObject.ver_velocity;
  }
  set ver_velocity(value) {
    this._ver_velocityIntialized = true;
    this._refObject.ver_velocity = value;
  }
  get callsign() {
    return this._wrapperFields['callsign'].data;
  }
  set callsign(value) {
    if (value.length !== 9) {
      throw new RangeError('The length of the array must be 9.');
    }
    this._wrapperFields['callsign'].fill(value);
  }
  get emitter_type() {
    if (!this._emitter_typeIntialized) {
      return undefined;
    }
    return this._refObject.emitter_type;
  }
  set emitter_type(value) {
    this._emitter_typeIntialized = true;
    this._refObject.emitter_type = value;
  }
  get tslc() {
    if (!this._tslcIntialized) {
      return undefined;
    }
    return this._refObject.tslc;
  }
  set tslc(value) {
    this._tslcIntialized = true;
    this._refObject.tslc = value;
  }
  get flags() {
    if (!this._flagsIntialized) {
      return undefined;
    }
    return this._refObject.flags;
  }
  set flags(value) {
    this._flagsIntialized = true;
    this._refObject.flags = value;
  }
  get squawk() {
    if (!this._squawkIntialized) {
      return undefined;
    }
    return this._refObject.squawk;
  }
  set squawk(value) {
    this._squawkIntialized = true;
    this._refObject.squawk = value;
  }
  get uas_id() {
    return this._wrapperFields['uas_id'].data;
  }
  set uas_id(value) {
    if (value.length !== 18) {
      throw new RangeError('The length of the array must be 18.');
    }
    this._wrapperFields['uas_id'].fill(value);
  }
  copyRefObject(refObject) {
    this._refObject = new TransponderReportRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._icao_addressIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altitude_typeIntialized = true;
    this._altitudeIntialized = true;
    this._headingIntialized = true;
    this._hor_velocityIntialized = true;
    this._ver_velocityIntialized = true;
    this._wrapperFields.callsign.fill(refObject.callsign.toArray());
    this._emitter_typeIntialized = true;
    this._tslcIntialized = true;
    this._flagsIntialized = true;
    this._squawkIntialized = true;
    this._wrapperFields.uas_id.fill(refObject.uas_id.toArray());
  }
  copy(other) {
    this._refObject = new TransponderReportRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._icao_addressIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altitude_typeIntialized = true;
    this._altitudeIntialized = true;
    this._headingIntialized = true;
    this._hor_velocityIntialized = true;
    this._ver_velocityIntialized = true;
    this._wrapperFields.callsign.copy(other._wrapperFields.callsign);
    this._emitter_typeIntialized = true;
    this._tslcIntialized = true;
    this._flagsIntialized = true;
    this._squawkIntialized = true;
    this._wrapperFields.uas_id.copy(other._wrapperFields.uas_id);
  }
  static get classType() {
    return TransponderReportWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_COORDS","value":1},{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_ALTITUDE","value":2},{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_HEADING","value":4},{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_VELOCITY","value":8},{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_CALLSIGN","value":16},{"type":"uint16","name":"PX4_ADSB_FLAGS_VALID_SQUAWK","value":32},{"type":"uint16","name":"PX4_ADSB_FLAGS_RETRANSLATE","value":256},{"type":"uint16","name":"ADSB_EMITTER_TYPE_NO_INFO","value":0},{"type":"uint16","name":"ADSB_EMITTER_TYPE_LIGHT","value":1},{"type":"uint16","name":"ADSB_EMITTER_TYPE_SMALL","value":2},{"type":"uint16","name":"ADSB_EMITTER_TYPE_LARGE","value":3},{"type":"uint16","name":"ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE","value":4},{"type":"uint16","name":"ADSB_EMITTER_TYPE_HEAVY","value":5},{"type":"uint16","name":"ADSB_EMITTER_TYPE_HIGHLY_MANUV","value":6},{"type":"uint16","name":"ADSB_EMITTER_TYPE_ROTOCRAFT","value":7},{"type":"uint16","name":"ADSB_EMITTER_TYPE_UNASSIGNED","value":8},{"type":"uint16","name":"ADSB_EMITTER_TYPE_GLIDER","value":9},{"type":"uint16","name":"ADSB_EMITTER_TYPE_LIGHTER_AIR","value":10},{"type":"uint16","name":"ADSB_EMITTER_TYPE_PARACHUTE","value":11},{"type":"uint16","name":"ADSB_EMITTER_TYPE_ULTRA_LIGHT","value":12},{"type":"uint16","name":"ADSB_EMITTER_TYPE_UNASSIGNED2","value":13},{"type":"uint16","name":"ADSB_EMITTER_TYPE_UAV","value":14},{"type":"uint16","name":"ADSB_EMITTER_TYPE_SPACE","value":15},{"type":"uint16","name":"ADSB_EMITTER_TYPE_UNASSGINED3","value":16},{"type":"uint16","name":"ADSB_EMITTER_TYPE_EMERGENCY_SURFACE","value":17},{"type":"uint16","name":"ADSB_EMITTER_TYPE_SERVICE_SURFACE","value":18},{"type":"uint16","name":"ADSB_EMITTER_TYPE_POINT_OBSTACLE","value":19},{"type":"uint16","name":"ADSB_EMITTER_TYPE_ENUM_END","value":20},{"type":"uint8","name":"ORB_QUEUE_LENGTH","value":8}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"icao_address","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"altitude_type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"altitude","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"hor_velocity","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"ver_velocity","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"callsign","type":{"isArray":true,"arraySize":9,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"char","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"emitter_type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"tslc","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"flags","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"squawk","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"uas_id","type":{"isArray":true,"arraySize":18,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"TransponderReport","stringUpperBound":null,"isPrimitiveType":false},"msgName":"TransponderReport"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","icao_address","lat","lon","altitude_type","altitude","heading","hor_velocity","ver_velocity","callsign","emitter_type","tslc","flags","squawk","uas_id"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class TransponderReportArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof TransponderReportWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new TransponderReportWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to TransponderReportArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to TransponderReportArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new TransponderReportRefArray(size);
    this._refObject = new TransponderReportRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new TransponderReportWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof TransponderReportArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "TransponderReportArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      TransponderReportWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return TransponderReportWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return TransponderReportArrayWrapper;
  }
}
// Define constants (29 in total)
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_COORDS", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_ALTITUDE", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_HEADING", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_VELOCITY", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_CALLSIGN", {value: 16, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_VALID_SQUAWK", {value: 32, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "PX4_ADSB_FLAGS_RETRANSLATE", {value: 256, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_NO_INFO", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_LIGHT", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_SMALL", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_LARGE", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_HEAVY", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_HIGHLY_MANUV", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_ROTOCRAFT", {value: 7, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_UNASSIGNED", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_GLIDER", {value: 9, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_LIGHTER_AIR", {value: 10, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_PARACHUTE", {value: 11, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_ULTRA_LIGHT", {value: 12, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_UNASSIGNED2", {value: 13, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_UAV", {value: 14, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_SPACE", {value: 15, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_UNASSGINED3", {value: 16, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_EMERGENCY_SURFACE", {value: 17, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_SERVICE_SURFACE", {value: 18, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_POINT_OBSTACLE", {value: 19, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ADSB_EMITTER_TYPE_ENUM_END", {value: 20, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TransponderReportWrapper, "ORB_QUEUE_LENGTH", {value: 8, writable: false, enumerable: true, configurable: true});
module.exports = TransponderReportWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_COORDS",
      "value": 1
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_ALTITUDE",
      "value": 2
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_HEADING",
      "value": 4
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_VELOCITY",
      "value": 8
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_CALLSIGN",
      "value": 16
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_VALID_SQUAWK",
      "value": 32
    },
    {
      "type": "uint16",
      "name": "PX4_ADSB_FLAGS_RETRANSLATE",
      "value": 256
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_NO_INFO",
      "value": 0
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_LIGHT",
      "value": 1
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_SMALL",
      "value": 2
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_LARGE",
      "value": 3
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_HIGH_VORTEX_LARGE",
      "value": 4
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_HEAVY",
      "value": 5
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_HIGHLY_MANUV",
      "value": 6
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_ROTOCRAFT",
      "value": 7
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_UNASSIGNED",
      "value": 8
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_GLIDER",
      "value": 9
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_LIGHTER_AIR",
      "value": 10
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_PARACHUTE",
      "value": 11
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_ULTRA_LIGHT",
      "value": 12
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_UNASSIGNED2",
      "value": 13
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_UAV",
      "value": 14
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_SPACE",
      "value": 15
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_UNASSGINED3",
      "value": 16
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_EMERGENCY_SURFACE",
      "value": 17
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_SERVICE_SURFACE",
      "value": 18
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_POINT_OBSTACLE",
      "value": 19
    },
    {
      "type": "uint16",
      "name": "ADSB_EMITTER_TYPE_ENUM_END",
      "value": 20
    },
    {
      "type": "uint8",
      "name": "ORB_QUEUE_LENGTH",
      "value": 8
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "icao_address",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "altitude_type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "altitude",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "hor_velocity",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "ver_velocity",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "callsign",
      "type": {
        "isArray": true,
        "arraySize": 9,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "char",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "emitter_type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "tslc",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "flags",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "squawk",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "uas_id",
      "type": {
        "isArray": true,
        "arraySize": 18,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "TransponderReport",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "TransponderReport"
}
*/
