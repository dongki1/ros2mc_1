// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const FollowTargetEstimatorRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  last_filter_reset_timestamp: primitiveTypes.uint64,
  valid: primitiveTypes.bool,
  stale: primitiveTypes.bool,
  lat_est: primitiveTypes.float64,
  lon_est: primitiveTypes.float64,
  alt_est: primitiveTypes.float32,
  pos_est: ArrayType(primitiveTypes.float32, 3),
  vel_est: ArrayType(primitiveTypes.float32, 3),
  acc_est: ArrayType(primitiveTypes.float32, 3),
  prediction_count: primitiveTypes.uint64,
  fusion_count: primitiveTypes.uint64,
});
const FollowTargetEstimatorRefArray = ArrayType(FollowTargetEstimatorRefStruct);
const FollowTargetEstimatorRefStructArray = StructType({
  data: FollowTargetEstimatorRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class FollowTargetEstimatorWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new FollowTargetEstimatorRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._last_filter_reset_timestampIntialized = true;
      this._validIntialized = true;
      this._staleIntialized = true;
      this._lat_estIntialized = true;
      this._lon_estIntialized = true;
      this._alt_estIntialized = true;
      this._wrapperFields.pos_est = Float32Wrapper.createArray();
      this._wrapperFields.pos_est.copy(other._wrapperFields.pos_est);
      this._wrapperFields.vel_est = Float32Wrapper.createArray();
      this._wrapperFields.vel_est.copy(other._wrapperFields.vel_est);
      this._wrapperFields.acc_est = Float32Wrapper.createArray();
      this._wrapperFields.acc_est.copy(other._wrapperFields.acc_est);
      this._prediction_countIntialized = true;
      this._fusion_countIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new FollowTargetEstimatorRefStruct();
    this._timestampIntialized = false;
    this._last_filter_reset_timestampIntialized = false;
    this._validIntialized = false;
    this._staleIntialized = false;
    this._lat_estIntialized = false;
    this._lon_estIntialized = false;
    this._alt_estIntialized = false;
    this._wrapperFields.pos_est = Float32Wrapper.createArray();
    this._wrapperFields.vel_est = Float32Wrapper.createArray();
    this._wrapperFields.acc_est = Float32Wrapper.createArray();
    this._prediction_countIntialized = false;
    this._fusion_countIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new FollowTargetEstimatorWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new FollowTargetEstimatorArrayWrapper;
  }
  static get ArrayType() {
    return FollowTargetEstimatorArrayWrapper;
  }
  static get refObjectArrayType() {
    return FollowTargetEstimatorRefStructArray
  }
  static get refObjectType() {
    return FollowTargetEstimatorRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in FollowTargetEstimator');
      }
      if (checkConsistency && !this._last_filter_reset_timestampIntialized) {
        throw new TypeError('Invalid argument: last_filter_reset_timestamp in FollowTargetEstimator');
      }
      if (checkConsistency && !this._validIntialized) {
        throw new TypeError('Invalid argument: valid in FollowTargetEstimator');
      }
      if (checkConsistency && !this._staleIntialized) {
        throw new TypeError('Invalid argument: stale in FollowTargetEstimator');
      }
      if (checkConsistency && !this._lat_estIntialized) {
        throw new TypeError('Invalid argument: lat_est in FollowTargetEstimator');
      }
      if (checkConsistency && !this._lon_estIntialized) {
        throw new TypeError('Invalid argument: lon_est in FollowTargetEstimator');
      }
      if (checkConsistency && !this._alt_estIntialized) {
        throw new TypeError('Invalid argument: alt_est in FollowTargetEstimator');
      }
      if (checkConsistency && !this._prediction_countIntialized) {
        throw new TypeError('Invalid argument: prediction_count in FollowTargetEstimator');
      }
      if (checkConsistency && !this._fusion_countIntialized) {
        throw new TypeError('Invalid argument: fusion_count in FollowTargetEstimator');
      }
    this._refObject.pos_est = Array.from(this._wrapperFields.pos_est.data);
    this._refObject.vel_est = Array.from(this._wrapperFields.vel_est.data);
    this._refObject.acc_est = Array.from(this._wrapperFields.acc_est.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._last_filter_reset_timestampIntialized = true;
    this._refObject.last_filter_reset_timestamp = refObject.last_filter_reset_timestamp;
    this._validIntialized = true;
    this._refObject.valid = refObject.valid;
    this._staleIntialized = true;
    this._refObject.stale = refObject.stale;
    this._lat_estIntialized = true;
    this._refObject.lat_est = refObject.lat_est;
    this._lon_estIntialized = true;
    this._refObject.lon_est = refObject.lon_est;
    this._alt_estIntialized = true;
    this._refObject.alt_est = refObject.alt_est;
    this._wrapperFields.pos_est.fill(refObject.pos_est.toArray());
    this._wrapperFields.vel_est.fill(refObject.vel_est.toArray());
    this._wrapperFields.acc_est.fill(refObject.acc_est.toArray());
    this._prediction_countIntialized = true;
    this._refObject.prediction_count = refObject.prediction_count;
    this._fusion_countIntialized = true;
    this._refObject.fusion_count = refObject.fusion_count;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    FollowTargetEstimatorWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'FollowTargetEstimator'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get last_filter_reset_timestamp() {
    if (!this._last_filter_reset_timestampIntialized) {
      return undefined;
    }
    return this._refObject.last_filter_reset_timestamp;
  }
  set last_filter_reset_timestamp(value) {
    this._last_filter_reset_timestampIntialized = true;
    this._refObject.last_filter_reset_timestamp = value;
  }
  get valid() {
    if (!this._validIntialized) {
      return undefined;
    }
    return this._refObject.valid;
  }
  set valid(value) {
    this._validIntialized = true;
    this._refObject.valid = value;
  }
  get stale() {
    if (!this._staleIntialized) {
      return undefined;
    }
    return this._refObject.stale;
  }
  set stale(value) {
    this._staleIntialized = true;
    this._refObject.stale = value;
  }
  get lat_est() {
    if (!this._lat_estIntialized) {
      return undefined;
    }
    return this._refObject.lat_est;
  }
  set lat_est(value) {
    this._lat_estIntialized = true;
    this._refObject.lat_est = value;
  }
  get lon_est() {
    if (!this._lon_estIntialized) {
      return undefined;
    }
    return this._refObject.lon_est;
  }
  set lon_est(value) {
    this._lon_estIntialized = true;
    this._refObject.lon_est = value;
  }
  get alt_est() {
    if (!this._alt_estIntialized) {
      return undefined;
    }
    return this._refObject.alt_est;
  }
  set alt_est(value) {
    this._alt_estIntialized = true;
    this._refObject.alt_est = value;
  }
  get pos_est() {
    return this._wrapperFields['pos_est'].data;
  }
  set pos_est(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['pos_est'].fill(value);
  }
  get vel_est() {
    return this._wrapperFields['vel_est'].data;
  }
  set vel_est(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['vel_est'].fill(value);
  }
  get acc_est() {
    return this._wrapperFields['acc_est'].data;
  }
  set acc_est(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['acc_est'].fill(value);
  }
  get prediction_count() {
    if (!this._prediction_countIntialized) {
      return undefined;
    }
    return this._refObject.prediction_count;
  }
  set prediction_count(value) {
    this._prediction_countIntialized = true;
    this._refObject.prediction_count = value;
  }
  get fusion_count() {
    if (!this._fusion_countIntialized) {
      return undefined;
    }
    return this._refObject.fusion_count;
  }
  set fusion_count(value) {
    this._fusion_countIntialized = true;
    this._refObject.fusion_count = value;
  }
  copyRefObject(refObject) {
    this._refObject = new FollowTargetEstimatorRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._last_filter_reset_timestampIntialized = true;
    this._validIntialized = true;
    this._staleIntialized = true;
    this._lat_estIntialized = true;
    this._lon_estIntialized = true;
    this._alt_estIntialized = true;
    this._wrapperFields.pos_est.fill(refObject.pos_est.toArray());
    this._wrapperFields.vel_est.fill(refObject.vel_est.toArray());
    this._wrapperFields.acc_est.fill(refObject.acc_est.toArray());
    this._prediction_countIntialized = true;
    this._fusion_countIntialized = true;
  }
  copy(other) {
    this._refObject = new FollowTargetEstimatorRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._last_filter_reset_timestampIntialized = true;
    this._validIntialized = true;
    this._staleIntialized = true;
    this._lat_estIntialized = true;
    this._lon_estIntialized = true;
    this._alt_estIntialized = true;
    this._wrapperFields.pos_est.copy(other._wrapperFields.pos_est);
    this._wrapperFields.vel_est.copy(other._wrapperFields.vel_est);
    this._wrapperFields.acc_est.copy(other._wrapperFields.acc_est);
    this._prediction_countIntialized = true;
    this._fusion_countIntialized = true;
  }
  static get classType() {
    return FollowTargetEstimatorWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"last_filter_reset_timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"stale","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat_est","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon_est","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"alt_est","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"pos_est","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_est","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"acc_est","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"prediction_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"fusion_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"FollowTargetEstimator","stringUpperBound":null,"isPrimitiveType":false},"msgName":"FollowTargetEstimator"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","last_filter_reset_timestamp","valid","stale","lat_est","lon_est","alt_est","pos_est","vel_est","acc_est","prediction_count","fusion_count"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class FollowTargetEstimatorArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof FollowTargetEstimatorWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new FollowTargetEstimatorWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to FollowTargetEstimatorArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to FollowTargetEstimatorArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new FollowTargetEstimatorRefArray(size);
    this._refObject = new FollowTargetEstimatorRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new FollowTargetEstimatorWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof FollowTargetEstimatorArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "FollowTargetEstimatorArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      FollowTargetEstimatorWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return FollowTargetEstimatorWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return FollowTargetEstimatorArrayWrapper;
  }
}
module.exports = FollowTargetEstimatorWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "last_filter_reset_timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "stale",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat_est",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon_est",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "alt_est",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "pos_est",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_est",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "acc_est",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "prediction_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "fusion_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "FollowTargetEstimator",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "FollowTargetEstimator"
}
*/
