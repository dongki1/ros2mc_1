// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const UInt8Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt8.js');
const MavlinkTunnelRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  payload_type: primitiveTypes.uint16,
  target_system: primitiveTypes.uint8,
  target_component: primitiveTypes.uint8,
  payload_length: primitiveTypes.uint8,
  payload: ArrayType(primitiveTypes.uint8, 128),
});
const MavlinkTunnelRefArray = ArrayType(MavlinkTunnelRefStruct);
const MavlinkTunnelRefStructArray = StructType({
  data: MavlinkTunnelRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class MavlinkTunnelWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new MavlinkTunnelRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._payload_typeIntialized = true;
      this._target_systemIntialized = true;
      this._target_componentIntialized = true;
      this._payload_lengthIntialized = true;
      this._wrapperFields.payload = UInt8Wrapper.createArray();
      this._wrapperFields.payload.copy(other._wrapperFields.payload);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new MavlinkTunnelRefStruct();
    this._timestampIntialized = false;
    this._payload_typeIntialized = false;
    this._target_systemIntialized = false;
    this._target_componentIntialized = false;
    this._payload_lengthIntialized = false;
    this._wrapperFields.payload = UInt8Wrapper.createArray();
  }
  static createFromRefObject(refObject) {
    let self = new MavlinkTunnelWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new MavlinkTunnelArrayWrapper;
  }
  static get ArrayType() {
    return MavlinkTunnelArrayWrapper;
  }
  static get refObjectArrayType() {
    return MavlinkTunnelRefStructArray
  }
  static get refObjectType() {
    return MavlinkTunnelRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in MavlinkTunnel');
      }
      if (checkConsistency && !this._payload_typeIntialized) {
        throw new TypeError('Invalid argument: payload_type in MavlinkTunnel');
      }
      if (checkConsistency && !this._target_systemIntialized) {
        throw new TypeError('Invalid argument: target_system in MavlinkTunnel');
      }
      if (checkConsistency && !this._target_componentIntialized) {
        throw new TypeError('Invalid argument: target_component in MavlinkTunnel');
      }
      if (checkConsistency && !this._payload_lengthIntialized) {
        throw new TypeError('Invalid argument: payload_length in MavlinkTunnel');
      }
    this._refObject.payload = Array.from(this._wrapperFields.payload.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._payload_typeIntialized = true;
    this._refObject.payload_type = refObject.payload_type;
    this._target_systemIntialized = true;
    this._refObject.target_system = refObject.target_system;
    this._target_componentIntialized = true;
    this._refObject.target_component = refObject.target_component;
    this._payload_lengthIntialized = true;
    this._refObject.payload_length = refObject.payload_length;
    this._wrapperFields.payload.fill(refObject.payload.toArray());
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    MavlinkTunnelWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'MavlinkTunnel'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get payload_type() {
    if (!this._payload_typeIntialized) {
      return undefined;
    }
    return this._refObject.payload_type;
  }
  set payload_type(value) {
    this._payload_typeIntialized = true;
    this._refObject.payload_type = value;
  }
  get target_system() {
    if (!this._target_systemIntialized) {
      return undefined;
    }
    return this._refObject.target_system;
  }
  set target_system(value) {
    this._target_systemIntialized = true;
    this._refObject.target_system = value;
  }
  get target_component() {
    if (!this._target_componentIntialized) {
      return undefined;
    }
    return this._refObject.target_component;
  }
  set target_component(value) {
    this._target_componentIntialized = true;
    this._refObject.target_component = value;
  }
  get payload_length() {
    if (!this._payload_lengthIntialized) {
      return undefined;
    }
    return this._refObject.payload_length;
  }
  set payload_length(value) {
    this._payload_lengthIntialized = true;
    this._refObject.payload_length = value;
  }
  get payload() {
    return this._wrapperFields['payload'].data;
  }
  set payload(value) {
    if (value.length !== 128) {
      throw new RangeError('The length of the array must be 128.');
    }
    this._wrapperFields['payload'].fill(value);
  }
  copyRefObject(refObject) {
    this._refObject = new MavlinkTunnelRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._payload_typeIntialized = true;
    this._target_systemIntialized = true;
    this._target_componentIntialized = true;
    this._payload_lengthIntialized = true;
    this._wrapperFields.payload.fill(refObject.payload.toArray());
  }
  copy(other) {
    this._refObject = new MavlinkTunnelRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._payload_typeIntialized = true;
    this._target_systemIntialized = true;
    this._target_componentIntialized = true;
    this._payload_lengthIntialized = true;
    this._wrapperFields.payload.copy(other._wrapperFields.payload);
  }
  static get classType() {
    return MavlinkTunnelWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN","value":0},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0","value":200},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1","value":201},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2","value":202},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3","value":203},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4","value":204},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5","value":205},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6","value":206},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7","value":207},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8","value":208},{"type":"uint8","name":"MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9","value":209}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"payload_type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"target_system","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"target_component","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"payload_length","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"payload","type":{"isArray":true,"arraySize":128,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"MavlinkTunnel","stringUpperBound":null,"isPrimitiveType":false},"msgName":"MavlinkTunnel"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","payload_type","target_system","target_component","payload_length","payload"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class MavlinkTunnelArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof MavlinkTunnelWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new MavlinkTunnelWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MavlinkTunnelArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MavlinkTunnelArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new MavlinkTunnelRefArray(size);
    this._refObject = new MavlinkTunnelRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new MavlinkTunnelWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof MavlinkTunnelArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "MavlinkTunnelArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      MavlinkTunnelWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return MavlinkTunnelWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return MavlinkTunnelArrayWrapper;
  }
}
// Define constants (11 in total)
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0", {value: 200, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1", {value: 201, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2", {value: 202, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3", {value: 203, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4", {value: 204, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5", {value: 205, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6", {value: 206, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7", {value: 207, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8", {value: 208, writable: false, enumerable: true, configurable: true});
Object.defineProperty(MavlinkTunnelWrapper, "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9", {value: 209, writable: false, enumerable: true, configurable: true});
module.exports = MavlinkTunnelWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0",
      "value": 200
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1",
      "value": 201
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2",
      "value": 202
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3",
      "value": 203
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4",
      "value": 204
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5",
      "value": 205
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6",
      "value": 206
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7",
      "value": 207
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8",
      "value": 208
    },
    {
      "type": "uint8",
      "name": "MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9",
      "value": 209
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "payload_type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "target_system",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "target_component",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "payload_length",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "payload",
      "type": {
        "isArray": true,
        "arraySize": 128,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "MavlinkTunnel",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "MavlinkTunnel"
}
*/
