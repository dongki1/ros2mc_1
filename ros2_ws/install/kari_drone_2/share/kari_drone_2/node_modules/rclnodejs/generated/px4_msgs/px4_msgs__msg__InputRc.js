// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const UInt16Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt16.js');
const InputRcRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_last_signal: primitiveTypes.uint64,
  channel_count: primitiveTypes.uint8,
  rssi: primitiveTypes.int32,
  rc_failsafe: primitiveTypes.bool,
  rc_lost: primitiveTypes.bool,
  rc_lost_frame_count: primitiveTypes.uint16,
  rc_total_frame_count: primitiveTypes.uint16,
  rc_ppm_frame_length: primitiveTypes.uint16,
  input_source: primitiveTypes.uint8,
  values: ArrayType(primitiveTypes.uint16, 18),
  link_quality: primitiveTypes.int8,
  rssi_dbm: primitiveTypes.float32,
});
const InputRcRefArray = ArrayType(InputRcRefStruct);
const InputRcRefStructArray = StructType({
  data: InputRcRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class InputRcWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new InputRcRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_last_signalIntialized = true;
      this._channel_countIntialized = true;
      this._rssiIntialized = true;
      this._rc_failsafeIntialized = true;
      this._rc_lostIntialized = true;
      this._rc_lost_frame_countIntialized = true;
      this._rc_total_frame_countIntialized = true;
      this._rc_ppm_frame_lengthIntialized = true;
      this._input_sourceIntialized = true;
      this._wrapperFields.values = UInt16Wrapper.createArray();
      this._wrapperFields.values.copy(other._wrapperFields.values);
      this._link_qualityIntialized = true;
      this._rssi_dbmIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new InputRcRefStruct();
    this._timestampIntialized = false;
    this._timestamp_last_signalIntialized = false;
    this._channel_countIntialized = false;
    this._rssiIntialized = false;
    this._rc_failsafeIntialized = false;
    this._rc_lostIntialized = false;
    this._rc_lost_frame_countIntialized = false;
    this._rc_total_frame_countIntialized = false;
    this._rc_ppm_frame_lengthIntialized = false;
    this._input_sourceIntialized = false;
    this._wrapperFields.values = UInt16Wrapper.createArray();
    this._link_qualityIntialized = false;
    this._rssi_dbmIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new InputRcWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new InputRcArrayWrapper;
  }
  static get ArrayType() {
    return InputRcArrayWrapper;
  }
  static get refObjectArrayType() {
    return InputRcRefStructArray
  }
  static get refObjectType() {
    return InputRcRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in InputRc');
      }
      if (checkConsistency && !this._timestamp_last_signalIntialized) {
        throw new TypeError('Invalid argument: timestamp_last_signal in InputRc');
      }
      if (checkConsistency && !this._channel_countIntialized) {
        throw new TypeError('Invalid argument: channel_count in InputRc');
      }
      if (checkConsistency && !this._rssiIntialized) {
        throw new TypeError('Invalid argument: rssi in InputRc');
      }
      if (checkConsistency && !this._rc_failsafeIntialized) {
        throw new TypeError('Invalid argument: rc_failsafe in InputRc');
      }
      if (checkConsistency && !this._rc_lostIntialized) {
        throw new TypeError('Invalid argument: rc_lost in InputRc');
      }
      if (checkConsistency && !this._rc_lost_frame_countIntialized) {
        throw new TypeError('Invalid argument: rc_lost_frame_count in InputRc');
      }
      if (checkConsistency && !this._rc_total_frame_countIntialized) {
        throw new TypeError('Invalid argument: rc_total_frame_count in InputRc');
      }
      if (checkConsistency && !this._rc_ppm_frame_lengthIntialized) {
        throw new TypeError('Invalid argument: rc_ppm_frame_length in InputRc');
      }
      if (checkConsistency && !this._input_sourceIntialized) {
        throw new TypeError('Invalid argument: input_source in InputRc');
      }
      if (checkConsistency && !this._link_qualityIntialized) {
        throw new TypeError('Invalid argument: link_quality in InputRc');
      }
      if (checkConsistency && !this._rssi_dbmIntialized) {
        throw new TypeError('Invalid argument: rssi_dbm in InputRc');
      }
    this._refObject.values = Array.from(this._wrapperFields.values.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_last_signalIntialized = true;
    this._refObject.timestamp_last_signal = refObject.timestamp_last_signal;
    this._channel_countIntialized = true;
    this._refObject.channel_count = refObject.channel_count;
    this._rssiIntialized = true;
    this._refObject.rssi = refObject.rssi;
    this._rc_failsafeIntialized = true;
    this._refObject.rc_failsafe = refObject.rc_failsafe;
    this._rc_lostIntialized = true;
    this._refObject.rc_lost = refObject.rc_lost;
    this._rc_lost_frame_countIntialized = true;
    this._refObject.rc_lost_frame_count = refObject.rc_lost_frame_count;
    this._rc_total_frame_countIntialized = true;
    this._refObject.rc_total_frame_count = refObject.rc_total_frame_count;
    this._rc_ppm_frame_lengthIntialized = true;
    this._refObject.rc_ppm_frame_length = refObject.rc_ppm_frame_length;
    this._input_sourceIntialized = true;
    this._refObject.input_source = refObject.input_source;
    this._wrapperFields.values.fill(refObject.values.toArray());
    this._link_qualityIntialized = true;
    this._refObject.link_quality = refObject.link_quality;
    this._rssi_dbmIntialized = true;
    this._refObject.rssi_dbm = refObject.rssi_dbm;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    InputRcWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'InputRc'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_last_signal() {
    if (!this._timestamp_last_signalIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_last_signal;
  }
  set timestamp_last_signal(value) {
    this._timestamp_last_signalIntialized = true;
    this._refObject.timestamp_last_signal = value;
  }
  get channel_count() {
    if (!this._channel_countIntialized) {
      return undefined;
    }
    return this._refObject.channel_count;
  }
  set channel_count(value) {
    this._channel_countIntialized = true;
    this._refObject.channel_count = value;
  }
  get rssi() {
    if (!this._rssiIntialized) {
      return undefined;
    }
    return this._refObject.rssi;
  }
  set rssi(value) {
    this._rssiIntialized = true;
    this._refObject.rssi = value;
  }
  get rc_failsafe() {
    if (!this._rc_failsafeIntialized) {
      return undefined;
    }
    return this._refObject.rc_failsafe;
  }
  set rc_failsafe(value) {
    this._rc_failsafeIntialized = true;
    this._refObject.rc_failsafe = value;
  }
  get rc_lost() {
    if (!this._rc_lostIntialized) {
      return undefined;
    }
    return this._refObject.rc_lost;
  }
  set rc_lost(value) {
    this._rc_lostIntialized = true;
    this._refObject.rc_lost = value;
  }
  get rc_lost_frame_count() {
    if (!this._rc_lost_frame_countIntialized) {
      return undefined;
    }
    return this._refObject.rc_lost_frame_count;
  }
  set rc_lost_frame_count(value) {
    this._rc_lost_frame_countIntialized = true;
    this._refObject.rc_lost_frame_count = value;
  }
  get rc_total_frame_count() {
    if (!this._rc_total_frame_countIntialized) {
      return undefined;
    }
    return this._refObject.rc_total_frame_count;
  }
  set rc_total_frame_count(value) {
    this._rc_total_frame_countIntialized = true;
    this._refObject.rc_total_frame_count = value;
  }
  get rc_ppm_frame_length() {
    if (!this._rc_ppm_frame_lengthIntialized) {
      return undefined;
    }
    return this._refObject.rc_ppm_frame_length;
  }
  set rc_ppm_frame_length(value) {
    this._rc_ppm_frame_lengthIntialized = true;
    this._refObject.rc_ppm_frame_length = value;
  }
  get input_source() {
    if (!this._input_sourceIntialized) {
      return undefined;
    }
    return this._refObject.input_source;
  }
  set input_source(value) {
    this._input_sourceIntialized = true;
    this._refObject.input_source = value;
  }
  get values() {
    return this._wrapperFields['values'].data;
  }
  set values(value) {
    if (value.length !== 18) {
      throw new RangeError('The length of the array must be 18.');
    }
    this._wrapperFields['values'].fill(value);
  }
  get link_quality() {
    if (!this._link_qualityIntialized) {
      return undefined;
    }
    return this._refObject.link_quality;
  }
  set link_quality(value) {
    this._link_qualityIntialized = true;
    this._refObject.link_quality = value;
  }
  get rssi_dbm() {
    if (!this._rssi_dbmIntialized) {
      return undefined;
    }
    return this._refObject.rssi_dbm;
  }
  set rssi_dbm(value) {
    this._rssi_dbmIntialized = true;
    this._refObject.rssi_dbm = value;
  }
  copyRefObject(refObject) {
    this._refObject = new InputRcRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_last_signalIntialized = true;
    this._channel_countIntialized = true;
    this._rssiIntialized = true;
    this._rc_failsafeIntialized = true;
    this._rc_lostIntialized = true;
    this._rc_lost_frame_countIntialized = true;
    this._rc_total_frame_countIntialized = true;
    this._rc_ppm_frame_lengthIntialized = true;
    this._input_sourceIntialized = true;
    this._wrapperFields.values.fill(refObject.values.toArray());
    this._link_qualityIntialized = true;
    this._rssi_dbmIntialized = true;
  }
  copy(other) {
    this._refObject = new InputRcRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_last_signalIntialized = true;
    this._channel_countIntialized = true;
    this._rssiIntialized = true;
    this._rc_failsafeIntialized = true;
    this._rc_lostIntialized = true;
    this._rc_lost_frame_countIntialized = true;
    this._rc_total_frame_countIntialized = true;
    this._rc_ppm_frame_lengthIntialized = true;
    this._input_sourceIntialized = true;
    this._wrapperFields.values.copy(other._wrapperFields.values);
    this._link_qualityIntialized = true;
    this._rssi_dbmIntialized = true;
  }
  static get classType() {
    return InputRcWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"RC_INPUT_SOURCE_UNKNOWN","value":0},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_PPM","value":1},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4IO_PPM","value":2},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4IO_SPEKTRUM","value":3},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4IO_SBUS","value":4},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4IO_ST24","value":5},{"type":"uint8","name":"RC_INPUT_SOURCE_MAVLINK","value":6},{"type":"uint8","name":"RC_INPUT_SOURCE_QURT","value":7},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_SPEKTRUM","value":8},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_SBUS","value":9},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_ST24","value":10},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_SUMD","value":11},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_DSM","value":12},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4IO_SUMD","value":13},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_CRSF","value":14},{"type":"uint8","name":"RC_INPUT_SOURCE_PX4FMU_GHST","value":15},{"type":"uint8","name":"RC_INPUT_MAX_CHANNELS","value":18},{"type":"int8","name":"RSSI_MAX","value":100}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_last_signal","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"channel_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rssi","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc_failsafe","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc_lost","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc_lost_frame_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc_total_frame_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc_ppm_frame_length","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"input_source","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"values","type":{"isArray":true,"arraySize":18,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"link_quality","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rssi_dbm","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"InputRc","stringUpperBound":null,"isPrimitiveType":false},"msgName":"InputRc"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_last_signal","channel_count","rssi","rc_failsafe","rc_lost","rc_lost_frame_count","rc_total_frame_count","rc_ppm_frame_length","input_source","values","link_quality","rssi_dbm"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class InputRcArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof InputRcWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new InputRcWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to InputRcArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to InputRcArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new InputRcRefArray(size);
    this._refObject = new InputRcRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new InputRcWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof InputRcArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "InputRcArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      InputRcWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return InputRcWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return InputRcArrayWrapper;
  }
}
// Define constants (18 in total)
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_PPM", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4IO_PPM", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4IO_SPEKTRUM", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4IO_SBUS", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4IO_ST24", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_MAVLINK", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_QURT", {value: 7, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_SPEKTRUM", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_SBUS", {value: 9, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_ST24", {value: 10, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_SUMD", {value: 11, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_DSM", {value: 12, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4IO_SUMD", {value: 13, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_CRSF", {value: 14, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_SOURCE_PX4FMU_GHST", {value: 15, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RC_INPUT_MAX_CHANNELS", {value: 18, writable: false, enumerable: true, configurable: true});
Object.defineProperty(InputRcWrapper, "RSSI_MAX", {value: 100, writable: false, enumerable: true, configurable: true});
module.exports = InputRcWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_PPM",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4IO_PPM",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4IO_SPEKTRUM",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4IO_SBUS",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4IO_ST24",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_MAVLINK",
      "value": 6
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_QURT",
      "value": 7
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_SPEKTRUM",
      "value": 8
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_SBUS",
      "value": 9
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_ST24",
      "value": 10
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_SUMD",
      "value": 11
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_DSM",
      "value": 12
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4IO_SUMD",
      "value": 13
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_CRSF",
      "value": 14
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_SOURCE_PX4FMU_GHST",
      "value": 15
    },
    {
      "type": "uint8",
      "name": "RC_INPUT_MAX_CHANNELS",
      "value": 18
    },
    {
      "type": "int8",
      "name": "RSSI_MAX",
      "value": 100
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_last_signal",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "channel_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rssi",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc_failsafe",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc_lost",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc_lost_frame_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc_total_frame_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc_ppm_frame_length",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "input_source",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "values",
      "type": {
        "isArray": true,
        "arraySize": 18,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "link_quality",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rssi_dbm",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "InputRc",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "InputRc"
}
*/
