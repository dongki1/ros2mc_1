// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const SensorGnssRelativeRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_sample: primitiveTypes.uint64,
  device_id: primitiveTypes.uint32,
  time_utc_usec: primitiveTypes.uint64,
  reference_station_id: primitiveTypes.uint16,
  position: ArrayType(primitiveTypes.float32, 3),
  position_accuracy: ArrayType(primitiveTypes.float32, 3),
  heading: primitiveTypes.float32,
  heading_accuracy: primitiveTypes.float32,
  position_length: primitiveTypes.float32,
  accuracy_length: primitiveTypes.float32,
  gnss_fix_ok: primitiveTypes.bool,
  differential_solution: primitiveTypes.bool,
  relative_position_valid: primitiveTypes.bool,
  carrier_solution_floating: primitiveTypes.bool,
  carrier_solution_fixed: primitiveTypes.bool,
  moving_base_mode: primitiveTypes.bool,
  reference_position_miss: primitiveTypes.bool,
  reference_observations_miss: primitiveTypes.bool,
  heading_valid: primitiveTypes.bool,
  relative_position_normalized: primitiveTypes.bool,
});
const SensorGnssRelativeRefArray = ArrayType(SensorGnssRelativeRefStruct);
const SensorGnssRelativeRefStructArray = StructType({
  data: SensorGnssRelativeRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class SensorGnssRelativeWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new SensorGnssRelativeRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_sampleIntialized = true;
      this._device_idIntialized = true;
      this._time_utc_usecIntialized = true;
      this._reference_station_idIntialized = true;
      this._wrapperFields.position = Float32Wrapper.createArray();
      this._wrapperFields.position.copy(other._wrapperFields.position);
      this._wrapperFields.position_accuracy = Float32Wrapper.createArray();
      this._wrapperFields.position_accuracy.copy(other._wrapperFields.position_accuracy);
      this._headingIntialized = true;
      this._heading_accuracyIntialized = true;
      this._position_lengthIntialized = true;
      this._accuracy_lengthIntialized = true;
      this._gnss_fix_okIntialized = true;
      this._differential_solutionIntialized = true;
      this._relative_position_validIntialized = true;
      this._carrier_solution_floatingIntialized = true;
      this._carrier_solution_fixedIntialized = true;
      this._moving_base_modeIntialized = true;
      this._reference_position_missIntialized = true;
      this._reference_observations_missIntialized = true;
      this._heading_validIntialized = true;
      this._relative_position_normalizedIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new SensorGnssRelativeRefStruct();
    this._timestampIntialized = false;
    this._timestamp_sampleIntialized = false;
    this._device_idIntialized = false;
    this._time_utc_usecIntialized = false;
    this._reference_station_idIntialized = false;
    this._wrapperFields.position = Float32Wrapper.createArray();
    this._wrapperFields.position_accuracy = Float32Wrapper.createArray();
    this._headingIntialized = false;
    this._heading_accuracyIntialized = false;
    this._position_lengthIntialized = false;
    this._accuracy_lengthIntialized = false;
    this._gnss_fix_okIntialized = false;
    this._differential_solutionIntialized = false;
    this._relative_position_validIntialized = false;
    this._carrier_solution_floatingIntialized = false;
    this._carrier_solution_fixedIntialized = false;
    this._moving_base_modeIntialized = false;
    this._reference_position_missIntialized = false;
    this._reference_observations_missIntialized = false;
    this._heading_validIntialized = false;
    this._relative_position_normalizedIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new SensorGnssRelativeWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new SensorGnssRelativeArrayWrapper;
  }
  static get ArrayType() {
    return SensorGnssRelativeArrayWrapper;
  }
  static get refObjectArrayType() {
    return SensorGnssRelativeRefStructArray
  }
  static get refObjectType() {
    return SensorGnssRelativeRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in SensorGnssRelative');
      }
      if (checkConsistency && !this._timestamp_sampleIntialized) {
        throw new TypeError('Invalid argument: timestamp_sample in SensorGnssRelative');
      }
      if (checkConsistency && !this._device_idIntialized) {
        throw new TypeError('Invalid argument: device_id in SensorGnssRelative');
      }
      if (checkConsistency && !this._time_utc_usecIntialized) {
        throw new TypeError('Invalid argument: time_utc_usec in SensorGnssRelative');
      }
      if (checkConsistency && !this._reference_station_idIntialized) {
        throw new TypeError('Invalid argument: reference_station_id in SensorGnssRelative');
      }
      if (checkConsistency && !this._headingIntialized) {
        throw new TypeError('Invalid argument: heading in SensorGnssRelative');
      }
      if (checkConsistency && !this._heading_accuracyIntialized) {
        throw new TypeError('Invalid argument: heading_accuracy in SensorGnssRelative');
      }
      if (checkConsistency && !this._position_lengthIntialized) {
        throw new TypeError('Invalid argument: position_length in SensorGnssRelative');
      }
      if (checkConsistency && !this._accuracy_lengthIntialized) {
        throw new TypeError('Invalid argument: accuracy_length in SensorGnssRelative');
      }
      if (checkConsistency && !this._gnss_fix_okIntialized) {
        throw new TypeError('Invalid argument: gnss_fix_ok in SensorGnssRelative');
      }
      if (checkConsistency && !this._differential_solutionIntialized) {
        throw new TypeError('Invalid argument: differential_solution in SensorGnssRelative');
      }
      if (checkConsistency && !this._relative_position_validIntialized) {
        throw new TypeError('Invalid argument: relative_position_valid in SensorGnssRelative');
      }
      if (checkConsistency && !this._carrier_solution_floatingIntialized) {
        throw new TypeError('Invalid argument: carrier_solution_floating in SensorGnssRelative');
      }
      if (checkConsistency && !this._carrier_solution_fixedIntialized) {
        throw new TypeError('Invalid argument: carrier_solution_fixed in SensorGnssRelative');
      }
      if (checkConsistency && !this._moving_base_modeIntialized) {
        throw new TypeError('Invalid argument: moving_base_mode in SensorGnssRelative');
      }
      if (checkConsistency && !this._reference_position_missIntialized) {
        throw new TypeError('Invalid argument: reference_position_miss in SensorGnssRelative');
      }
      if (checkConsistency && !this._reference_observations_missIntialized) {
        throw new TypeError('Invalid argument: reference_observations_miss in SensorGnssRelative');
      }
      if (checkConsistency && !this._heading_validIntialized) {
        throw new TypeError('Invalid argument: heading_valid in SensorGnssRelative');
      }
      if (checkConsistency && !this._relative_position_normalizedIntialized) {
        throw new TypeError('Invalid argument: relative_position_normalized in SensorGnssRelative');
      }
    this._refObject.position = Array.from(this._wrapperFields.position.data);
    this._refObject.position_accuracy = Array.from(this._wrapperFields.position_accuracy.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = refObject.timestamp_sample;
    this._device_idIntialized = true;
    this._refObject.device_id = refObject.device_id;
    this._time_utc_usecIntialized = true;
    this._refObject.time_utc_usec = refObject.time_utc_usec;
    this._reference_station_idIntialized = true;
    this._refObject.reference_station_id = refObject.reference_station_id;
    this._wrapperFields.position.fill(refObject.position.toArray());
    this._wrapperFields.position_accuracy.fill(refObject.position_accuracy.toArray());
    this._headingIntialized = true;
    this._refObject.heading = refObject.heading;
    this._heading_accuracyIntialized = true;
    this._refObject.heading_accuracy = refObject.heading_accuracy;
    this._position_lengthIntialized = true;
    this._refObject.position_length = refObject.position_length;
    this._accuracy_lengthIntialized = true;
    this._refObject.accuracy_length = refObject.accuracy_length;
    this._gnss_fix_okIntialized = true;
    this._refObject.gnss_fix_ok = refObject.gnss_fix_ok;
    this._differential_solutionIntialized = true;
    this._refObject.differential_solution = refObject.differential_solution;
    this._relative_position_validIntialized = true;
    this._refObject.relative_position_valid = refObject.relative_position_valid;
    this._carrier_solution_floatingIntialized = true;
    this._refObject.carrier_solution_floating = refObject.carrier_solution_floating;
    this._carrier_solution_fixedIntialized = true;
    this._refObject.carrier_solution_fixed = refObject.carrier_solution_fixed;
    this._moving_base_modeIntialized = true;
    this._refObject.moving_base_mode = refObject.moving_base_mode;
    this._reference_position_missIntialized = true;
    this._refObject.reference_position_miss = refObject.reference_position_miss;
    this._reference_observations_missIntialized = true;
    this._refObject.reference_observations_miss = refObject.reference_observations_miss;
    this._heading_validIntialized = true;
    this._refObject.heading_valid = refObject.heading_valid;
    this._relative_position_normalizedIntialized = true;
    this._refObject.relative_position_normalized = refObject.relative_position_normalized;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    SensorGnssRelativeWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'SensorGnssRelative'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_sample() {
    if (!this._timestamp_sampleIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_sample;
  }
  set timestamp_sample(value) {
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = value;
  }
  get device_id() {
    if (!this._device_idIntialized) {
      return undefined;
    }
    return this._refObject.device_id;
  }
  set device_id(value) {
    this._device_idIntialized = true;
    this._refObject.device_id = value;
  }
  get time_utc_usec() {
    if (!this._time_utc_usecIntialized) {
      return undefined;
    }
    return this._refObject.time_utc_usec;
  }
  set time_utc_usec(value) {
    this._time_utc_usecIntialized = true;
    this._refObject.time_utc_usec = value;
  }
  get reference_station_id() {
    if (!this._reference_station_idIntialized) {
      return undefined;
    }
    return this._refObject.reference_station_id;
  }
  set reference_station_id(value) {
    this._reference_station_idIntialized = true;
    this._refObject.reference_station_id = value;
  }
  get position() {
    return this._wrapperFields['position'].data;
  }
  set position(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['position'].fill(value);
  }
  get position_accuracy() {
    return this._wrapperFields['position_accuracy'].data;
  }
  set position_accuracy(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['position_accuracy'].fill(value);
  }
  get heading() {
    if (!this._headingIntialized) {
      return undefined;
    }
    return this._refObject.heading;
  }
  set heading(value) {
    this._headingIntialized = true;
    this._refObject.heading = value;
  }
  get heading_accuracy() {
    if (!this._heading_accuracyIntialized) {
      return undefined;
    }
    return this._refObject.heading_accuracy;
  }
  set heading_accuracy(value) {
    this._heading_accuracyIntialized = true;
    this._refObject.heading_accuracy = value;
  }
  get position_length() {
    if (!this._position_lengthIntialized) {
      return undefined;
    }
    return this._refObject.position_length;
  }
  set position_length(value) {
    this._position_lengthIntialized = true;
    this._refObject.position_length = value;
  }
  get accuracy_length() {
    if (!this._accuracy_lengthIntialized) {
      return undefined;
    }
    return this._refObject.accuracy_length;
  }
  set accuracy_length(value) {
    this._accuracy_lengthIntialized = true;
    this._refObject.accuracy_length = value;
  }
  get gnss_fix_ok() {
    if (!this._gnss_fix_okIntialized) {
      return undefined;
    }
    return this._refObject.gnss_fix_ok;
  }
  set gnss_fix_ok(value) {
    this._gnss_fix_okIntialized = true;
    this._refObject.gnss_fix_ok = value;
  }
  get differential_solution() {
    if (!this._differential_solutionIntialized) {
      return undefined;
    }
    return this._refObject.differential_solution;
  }
  set differential_solution(value) {
    this._differential_solutionIntialized = true;
    this._refObject.differential_solution = value;
  }
  get relative_position_valid() {
    if (!this._relative_position_validIntialized) {
      return undefined;
    }
    return this._refObject.relative_position_valid;
  }
  set relative_position_valid(value) {
    this._relative_position_validIntialized = true;
    this._refObject.relative_position_valid = value;
  }
  get carrier_solution_floating() {
    if (!this._carrier_solution_floatingIntialized) {
      return undefined;
    }
    return this._refObject.carrier_solution_floating;
  }
  set carrier_solution_floating(value) {
    this._carrier_solution_floatingIntialized = true;
    this._refObject.carrier_solution_floating = value;
  }
  get carrier_solution_fixed() {
    if (!this._carrier_solution_fixedIntialized) {
      return undefined;
    }
    return this._refObject.carrier_solution_fixed;
  }
  set carrier_solution_fixed(value) {
    this._carrier_solution_fixedIntialized = true;
    this._refObject.carrier_solution_fixed = value;
  }
  get moving_base_mode() {
    if (!this._moving_base_modeIntialized) {
      return undefined;
    }
    return this._refObject.moving_base_mode;
  }
  set moving_base_mode(value) {
    this._moving_base_modeIntialized = true;
    this._refObject.moving_base_mode = value;
  }
  get reference_position_miss() {
    if (!this._reference_position_missIntialized) {
      return undefined;
    }
    return this._refObject.reference_position_miss;
  }
  set reference_position_miss(value) {
    this._reference_position_missIntialized = true;
    this._refObject.reference_position_miss = value;
  }
  get reference_observations_miss() {
    if (!this._reference_observations_missIntialized) {
      return undefined;
    }
    return this._refObject.reference_observations_miss;
  }
  set reference_observations_miss(value) {
    this._reference_observations_missIntialized = true;
    this._refObject.reference_observations_miss = value;
  }
  get heading_valid() {
    if (!this._heading_validIntialized) {
      return undefined;
    }
    return this._refObject.heading_valid;
  }
  set heading_valid(value) {
    this._heading_validIntialized = true;
    this._refObject.heading_valid = value;
  }
  get relative_position_normalized() {
    if (!this._relative_position_normalizedIntialized) {
      return undefined;
    }
    return this._refObject.relative_position_normalized;
  }
  set relative_position_normalized(value) {
    this._relative_position_normalizedIntialized = true;
    this._refObject.relative_position_normalized = value;
  }
  copyRefObject(refObject) {
    this._refObject = new SensorGnssRelativeRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._device_idIntialized = true;
    this._time_utc_usecIntialized = true;
    this._reference_station_idIntialized = true;
    this._wrapperFields.position.fill(refObject.position.toArray());
    this._wrapperFields.position_accuracy.fill(refObject.position_accuracy.toArray());
    this._headingIntialized = true;
    this._heading_accuracyIntialized = true;
    this._position_lengthIntialized = true;
    this._accuracy_lengthIntialized = true;
    this._gnss_fix_okIntialized = true;
    this._differential_solutionIntialized = true;
    this._relative_position_validIntialized = true;
    this._carrier_solution_floatingIntialized = true;
    this._carrier_solution_fixedIntialized = true;
    this._moving_base_modeIntialized = true;
    this._reference_position_missIntialized = true;
    this._reference_observations_missIntialized = true;
    this._heading_validIntialized = true;
    this._relative_position_normalizedIntialized = true;
  }
  copy(other) {
    this._refObject = new SensorGnssRelativeRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._device_idIntialized = true;
    this._time_utc_usecIntialized = true;
    this._reference_station_idIntialized = true;
    this._wrapperFields.position.copy(other._wrapperFields.position);
    this._wrapperFields.position_accuracy.copy(other._wrapperFields.position_accuracy);
    this._headingIntialized = true;
    this._heading_accuracyIntialized = true;
    this._position_lengthIntialized = true;
    this._accuracy_lengthIntialized = true;
    this._gnss_fix_okIntialized = true;
    this._differential_solutionIntialized = true;
    this._relative_position_validIntialized = true;
    this._carrier_solution_floatingIntialized = true;
    this._carrier_solution_fixedIntialized = true;
    this._moving_base_modeIntialized = true;
    this._reference_position_missIntialized = true;
    this._reference_observations_missIntialized = true;
    this._heading_validIntialized = true;
    this._relative_position_normalizedIntialized = true;
  }
  static get classType() {
    return SensorGnssRelativeWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_sample","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_utc_usec","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"reference_station_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position_accuracy","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading_accuracy","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position_length","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accuracy_length","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gnss_fix_ok","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"differential_solution","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"relative_position_valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"carrier_solution_floating","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"carrier_solution_fixed","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"moving_base_mode","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"reference_position_miss","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"reference_observations_miss","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading_valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"relative_position_normalized","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"SensorGnssRelative","stringUpperBound":null,"isPrimitiveType":false},"msgName":"SensorGnssRelative"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_sample","device_id","time_utc_usec","reference_station_id","position","position_accuracy","heading","heading_accuracy","position_length","accuracy_length","gnss_fix_ok","differential_solution","relative_position_valid","carrier_solution_floating","carrier_solution_fixed","moving_base_mode","reference_position_miss","reference_observations_miss","heading_valid","relative_position_normalized"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class SensorGnssRelativeArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof SensorGnssRelativeWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new SensorGnssRelativeWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorGnssRelativeArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorGnssRelativeArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new SensorGnssRelativeRefArray(size);
    this._refObject = new SensorGnssRelativeRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new SensorGnssRelativeWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof SensorGnssRelativeArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "SensorGnssRelativeArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      SensorGnssRelativeWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return SensorGnssRelativeWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return SensorGnssRelativeArrayWrapper;
  }
}
module.exports = SensorGnssRelativeWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_sample",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_utc_usec",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "reference_station_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position_accuracy",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading_accuracy",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position_length",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accuracy_length",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gnss_fix_ok",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "differential_solution",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "relative_position_valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "carrier_solution_floating",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "carrier_solution_fixed",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "moving_base_mode",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "reference_position_miss",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "reference_observations_miss",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading_valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "relative_position_normalized",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "SensorGnssRelative",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "SensorGnssRelative"
}
*/
