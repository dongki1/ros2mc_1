// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const ManualControlSetpointRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_sample: primitiveTypes.uint64,
  valid: primitiveTypes.bool,
  data_source: primitiveTypes.uint8,
  roll: primitiveTypes.float32,
  pitch: primitiveTypes.float32,
  yaw: primitiveTypes.float32,
  throttle: primitiveTypes.float32,
  flaps: primitiveTypes.float32,
  aux1: primitiveTypes.float32,
  aux2: primitiveTypes.float32,
  aux3: primitiveTypes.float32,
  aux4: primitiveTypes.float32,
  aux5: primitiveTypes.float32,
  aux6: primitiveTypes.float32,
  sticks_moving: primitiveTypes.bool,
});
const ManualControlSetpointRefArray = ArrayType(ManualControlSetpointRefStruct);
const ManualControlSetpointRefStructArray = StructType({
  data: ManualControlSetpointRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class ManualControlSetpointWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new ManualControlSetpointRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_sampleIntialized = true;
      this._validIntialized = true;
      this._data_sourceIntialized = true;
      this._rollIntialized = true;
      this._pitchIntialized = true;
      this._yawIntialized = true;
      this._throttleIntialized = true;
      this._flapsIntialized = true;
      this._aux1Intialized = true;
      this._aux2Intialized = true;
      this._aux3Intialized = true;
      this._aux4Intialized = true;
      this._aux5Intialized = true;
      this._aux6Intialized = true;
      this._sticks_movingIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new ManualControlSetpointRefStruct();
    this._timestampIntialized = false;
    this._timestamp_sampleIntialized = false;
    this._validIntialized = false;
    this._data_sourceIntialized = false;
    this._rollIntialized = false;
    this._pitchIntialized = false;
    this._yawIntialized = false;
    this._throttleIntialized = false;
    this._flapsIntialized = false;
    this._aux1Intialized = false;
    this._aux2Intialized = false;
    this._aux3Intialized = false;
    this._aux4Intialized = false;
    this._aux5Intialized = false;
    this._aux6Intialized = false;
    this._sticks_movingIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new ManualControlSetpointWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new ManualControlSetpointArrayWrapper;
  }
  static get ArrayType() {
    return ManualControlSetpointArrayWrapper;
  }
  static get refObjectArrayType() {
    return ManualControlSetpointRefStructArray
  }
  static get refObjectType() {
    return ManualControlSetpointRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in ManualControlSetpoint');
      }
      if (checkConsistency && !this._timestamp_sampleIntialized) {
        throw new TypeError('Invalid argument: timestamp_sample in ManualControlSetpoint');
      }
      if (checkConsistency && !this._validIntialized) {
        throw new TypeError('Invalid argument: valid in ManualControlSetpoint');
      }
      if (checkConsistency && !this._data_sourceIntialized) {
        throw new TypeError('Invalid argument: data_source in ManualControlSetpoint');
      }
      if (checkConsistency && !this._rollIntialized) {
        throw new TypeError('Invalid argument: roll in ManualControlSetpoint');
      }
      if (checkConsistency && !this._pitchIntialized) {
        throw new TypeError('Invalid argument: pitch in ManualControlSetpoint');
      }
      if (checkConsistency && !this._yawIntialized) {
        throw new TypeError('Invalid argument: yaw in ManualControlSetpoint');
      }
      if (checkConsistency && !this._throttleIntialized) {
        throw new TypeError('Invalid argument: throttle in ManualControlSetpoint');
      }
      if (checkConsistency && !this._flapsIntialized) {
        throw new TypeError('Invalid argument: flaps in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux1Intialized) {
        throw new TypeError('Invalid argument: aux1 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux2Intialized) {
        throw new TypeError('Invalid argument: aux2 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux3Intialized) {
        throw new TypeError('Invalid argument: aux3 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux4Intialized) {
        throw new TypeError('Invalid argument: aux4 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux5Intialized) {
        throw new TypeError('Invalid argument: aux5 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._aux6Intialized) {
        throw new TypeError('Invalid argument: aux6 in ManualControlSetpoint');
      }
      if (checkConsistency && !this._sticks_movingIntialized) {
        throw new TypeError('Invalid argument: sticks_moving in ManualControlSetpoint');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = refObject.timestamp_sample;
    this._validIntialized = true;
    this._refObject.valid = refObject.valid;
    this._data_sourceIntialized = true;
    this._refObject.data_source = refObject.data_source;
    this._rollIntialized = true;
    this._refObject.roll = refObject.roll;
    this._pitchIntialized = true;
    this._refObject.pitch = refObject.pitch;
    this._yawIntialized = true;
    this._refObject.yaw = refObject.yaw;
    this._throttleIntialized = true;
    this._refObject.throttle = refObject.throttle;
    this._flapsIntialized = true;
    this._refObject.flaps = refObject.flaps;
    this._aux1Intialized = true;
    this._refObject.aux1 = refObject.aux1;
    this._aux2Intialized = true;
    this._refObject.aux2 = refObject.aux2;
    this._aux3Intialized = true;
    this._refObject.aux3 = refObject.aux3;
    this._aux4Intialized = true;
    this._refObject.aux4 = refObject.aux4;
    this._aux5Intialized = true;
    this._refObject.aux5 = refObject.aux5;
    this._aux6Intialized = true;
    this._refObject.aux6 = refObject.aux6;
    this._sticks_movingIntialized = true;
    this._refObject.sticks_moving = refObject.sticks_moving;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    ManualControlSetpointWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'ManualControlSetpoint'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_sample() {
    if (!this._timestamp_sampleIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_sample;
  }
  set timestamp_sample(value) {
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = value;
  }
  get valid() {
    if (!this._validIntialized) {
      return undefined;
    }
    return this._refObject.valid;
  }
  set valid(value) {
    this._validIntialized = true;
    this._refObject.valid = value;
  }
  get data_source() {
    if (!this._data_sourceIntialized) {
      return undefined;
    }
    return this._refObject.data_source;
  }
  set data_source(value) {
    this._data_sourceIntialized = true;
    this._refObject.data_source = value;
  }
  get roll() {
    if (!this._rollIntialized) {
      return undefined;
    }
    return this._refObject.roll;
  }
  set roll(value) {
    this._rollIntialized = true;
    this._refObject.roll = value;
  }
  get pitch() {
    if (!this._pitchIntialized) {
      return undefined;
    }
    return this._refObject.pitch;
  }
  set pitch(value) {
    this._pitchIntialized = true;
    this._refObject.pitch = value;
  }
  get yaw() {
    if (!this._yawIntialized) {
      return undefined;
    }
    return this._refObject.yaw;
  }
  set yaw(value) {
    this._yawIntialized = true;
    this._refObject.yaw = value;
  }
  get throttle() {
    if (!this._throttleIntialized) {
      return undefined;
    }
    return this._refObject.throttle;
  }
  set throttle(value) {
    this._throttleIntialized = true;
    this._refObject.throttle = value;
  }
  get flaps() {
    if (!this._flapsIntialized) {
      return undefined;
    }
    return this._refObject.flaps;
  }
  set flaps(value) {
    this._flapsIntialized = true;
    this._refObject.flaps = value;
  }
  get aux1() {
    if (!this._aux1Intialized) {
      return undefined;
    }
    return this._refObject.aux1;
  }
  set aux1(value) {
    this._aux1Intialized = true;
    this._refObject.aux1 = value;
  }
  get aux2() {
    if (!this._aux2Intialized) {
      return undefined;
    }
    return this._refObject.aux2;
  }
  set aux2(value) {
    this._aux2Intialized = true;
    this._refObject.aux2 = value;
  }
  get aux3() {
    if (!this._aux3Intialized) {
      return undefined;
    }
    return this._refObject.aux3;
  }
  set aux3(value) {
    this._aux3Intialized = true;
    this._refObject.aux3 = value;
  }
  get aux4() {
    if (!this._aux4Intialized) {
      return undefined;
    }
    return this._refObject.aux4;
  }
  set aux4(value) {
    this._aux4Intialized = true;
    this._refObject.aux4 = value;
  }
  get aux5() {
    if (!this._aux5Intialized) {
      return undefined;
    }
    return this._refObject.aux5;
  }
  set aux5(value) {
    this._aux5Intialized = true;
    this._refObject.aux5 = value;
  }
  get aux6() {
    if (!this._aux6Intialized) {
      return undefined;
    }
    return this._refObject.aux6;
  }
  set aux6(value) {
    this._aux6Intialized = true;
    this._refObject.aux6 = value;
  }
  get sticks_moving() {
    if (!this._sticks_movingIntialized) {
      return undefined;
    }
    return this._refObject.sticks_moving;
  }
  set sticks_moving(value) {
    this._sticks_movingIntialized = true;
    this._refObject.sticks_moving = value;
  }
  copyRefObject(refObject) {
    this._refObject = new ManualControlSetpointRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._validIntialized = true;
    this._data_sourceIntialized = true;
    this._rollIntialized = true;
    this._pitchIntialized = true;
    this._yawIntialized = true;
    this._throttleIntialized = true;
    this._flapsIntialized = true;
    this._aux1Intialized = true;
    this._aux2Intialized = true;
    this._aux3Intialized = true;
    this._aux4Intialized = true;
    this._aux5Intialized = true;
    this._aux6Intialized = true;
    this._sticks_movingIntialized = true;
  }
  copy(other) {
    this._refObject = new ManualControlSetpointRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._validIntialized = true;
    this._data_sourceIntialized = true;
    this._rollIntialized = true;
    this._pitchIntialized = true;
    this._yawIntialized = true;
    this._throttleIntialized = true;
    this._flapsIntialized = true;
    this._aux1Intialized = true;
    this._aux2Intialized = true;
    this._aux3Intialized = true;
    this._aux4Intialized = true;
    this._aux5Intialized = true;
    this._aux6Intialized = true;
    this._sticks_movingIntialized = true;
  }
  static get classType() {
    return ManualControlSetpointWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"SOURCE_UNKNOWN","value":0},{"type":"uint8","name":"SOURCE_RC","value":1},{"type":"uint8","name":"SOURCE_MAVLINK_0","value":2},{"type":"uint8","name":"SOURCE_MAVLINK_1","value":3},{"type":"uint8","name":"SOURCE_MAVLINK_2","value":4},{"type":"uint8","name":"SOURCE_MAVLINK_3","value":5},{"type":"uint8","name":"SOURCE_MAVLINK_4","value":6},{"type":"uint8","name":"SOURCE_MAVLINK_5","value":7}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_sample","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"data_source","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"roll","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"pitch","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"yaw","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"throttle","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"flaps","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux1","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux2","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux3","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux4","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux5","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"aux6","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"sticks_moving","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"ManualControlSetpoint","stringUpperBound":null,"isPrimitiveType":false},"msgName":"ManualControlSetpoint"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_sample","valid","data_source","roll","pitch","yaw","throttle","flaps","aux1","aux2","aux3","aux4","aux5","aux6","sticks_moving"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class ManualControlSetpointArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof ManualControlSetpointWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new ManualControlSetpointWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ManualControlSetpointArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ManualControlSetpointArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new ManualControlSetpointRefArray(size);
    this._refObject = new ManualControlSetpointRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new ManualControlSetpointWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof ManualControlSetpointArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "ManualControlSetpointArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      ManualControlSetpointWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return ManualControlSetpointWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return ManualControlSetpointArrayWrapper;
  }
}
// Define constants (8 in total)
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_RC", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_0", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_1", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_2", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_3", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_4", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(ManualControlSetpointWrapper, "SOURCE_MAVLINK_5", {value: 7, writable: false, enumerable: true, configurable: true});
module.exports = ManualControlSetpointWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "SOURCE_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "SOURCE_RC",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_0",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_1",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_2",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_3",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_4",
      "value": 6
    },
    {
      "type": "uint8",
      "name": "SOURCE_MAVLINK_5",
      "value": 7
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_sample",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "data_source",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "roll",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "pitch",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "yaw",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "throttle",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "flaps",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux1",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux2",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux3",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux4",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux5",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "aux6",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "sticks_moving",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "ManualControlSetpoint",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "ManualControlSetpoint"
}
*/
