// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const UInt32Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt32.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const SensorCorrectionRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  gyro_device_ids: ArrayType(primitiveTypes.uint32, 4),
  gyro_temperature: ArrayType(primitiveTypes.float32, 4),
  gyro_offset_0: ArrayType(primitiveTypes.float32, 3),
  gyro_offset_1: ArrayType(primitiveTypes.float32, 3),
  gyro_offset_2: ArrayType(primitiveTypes.float32, 3),
  gyro_offset_3: ArrayType(primitiveTypes.float32, 3),
  accel_device_ids: ArrayType(primitiveTypes.uint32, 4),
  accel_temperature: ArrayType(primitiveTypes.float32, 4),
  accel_offset_0: ArrayType(primitiveTypes.float32, 3),
  accel_offset_1: ArrayType(primitiveTypes.float32, 3),
  accel_offset_2: ArrayType(primitiveTypes.float32, 3),
  accel_offset_3: ArrayType(primitiveTypes.float32, 3),
  baro_device_ids: ArrayType(primitiveTypes.uint32, 4),
  baro_temperature: ArrayType(primitiveTypes.float32, 4),
  baro_offset_0: primitiveTypes.float32,
  baro_offset_1: primitiveTypes.float32,
  baro_offset_2: primitiveTypes.float32,
  baro_offset_3: primitiveTypes.float32,
});
const SensorCorrectionRefArray = ArrayType(SensorCorrectionRefStruct);
const SensorCorrectionRefStructArray = StructType({
  data: SensorCorrectionRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class SensorCorrectionWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new SensorCorrectionRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._wrapperFields.gyro_device_ids = UInt32Wrapper.createArray();
      this._wrapperFields.gyro_device_ids.copy(other._wrapperFields.gyro_device_ids);
      this._wrapperFields.gyro_temperature = Float32Wrapper.createArray();
      this._wrapperFields.gyro_temperature.copy(other._wrapperFields.gyro_temperature);
      this._wrapperFields.gyro_offset_0 = Float32Wrapper.createArray();
      this._wrapperFields.gyro_offset_0.copy(other._wrapperFields.gyro_offset_0);
      this._wrapperFields.gyro_offset_1 = Float32Wrapper.createArray();
      this._wrapperFields.gyro_offset_1.copy(other._wrapperFields.gyro_offset_1);
      this._wrapperFields.gyro_offset_2 = Float32Wrapper.createArray();
      this._wrapperFields.gyro_offset_2.copy(other._wrapperFields.gyro_offset_2);
      this._wrapperFields.gyro_offset_3 = Float32Wrapper.createArray();
      this._wrapperFields.gyro_offset_3.copy(other._wrapperFields.gyro_offset_3);
      this._wrapperFields.accel_device_ids = UInt32Wrapper.createArray();
      this._wrapperFields.accel_device_ids.copy(other._wrapperFields.accel_device_ids);
      this._wrapperFields.accel_temperature = Float32Wrapper.createArray();
      this._wrapperFields.accel_temperature.copy(other._wrapperFields.accel_temperature);
      this._wrapperFields.accel_offset_0 = Float32Wrapper.createArray();
      this._wrapperFields.accel_offset_0.copy(other._wrapperFields.accel_offset_0);
      this._wrapperFields.accel_offset_1 = Float32Wrapper.createArray();
      this._wrapperFields.accel_offset_1.copy(other._wrapperFields.accel_offset_1);
      this._wrapperFields.accel_offset_2 = Float32Wrapper.createArray();
      this._wrapperFields.accel_offset_2.copy(other._wrapperFields.accel_offset_2);
      this._wrapperFields.accel_offset_3 = Float32Wrapper.createArray();
      this._wrapperFields.accel_offset_3.copy(other._wrapperFields.accel_offset_3);
      this._wrapperFields.baro_device_ids = UInt32Wrapper.createArray();
      this._wrapperFields.baro_device_ids.copy(other._wrapperFields.baro_device_ids);
      this._wrapperFields.baro_temperature = Float32Wrapper.createArray();
      this._wrapperFields.baro_temperature.copy(other._wrapperFields.baro_temperature);
      this._baro_offset_0Intialized = true;
      this._baro_offset_1Intialized = true;
      this._baro_offset_2Intialized = true;
      this._baro_offset_3Intialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new SensorCorrectionRefStruct();
    this._timestampIntialized = false;
    this._wrapperFields.gyro_device_ids = UInt32Wrapper.createArray();
    this._wrapperFields.gyro_temperature = Float32Wrapper.createArray();
    this._wrapperFields.gyro_offset_0 = Float32Wrapper.createArray();
    this._wrapperFields.gyro_offset_1 = Float32Wrapper.createArray();
    this._wrapperFields.gyro_offset_2 = Float32Wrapper.createArray();
    this._wrapperFields.gyro_offset_3 = Float32Wrapper.createArray();
    this._wrapperFields.accel_device_ids = UInt32Wrapper.createArray();
    this._wrapperFields.accel_temperature = Float32Wrapper.createArray();
    this._wrapperFields.accel_offset_0 = Float32Wrapper.createArray();
    this._wrapperFields.accel_offset_1 = Float32Wrapper.createArray();
    this._wrapperFields.accel_offset_2 = Float32Wrapper.createArray();
    this._wrapperFields.accel_offset_3 = Float32Wrapper.createArray();
    this._wrapperFields.baro_device_ids = UInt32Wrapper.createArray();
    this._wrapperFields.baro_temperature = Float32Wrapper.createArray();
    this._baro_offset_0Intialized = false;
    this._baro_offset_1Intialized = false;
    this._baro_offset_2Intialized = false;
    this._baro_offset_3Intialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new SensorCorrectionWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new SensorCorrectionArrayWrapper;
  }
  static get ArrayType() {
    return SensorCorrectionArrayWrapper;
  }
  static get refObjectArrayType() {
    return SensorCorrectionRefStructArray
  }
  static get refObjectType() {
    return SensorCorrectionRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in SensorCorrection');
      }
      if (checkConsistency && !this._baro_offset_0Intialized) {
        throw new TypeError('Invalid argument: baro_offset_0 in SensorCorrection');
      }
      if (checkConsistency && !this._baro_offset_1Intialized) {
        throw new TypeError('Invalid argument: baro_offset_1 in SensorCorrection');
      }
      if (checkConsistency && !this._baro_offset_2Intialized) {
        throw new TypeError('Invalid argument: baro_offset_2 in SensorCorrection');
      }
      if (checkConsistency && !this._baro_offset_3Intialized) {
        throw new TypeError('Invalid argument: baro_offset_3 in SensorCorrection');
      }
    this._refObject.gyro_device_ids = Array.from(this._wrapperFields.gyro_device_ids.data);
    this._refObject.gyro_temperature = Array.from(this._wrapperFields.gyro_temperature.data);
    this._refObject.gyro_offset_0 = Array.from(this._wrapperFields.gyro_offset_0.data);
    this._refObject.gyro_offset_1 = Array.from(this._wrapperFields.gyro_offset_1.data);
    this._refObject.gyro_offset_2 = Array.from(this._wrapperFields.gyro_offset_2.data);
    this._refObject.gyro_offset_3 = Array.from(this._wrapperFields.gyro_offset_3.data);
    this._refObject.accel_device_ids = Array.from(this._wrapperFields.accel_device_ids.data);
    this._refObject.accel_temperature = Array.from(this._wrapperFields.accel_temperature.data);
    this._refObject.accel_offset_0 = Array.from(this._wrapperFields.accel_offset_0.data);
    this._refObject.accel_offset_1 = Array.from(this._wrapperFields.accel_offset_1.data);
    this._refObject.accel_offset_2 = Array.from(this._wrapperFields.accel_offset_2.data);
    this._refObject.accel_offset_3 = Array.from(this._wrapperFields.accel_offset_3.data);
    this._refObject.baro_device_ids = Array.from(this._wrapperFields.baro_device_ids.data);
    this._refObject.baro_temperature = Array.from(this._wrapperFields.baro_temperature.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._wrapperFields.gyro_device_ids.fill(refObject.gyro_device_ids.toArray());
    this._wrapperFields.gyro_temperature.fill(refObject.gyro_temperature.toArray());
    this._wrapperFields.gyro_offset_0.fill(refObject.gyro_offset_0.toArray());
    this._wrapperFields.gyro_offset_1.fill(refObject.gyro_offset_1.toArray());
    this._wrapperFields.gyro_offset_2.fill(refObject.gyro_offset_2.toArray());
    this._wrapperFields.gyro_offset_3.fill(refObject.gyro_offset_3.toArray());
    this._wrapperFields.accel_device_ids.fill(refObject.accel_device_ids.toArray());
    this._wrapperFields.accel_temperature.fill(refObject.accel_temperature.toArray());
    this._wrapperFields.accel_offset_0.fill(refObject.accel_offset_0.toArray());
    this._wrapperFields.accel_offset_1.fill(refObject.accel_offset_1.toArray());
    this._wrapperFields.accel_offset_2.fill(refObject.accel_offset_2.toArray());
    this._wrapperFields.accel_offset_3.fill(refObject.accel_offset_3.toArray());
    this._wrapperFields.baro_device_ids.fill(refObject.baro_device_ids.toArray());
    this._wrapperFields.baro_temperature.fill(refObject.baro_temperature.toArray());
    this._baro_offset_0Intialized = true;
    this._refObject.baro_offset_0 = refObject.baro_offset_0;
    this._baro_offset_1Intialized = true;
    this._refObject.baro_offset_1 = refObject.baro_offset_1;
    this._baro_offset_2Intialized = true;
    this._refObject.baro_offset_2 = refObject.baro_offset_2;
    this._baro_offset_3Intialized = true;
    this._refObject.baro_offset_3 = refObject.baro_offset_3;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    SensorCorrectionWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'SensorCorrection'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get gyro_device_ids() {
    return this._wrapperFields['gyro_device_ids'].data;
  }
  set gyro_device_ids(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['gyro_device_ids'].fill(value);
  }
  get gyro_temperature() {
    return this._wrapperFields['gyro_temperature'].data;
  }
  set gyro_temperature(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['gyro_temperature'].fill(value);
  }
  get gyro_offset_0() {
    return this._wrapperFields['gyro_offset_0'].data;
  }
  set gyro_offset_0(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['gyro_offset_0'].fill(value);
  }
  get gyro_offset_1() {
    return this._wrapperFields['gyro_offset_1'].data;
  }
  set gyro_offset_1(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['gyro_offset_1'].fill(value);
  }
  get gyro_offset_2() {
    return this._wrapperFields['gyro_offset_2'].data;
  }
  set gyro_offset_2(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['gyro_offset_2'].fill(value);
  }
  get gyro_offset_3() {
    return this._wrapperFields['gyro_offset_3'].data;
  }
  set gyro_offset_3(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['gyro_offset_3'].fill(value);
  }
  get accel_device_ids() {
    return this._wrapperFields['accel_device_ids'].data;
  }
  set accel_device_ids(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['accel_device_ids'].fill(value);
  }
  get accel_temperature() {
    return this._wrapperFields['accel_temperature'].data;
  }
  set accel_temperature(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['accel_temperature'].fill(value);
  }
  get accel_offset_0() {
    return this._wrapperFields['accel_offset_0'].data;
  }
  set accel_offset_0(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['accel_offset_0'].fill(value);
  }
  get accel_offset_1() {
    return this._wrapperFields['accel_offset_1'].data;
  }
  set accel_offset_1(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['accel_offset_1'].fill(value);
  }
  get accel_offset_2() {
    return this._wrapperFields['accel_offset_2'].data;
  }
  set accel_offset_2(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['accel_offset_2'].fill(value);
  }
  get accel_offset_3() {
    return this._wrapperFields['accel_offset_3'].data;
  }
  set accel_offset_3(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['accel_offset_3'].fill(value);
  }
  get baro_device_ids() {
    return this._wrapperFields['baro_device_ids'].data;
  }
  set baro_device_ids(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['baro_device_ids'].fill(value);
  }
  get baro_temperature() {
    return this._wrapperFields['baro_temperature'].data;
  }
  set baro_temperature(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['baro_temperature'].fill(value);
  }
  get baro_offset_0() {
    if (!this._baro_offset_0Intialized) {
      return undefined;
    }
    return this._refObject.baro_offset_0;
  }
  set baro_offset_0(value) {
    this._baro_offset_0Intialized = true;
    this._refObject.baro_offset_0 = value;
  }
  get baro_offset_1() {
    if (!this._baro_offset_1Intialized) {
      return undefined;
    }
    return this._refObject.baro_offset_1;
  }
  set baro_offset_1(value) {
    this._baro_offset_1Intialized = true;
    this._refObject.baro_offset_1 = value;
  }
  get baro_offset_2() {
    if (!this._baro_offset_2Intialized) {
      return undefined;
    }
    return this._refObject.baro_offset_2;
  }
  set baro_offset_2(value) {
    this._baro_offset_2Intialized = true;
    this._refObject.baro_offset_2 = value;
  }
  get baro_offset_3() {
    if (!this._baro_offset_3Intialized) {
      return undefined;
    }
    return this._refObject.baro_offset_3;
  }
  set baro_offset_3(value) {
    this._baro_offset_3Intialized = true;
    this._refObject.baro_offset_3 = value;
  }
  copyRefObject(refObject) {
    this._refObject = new SensorCorrectionRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._wrapperFields.gyro_device_ids.fill(refObject.gyro_device_ids.toArray());
    this._wrapperFields.gyro_temperature.fill(refObject.gyro_temperature.toArray());
    this._wrapperFields.gyro_offset_0.fill(refObject.gyro_offset_0.toArray());
    this._wrapperFields.gyro_offset_1.fill(refObject.gyro_offset_1.toArray());
    this._wrapperFields.gyro_offset_2.fill(refObject.gyro_offset_2.toArray());
    this._wrapperFields.gyro_offset_3.fill(refObject.gyro_offset_3.toArray());
    this._wrapperFields.accel_device_ids.fill(refObject.accel_device_ids.toArray());
    this._wrapperFields.accel_temperature.fill(refObject.accel_temperature.toArray());
    this._wrapperFields.accel_offset_0.fill(refObject.accel_offset_0.toArray());
    this._wrapperFields.accel_offset_1.fill(refObject.accel_offset_1.toArray());
    this._wrapperFields.accel_offset_2.fill(refObject.accel_offset_2.toArray());
    this._wrapperFields.accel_offset_3.fill(refObject.accel_offset_3.toArray());
    this._wrapperFields.baro_device_ids.fill(refObject.baro_device_ids.toArray());
    this._wrapperFields.baro_temperature.fill(refObject.baro_temperature.toArray());
    this._baro_offset_0Intialized = true;
    this._baro_offset_1Intialized = true;
    this._baro_offset_2Intialized = true;
    this._baro_offset_3Intialized = true;
  }
  copy(other) {
    this._refObject = new SensorCorrectionRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._wrapperFields.gyro_device_ids.copy(other._wrapperFields.gyro_device_ids);
    this._wrapperFields.gyro_temperature.copy(other._wrapperFields.gyro_temperature);
    this._wrapperFields.gyro_offset_0.copy(other._wrapperFields.gyro_offset_0);
    this._wrapperFields.gyro_offset_1.copy(other._wrapperFields.gyro_offset_1);
    this._wrapperFields.gyro_offset_2.copy(other._wrapperFields.gyro_offset_2);
    this._wrapperFields.gyro_offset_3.copy(other._wrapperFields.gyro_offset_3);
    this._wrapperFields.accel_device_ids.copy(other._wrapperFields.accel_device_ids);
    this._wrapperFields.accel_temperature.copy(other._wrapperFields.accel_temperature);
    this._wrapperFields.accel_offset_0.copy(other._wrapperFields.accel_offset_0);
    this._wrapperFields.accel_offset_1.copy(other._wrapperFields.accel_offset_1);
    this._wrapperFields.accel_offset_2.copy(other._wrapperFields.accel_offset_2);
    this._wrapperFields.accel_offset_3.copy(other._wrapperFields.accel_offset_3);
    this._wrapperFields.baro_device_ids.copy(other._wrapperFields.baro_device_ids);
    this._wrapperFields.baro_temperature.copy(other._wrapperFields.baro_temperature);
    this._baro_offset_0Intialized = true;
    this._baro_offset_1Intialized = true;
    this._baro_offset_2Intialized = true;
    this._baro_offset_3Intialized = true;
  }
  static get classType() {
    return SensorCorrectionWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_device_ids","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_temperature","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_offset_0","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_offset_1","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_offset_2","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_offset_3","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_device_ids","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_temperature","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_offset_0","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_offset_1","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_offset_2","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_offset_3","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_device_ids","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_temperature","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_offset_0","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_offset_1","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_offset_2","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_offset_3","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"SensorCorrection","stringUpperBound":null,"isPrimitiveType":false},"msgName":"SensorCorrection"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","gyro_device_ids","gyro_temperature","gyro_offset_0","gyro_offset_1","gyro_offset_2","gyro_offset_3","accel_device_ids","accel_temperature","accel_offset_0","accel_offset_1","accel_offset_2","accel_offset_3","baro_device_ids","baro_temperature","baro_offset_0","baro_offset_1","baro_offset_2","baro_offset_3"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class SensorCorrectionArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof SensorCorrectionWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new SensorCorrectionWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorCorrectionArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorCorrectionArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new SensorCorrectionRefArray(size);
    this._refObject = new SensorCorrectionRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new SensorCorrectionWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof SensorCorrectionArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "SensorCorrectionArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      SensorCorrectionWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return SensorCorrectionWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return SensorCorrectionArrayWrapper;
  }
}
module.exports = SensorCorrectionWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_device_ids",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_temperature",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_offset_0",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_offset_1",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_offset_2",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_offset_3",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_device_ids",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_temperature",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_offset_0",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_offset_1",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_offset_2",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_offset_3",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_device_ids",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_temperature",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_offset_0",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_offset_1",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_offset_2",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_offset_3",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "SensorCorrection",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "SensorCorrection"
}
*/
