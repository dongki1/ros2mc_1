// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const TecsStatusRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  altitude_sp: primitiveTypes.float32,
  altitude_reference: primitiveTypes.float32,
  height_rate_reference: primitiveTypes.float32,
  height_rate_direct: primitiveTypes.float32,
  height_rate_setpoint: primitiveTypes.float32,
  height_rate: primitiveTypes.float32,
  equivalent_airspeed_sp: primitiveTypes.float32,
  true_airspeed_sp: primitiveTypes.float32,
  true_airspeed_filtered: primitiveTypes.float32,
  true_airspeed_derivative_sp: primitiveTypes.float32,
  true_airspeed_derivative: primitiveTypes.float32,
  true_airspeed_derivative_raw: primitiveTypes.float32,
  total_energy_rate_sp: primitiveTypes.float32,
  total_energy_rate: primitiveTypes.float32,
  total_energy_balance_rate_sp: primitiveTypes.float32,
  total_energy_balance_rate: primitiveTypes.float32,
  throttle_integ: primitiveTypes.float32,
  pitch_integ: primitiveTypes.float32,
  throttle_sp: primitiveTypes.float32,
  pitch_sp_rad: primitiveTypes.float32,
  throttle_trim: primitiveTypes.float32,
  mode: primitiveTypes.uint8,
});
const TecsStatusRefArray = ArrayType(TecsStatusRefStruct);
const TecsStatusRefStructArray = StructType({
  data: TecsStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class TecsStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new TecsStatusRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._altitude_spIntialized = true;
      this._altitude_referenceIntialized = true;
      this._height_rate_referenceIntialized = true;
      this._height_rate_directIntialized = true;
      this._height_rate_setpointIntialized = true;
      this._height_rateIntialized = true;
      this._equivalent_airspeed_spIntialized = true;
      this._true_airspeed_spIntialized = true;
      this._true_airspeed_filteredIntialized = true;
      this._true_airspeed_derivative_spIntialized = true;
      this._true_airspeed_derivativeIntialized = true;
      this._true_airspeed_derivative_rawIntialized = true;
      this._total_energy_rate_spIntialized = true;
      this._total_energy_rateIntialized = true;
      this._total_energy_balance_rate_spIntialized = true;
      this._total_energy_balance_rateIntialized = true;
      this._throttle_integIntialized = true;
      this._pitch_integIntialized = true;
      this._throttle_spIntialized = true;
      this._pitch_sp_radIntialized = true;
      this._throttle_trimIntialized = true;
      this._modeIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new TecsStatusRefStruct();
    this._timestampIntialized = false;
    this._altitude_spIntialized = false;
    this._altitude_referenceIntialized = false;
    this._height_rate_referenceIntialized = false;
    this._height_rate_directIntialized = false;
    this._height_rate_setpointIntialized = false;
    this._height_rateIntialized = false;
    this._equivalent_airspeed_spIntialized = false;
    this._true_airspeed_spIntialized = false;
    this._true_airspeed_filteredIntialized = false;
    this._true_airspeed_derivative_spIntialized = false;
    this._true_airspeed_derivativeIntialized = false;
    this._true_airspeed_derivative_rawIntialized = false;
    this._total_energy_rate_spIntialized = false;
    this._total_energy_rateIntialized = false;
    this._total_energy_balance_rate_spIntialized = false;
    this._total_energy_balance_rateIntialized = false;
    this._throttle_integIntialized = false;
    this._pitch_integIntialized = false;
    this._throttle_spIntialized = false;
    this._pitch_sp_radIntialized = false;
    this._throttle_trimIntialized = false;
    this._modeIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new TecsStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new TecsStatusArrayWrapper;
  }
  static get ArrayType() {
    return TecsStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return TecsStatusRefStructArray
  }
  static get refObjectType() {
    return TecsStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in TecsStatus');
      }
      if (checkConsistency && !this._altitude_spIntialized) {
        throw new TypeError('Invalid argument: altitude_sp in TecsStatus');
      }
      if (checkConsistency && !this._altitude_referenceIntialized) {
        throw new TypeError('Invalid argument: altitude_reference in TecsStatus');
      }
      if (checkConsistency && !this._height_rate_referenceIntialized) {
        throw new TypeError('Invalid argument: height_rate_reference in TecsStatus');
      }
      if (checkConsistency && !this._height_rate_directIntialized) {
        throw new TypeError('Invalid argument: height_rate_direct in TecsStatus');
      }
      if (checkConsistency && !this._height_rate_setpointIntialized) {
        throw new TypeError('Invalid argument: height_rate_setpoint in TecsStatus');
      }
      if (checkConsistency && !this._height_rateIntialized) {
        throw new TypeError('Invalid argument: height_rate in TecsStatus');
      }
      if (checkConsistency && !this._equivalent_airspeed_spIntialized) {
        throw new TypeError('Invalid argument: equivalent_airspeed_sp in TecsStatus');
      }
      if (checkConsistency && !this._true_airspeed_spIntialized) {
        throw new TypeError('Invalid argument: true_airspeed_sp in TecsStatus');
      }
      if (checkConsistency && !this._true_airspeed_filteredIntialized) {
        throw new TypeError('Invalid argument: true_airspeed_filtered in TecsStatus');
      }
      if (checkConsistency && !this._true_airspeed_derivative_spIntialized) {
        throw new TypeError('Invalid argument: true_airspeed_derivative_sp in TecsStatus');
      }
      if (checkConsistency && !this._true_airspeed_derivativeIntialized) {
        throw new TypeError('Invalid argument: true_airspeed_derivative in TecsStatus');
      }
      if (checkConsistency && !this._true_airspeed_derivative_rawIntialized) {
        throw new TypeError('Invalid argument: true_airspeed_derivative_raw in TecsStatus');
      }
      if (checkConsistency && !this._total_energy_rate_spIntialized) {
        throw new TypeError('Invalid argument: total_energy_rate_sp in TecsStatus');
      }
      if (checkConsistency && !this._total_energy_rateIntialized) {
        throw new TypeError('Invalid argument: total_energy_rate in TecsStatus');
      }
      if (checkConsistency && !this._total_energy_balance_rate_spIntialized) {
        throw new TypeError('Invalid argument: total_energy_balance_rate_sp in TecsStatus');
      }
      if (checkConsistency && !this._total_energy_balance_rateIntialized) {
        throw new TypeError('Invalid argument: total_energy_balance_rate in TecsStatus');
      }
      if (checkConsistency && !this._throttle_integIntialized) {
        throw new TypeError('Invalid argument: throttle_integ in TecsStatus');
      }
      if (checkConsistency && !this._pitch_integIntialized) {
        throw new TypeError('Invalid argument: pitch_integ in TecsStatus');
      }
      if (checkConsistency && !this._throttle_spIntialized) {
        throw new TypeError('Invalid argument: throttle_sp in TecsStatus');
      }
      if (checkConsistency && !this._pitch_sp_radIntialized) {
        throw new TypeError('Invalid argument: pitch_sp_rad in TecsStatus');
      }
      if (checkConsistency && !this._throttle_trimIntialized) {
        throw new TypeError('Invalid argument: throttle_trim in TecsStatus');
      }
      if (checkConsistency && !this._modeIntialized) {
        throw new TypeError('Invalid argument: mode in TecsStatus');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._altitude_spIntialized = true;
    this._refObject.altitude_sp = refObject.altitude_sp;
    this._altitude_referenceIntialized = true;
    this._refObject.altitude_reference = refObject.altitude_reference;
    this._height_rate_referenceIntialized = true;
    this._refObject.height_rate_reference = refObject.height_rate_reference;
    this._height_rate_directIntialized = true;
    this._refObject.height_rate_direct = refObject.height_rate_direct;
    this._height_rate_setpointIntialized = true;
    this._refObject.height_rate_setpoint = refObject.height_rate_setpoint;
    this._height_rateIntialized = true;
    this._refObject.height_rate = refObject.height_rate;
    this._equivalent_airspeed_spIntialized = true;
    this._refObject.equivalent_airspeed_sp = refObject.equivalent_airspeed_sp;
    this._true_airspeed_spIntialized = true;
    this._refObject.true_airspeed_sp = refObject.true_airspeed_sp;
    this._true_airspeed_filteredIntialized = true;
    this._refObject.true_airspeed_filtered = refObject.true_airspeed_filtered;
    this._true_airspeed_derivative_spIntialized = true;
    this._refObject.true_airspeed_derivative_sp = refObject.true_airspeed_derivative_sp;
    this._true_airspeed_derivativeIntialized = true;
    this._refObject.true_airspeed_derivative = refObject.true_airspeed_derivative;
    this._true_airspeed_derivative_rawIntialized = true;
    this._refObject.true_airspeed_derivative_raw = refObject.true_airspeed_derivative_raw;
    this._total_energy_rate_spIntialized = true;
    this._refObject.total_energy_rate_sp = refObject.total_energy_rate_sp;
    this._total_energy_rateIntialized = true;
    this._refObject.total_energy_rate = refObject.total_energy_rate;
    this._total_energy_balance_rate_spIntialized = true;
    this._refObject.total_energy_balance_rate_sp = refObject.total_energy_balance_rate_sp;
    this._total_energy_balance_rateIntialized = true;
    this._refObject.total_energy_balance_rate = refObject.total_energy_balance_rate;
    this._throttle_integIntialized = true;
    this._refObject.throttle_integ = refObject.throttle_integ;
    this._pitch_integIntialized = true;
    this._refObject.pitch_integ = refObject.pitch_integ;
    this._throttle_spIntialized = true;
    this._refObject.throttle_sp = refObject.throttle_sp;
    this._pitch_sp_radIntialized = true;
    this._refObject.pitch_sp_rad = refObject.pitch_sp_rad;
    this._throttle_trimIntialized = true;
    this._refObject.throttle_trim = refObject.throttle_trim;
    this._modeIntialized = true;
    this._refObject.mode = refObject.mode;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    TecsStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'TecsStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get altitude_sp() {
    if (!this._altitude_spIntialized) {
      return undefined;
    }
    return this._refObject.altitude_sp;
  }
  set altitude_sp(value) {
    this._altitude_spIntialized = true;
    this._refObject.altitude_sp = value;
  }
  get altitude_reference() {
    if (!this._altitude_referenceIntialized) {
      return undefined;
    }
    return this._refObject.altitude_reference;
  }
  set altitude_reference(value) {
    this._altitude_referenceIntialized = true;
    this._refObject.altitude_reference = value;
  }
  get height_rate_reference() {
    if (!this._height_rate_referenceIntialized) {
      return undefined;
    }
    return this._refObject.height_rate_reference;
  }
  set height_rate_reference(value) {
    this._height_rate_referenceIntialized = true;
    this._refObject.height_rate_reference = value;
  }
  get height_rate_direct() {
    if (!this._height_rate_directIntialized) {
      return undefined;
    }
    return this._refObject.height_rate_direct;
  }
  set height_rate_direct(value) {
    this._height_rate_directIntialized = true;
    this._refObject.height_rate_direct = value;
  }
  get height_rate_setpoint() {
    if (!this._height_rate_setpointIntialized) {
      return undefined;
    }
    return this._refObject.height_rate_setpoint;
  }
  set height_rate_setpoint(value) {
    this._height_rate_setpointIntialized = true;
    this._refObject.height_rate_setpoint = value;
  }
  get height_rate() {
    if (!this._height_rateIntialized) {
      return undefined;
    }
    return this._refObject.height_rate;
  }
  set height_rate(value) {
    this._height_rateIntialized = true;
    this._refObject.height_rate = value;
  }
  get equivalent_airspeed_sp() {
    if (!this._equivalent_airspeed_spIntialized) {
      return undefined;
    }
    return this._refObject.equivalent_airspeed_sp;
  }
  set equivalent_airspeed_sp(value) {
    this._equivalent_airspeed_spIntialized = true;
    this._refObject.equivalent_airspeed_sp = value;
  }
  get true_airspeed_sp() {
    if (!this._true_airspeed_spIntialized) {
      return undefined;
    }
    return this._refObject.true_airspeed_sp;
  }
  set true_airspeed_sp(value) {
    this._true_airspeed_spIntialized = true;
    this._refObject.true_airspeed_sp = value;
  }
  get true_airspeed_filtered() {
    if (!this._true_airspeed_filteredIntialized) {
      return undefined;
    }
    return this._refObject.true_airspeed_filtered;
  }
  set true_airspeed_filtered(value) {
    this._true_airspeed_filteredIntialized = true;
    this._refObject.true_airspeed_filtered = value;
  }
  get true_airspeed_derivative_sp() {
    if (!this._true_airspeed_derivative_spIntialized) {
      return undefined;
    }
    return this._refObject.true_airspeed_derivative_sp;
  }
  set true_airspeed_derivative_sp(value) {
    this._true_airspeed_derivative_spIntialized = true;
    this._refObject.true_airspeed_derivative_sp = value;
  }
  get true_airspeed_derivative() {
    if (!this._true_airspeed_derivativeIntialized) {
      return undefined;
    }
    return this._refObject.true_airspeed_derivative;
  }
  set true_airspeed_derivative(value) {
    this._true_airspeed_derivativeIntialized = true;
    this._refObject.true_airspeed_derivative = value;
  }
  get true_airspeed_derivative_raw() {
    if (!this._true_airspeed_derivative_rawIntialized) {
      return undefined;
    }
    return this._refObject.true_airspeed_derivative_raw;
  }
  set true_airspeed_derivative_raw(value) {
    this._true_airspeed_derivative_rawIntialized = true;
    this._refObject.true_airspeed_derivative_raw = value;
  }
  get total_energy_rate_sp() {
    if (!this._total_energy_rate_spIntialized) {
      return undefined;
    }
    return this._refObject.total_energy_rate_sp;
  }
  set total_energy_rate_sp(value) {
    this._total_energy_rate_spIntialized = true;
    this._refObject.total_energy_rate_sp = value;
  }
  get total_energy_rate() {
    if (!this._total_energy_rateIntialized) {
      return undefined;
    }
    return this._refObject.total_energy_rate;
  }
  set total_energy_rate(value) {
    this._total_energy_rateIntialized = true;
    this._refObject.total_energy_rate = value;
  }
  get total_energy_balance_rate_sp() {
    if (!this._total_energy_balance_rate_spIntialized) {
      return undefined;
    }
    return this._refObject.total_energy_balance_rate_sp;
  }
  set total_energy_balance_rate_sp(value) {
    this._total_energy_balance_rate_spIntialized = true;
    this._refObject.total_energy_balance_rate_sp = value;
  }
  get total_energy_balance_rate() {
    if (!this._total_energy_balance_rateIntialized) {
      return undefined;
    }
    return this._refObject.total_energy_balance_rate;
  }
  set total_energy_balance_rate(value) {
    this._total_energy_balance_rateIntialized = true;
    this._refObject.total_energy_balance_rate = value;
  }
  get throttle_integ() {
    if (!this._throttle_integIntialized) {
      return undefined;
    }
    return this._refObject.throttle_integ;
  }
  set throttle_integ(value) {
    this._throttle_integIntialized = true;
    this._refObject.throttle_integ = value;
  }
  get pitch_integ() {
    if (!this._pitch_integIntialized) {
      return undefined;
    }
    return this._refObject.pitch_integ;
  }
  set pitch_integ(value) {
    this._pitch_integIntialized = true;
    this._refObject.pitch_integ = value;
  }
  get throttle_sp() {
    if (!this._throttle_spIntialized) {
      return undefined;
    }
    return this._refObject.throttle_sp;
  }
  set throttle_sp(value) {
    this._throttle_spIntialized = true;
    this._refObject.throttle_sp = value;
  }
  get pitch_sp_rad() {
    if (!this._pitch_sp_radIntialized) {
      return undefined;
    }
    return this._refObject.pitch_sp_rad;
  }
  set pitch_sp_rad(value) {
    this._pitch_sp_radIntialized = true;
    this._refObject.pitch_sp_rad = value;
  }
  get throttle_trim() {
    if (!this._throttle_trimIntialized) {
      return undefined;
    }
    return this._refObject.throttle_trim;
  }
  set throttle_trim(value) {
    this._throttle_trimIntialized = true;
    this._refObject.throttle_trim = value;
  }
  get mode() {
    if (!this._modeIntialized) {
      return undefined;
    }
    return this._refObject.mode;
  }
  set mode(value) {
    this._modeIntialized = true;
    this._refObject.mode = value;
  }
  copyRefObject(refObject) {
    this._refObject = new TecsStatusRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._altitude_spIntialized = true;
    this._altitude_referenceIntialized = true;
    this._height_rate_referenceIntialized = true;
    this._height_rate_directIntialized = true;
    this._height_rate_setpointIntialized = true;
    this._height_rateIntialized = true;
    this._equivalent_airspeed_spIntialized = true;
    this._true_airspeed_spIntialized = true;
    this._true_airspeed_filteredIntialized = true;
    this._true_airspeed_derivative_spIntialized = true;
    this._true_airspeed_derivativeIntialized = true;
    this._true_airspeed_derivative_rawIntialized = true;
    this._total_energy_rate_spIntialized = true;
    this._total_energy_rateIntialized = true;
    this._total_energy_balance_rate_spIntialized = true;
    this._total_energy_balance_rateIntialized = true;
    this._throttle_integIntialized = true;
    this._pitch_integIntialized = true;
    this._throttle_spIntialized = true;
    this._pitch_sp_radIntialized = true;
    this._throttle_trimIntialized = true;
    this._modeIntialized = true;
  }
  copy(other) {
    this._refObject = new TecsStatusRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._altitude_spIntialized = true;
    this._altitude_referenceIntialized = true;
    this._height_rate_referenceIntialized = true;
    this._height_rate_directIntialized = true;
    this._height_rate_setpointIntialized = true;
    this._height_rateIntialized = true;
    this._equivalent_airspeed_spIntialized = true;
    this._true_airspeed_spIntialized = true;
    this._true_airspeed_filteredIntialized = true;
    this._true_airspeed_derivative_spIntialized = true;
    this._true_airspeed_derivativeIntialized = true;
    this._true_airspeed_derivative_rawIntialized = true;
    this._total_energy_rate_spIntialized = true;
    this._total_energy_rateIntialized = true;
    this._total_energy_balance_rate_spIntialized = true;
    this._total_energy_balance_rateIntialized = true;
    this._throttle_integIntialized = true;
    this._pitch_integIntialized = true;
    this._throttle_spIntialized = true;
    this._pitch_sp_radIntialized = true;
    this._throttle_trimIntialized = true;
    this._modeIntialized = true;
  }
  static get classType() {
    return TecsStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"TECS_MODE_NORMAL","value":0},{"type":"uint8","name":"TECS_MODE_UNDERSPEED","value":1}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"altitude_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"altitude_reference","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"height_rate_reference","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"height_rate_direct","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"height_rate_setpoint","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"height_rate","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"equivalent_airspeed_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"true_airspeed_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"true_airspeed_filtered","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"true_airspeed_derivative_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"true_airspeed_derivative","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"true_airspeed_derivative_raw","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_energy_rate_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_energy_rate","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_energy_balance_rate_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"total_energy_balance_rate","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"throttle_integ","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"pitch_integ","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"throttle_sp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"pitch_sp_rad","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"throttle_trim","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mode","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"TecsStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"TecsStatus"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","altitude_sp","altitude_reference","height_rate_reference","height_rate_direct","height_rate_setpoint","height_rate","equivalent_airspeed_sp","true_airspeed_sp","true_airspeed_filtered","true_airspeed_derivative_sp","true_airspeed_derivative","true_airspeed_derivative_raw","total_energy_rate_sp","total_energy_rate","total_energy_balance_rate_sp","total_energy_balance_rate","throttle_integ","pitch_integ","throttle_sp","pitch_sp_rad","throttle_trim","mode"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class TecsStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof TecsStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new TecsStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to TecsStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to TecsStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new TecsStatusRefArray(size);
    this._refObject = new TecsStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new TecsStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof TecsStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "TecsStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      TecsStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return TecsStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return TecsStatusArrayWrapper;
  }
}
// Define constants (2 in total)
Object.defineProperty(TecsStatusWrapper, "TECS_MODE_NORMAL", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(TecsStatusWrapper, "TECS_MODE_UNDERSPEED", {value: 1, writable: false, enumerable: true, configurable: true});
module.exports = TecsStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "TECS_MODE_NORMAL",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "TECS_MODE_UNDERSPEED",
      "value": 1
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "altitude_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "altitude_reference",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "height_rate_reference",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "height_rate_direct",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "height_rate_setpoint",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "height_rate",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "equivalent_airspeed_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "true_airspeed_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "true_airspeed_filtered",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "true_airspeed_derivative_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "true_airspeed_derivative",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "true_airspeed_derivative_raw",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_energy_rate_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_energy_rate",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_energy_balance_rate_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "total_energy_balance_rate",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "throttle_integ",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "pitch_integ",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "throttle_sp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "pitch_sp_rad",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "throttle_trim",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mode",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "TecsStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "TecsStatus"
}
*/
