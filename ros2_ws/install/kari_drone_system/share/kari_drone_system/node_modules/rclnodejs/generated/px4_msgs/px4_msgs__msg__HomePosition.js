// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HomePositionRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  lat: primitiveTypes.float64,
  lon: primitiveTypes.float64,
  alt: primitiveTypes.float32,
  x: primitiveTypes.float32,
  y: primitiveTypes.float32,
  z: primitiveTypes.float32,
  yaw: primitiveTypes.float32,
  valid_alt: primitiveTypes.bool,
  valid_hpos: primitiveTypes.bool,
  valid_lpos: primitiveTypes.bool,
  manual_home: primitiveTypes.bool,
});
const HomePositionRefArray = ArrayType(HomePositionRefStruct);
const HomePositionRefStructArray = StructType({
  data: HomePositionRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class HomePositionWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new HomePositionRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._latIntialized = true;
      this._lonIntialized = true;
      this._altIntialized = true;
      this._xIntialized = true;
      this._yIntialized = true;
      this._zIntialized = true;
      this._yawIntialized = true;
      this._valid_altIntialized = true;
      this._valid_hposIntialized = true;
      this._valid_lposIntialized = true;
      this._manual_homeIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new HomePositionRefStruct();
    this._timestampIntialized = false;
    this._latIntialized = false;
    this._lonIntialized = false;
    this._altIntialized = false;
    this._xIntialized = false;
    this._yIntialized = false;
    this._zIntialized = false;
    this._yawIntialized = false;
    this._valid_altIntialized = false;
    this._valid_hposIntialized = false;
    this._valid_lposIntialized = false;
    this._manual_homeIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new HomePositionWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new HomePositionArrayWrapper;
  }
  static get ArrayType() {
    return HomePositionArrayWrapper;
  }
  static get refObjectArrayType() {
    return HomePositionRefStructArray
  }
  static get refObjectType() {
    return HomePositionRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in HomePosition');
      }
      if (checkConsistency && !this._latIntialized) {
        throw new TypeError('Invalid argument: lat in HomePosition');
      }
      if (checkConsistency && !this._lonIntialized) {
        throw new TypeError('Invalid argument: lon in HomePosition');
      }
      if (checkConsistency && !this._altIntialized) {
        throw new TypeError('Invalid argument: alt in HomePosition');
      }
      if (checkConsistency && !this._xIntialized) {
        throw new TypeError('Invalid argument: x in HomePosition');
      }
      if (checkConsistency && !this._yIntialized) {
        throw new TypeError('Invalid argument: y in HomePosition');
      }
      if (checkConsistency && !this._zIntialized) {
        throw new TypeError('Invalid argument: z in HomePosition');
      }
      if (checkConsistency && !this._yawIntialized) {
        throw new TypeError('Invalid argument: yaw in HomePosition');
      }
      if (checkConsistency && !this._valid_altIntialized) {
        throw new TypeError('Invalid argument: valid_alt in HomePosition');
      }
      if (checkConsistency && !this._valid_hposIntialized) {
        throw new TypeError('Invalid argument: valid_hpos in HomePosition');
      }
      if (checkConsistency && !this._valid_lposIntialized) {
        throw new TypeError('Invalid argument: valid_lpos in HomePosition');
      }
      if (checkConsistency && !this._manual_homeIntialized) {
        throw new TypeError('Invalid argument: manual_home in HomePosition');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._latIntialized = true;
    this._refObject.lat = refObject.lat;
    this._lonIntialized = true;
    this._refObject.lon = refObject.lon;
    this._altIntialized = true;
    this._refObject.alt = refObject.alt;
    this._xIntialized = true;
    this._refObject.x = refObject.x;
    this._yIntialized = true;
    this._refObject.y = refObject.y;
    this._zIntialized = true;
    this._refObject.z = refObject.z;
    this._yawIntialized = true;
    this._refObject.yaw = refObject.yaw;
    this._valid_altIntialized = true;
    this._refObject.valid_alt = refObject.valid_alt;
    this._valid_hposIntialized = true;
    this._refObject.valid_hpos = refObject.valid_hpos;
    this._valid_lposIntialized = true;
    this._refObject.valid_lpos = refObject.valid_lpos;
    this._manual_homeIntialized = true;
    this._refObject.manual_home = refObject.manual_home;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    HomePositionWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'HomePosition'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get lat() {
    if (!this._latIntialized) {
      return undefined;
    }
    return this._refObject.lat;
  }
  set lat(value) {
    this._latIntialized = true;
    this._refObject.lat = value;
  }
  get lon() {
    if (!this._lonIntialized) {
      return undefined;
    }
    return this._refObject.lon;
  }
  set lon(value) {
    this._lonIntialized = true;
    this._refObject.lon = value;
  }
  get alt() {
    if (!this._altIntialized) {
      return undefined;
    }
    return this._refObject.alt;
  }
  set alt(value) {
    this._altIntialized = true;
    this._refObject.alt = value;
  }
  get x() {
    if (!this._xIntialized) {
      return undefined;
    }
    return this._refObject.x;
  }
  set x(value) {
    this._xIntialized = true;
    this._refObject.x = value;
  }
  get y() {
    if (!this._yIntialized) {
      return undefined;
    }
    return this._refObject.y;
  }
  set y(value) {
    this._yIntialized = true;
    this._refObject.y = value;
  }
  get z() {
    if (!this._zIntialized) {
      return undefined;
    }
    return this._refObject.z;
  }
  set z(value) {
    this._zIntialized = true;
    this._refObject.z = value;
  }
  get yaw() {
    if (!this._yawIntialized) {
      return undefined;
    }
    return this._refObject.yaw;
  }
  set yaw(value) {
    this._yawIntialized = true;
    this._refObject.yaw = value;
  }
  get valid_alt() {
    if (!this._valid_altIntialized) {
      return undefined;
    }
    return this._refObject.valid_alt;
  }
  set valid_alt(value) {
    this._valid_altIntialized = true;
    this._refObject.valid_alt = value;
  }
  get valid_hpos() {
    if (!this._valid_hposIntialized) {
      return undefined;
    }
    return this._refObject.valid_hpos;
  }
  set valid_hpos(value) {
    this._valid_hposIntialized = true;
    this._refObject.valid_hpos = value;
  }
  get valid_lpos() {
    if (!this._valid_lposIntialized) {
      return undefined;
    }
    return this._refObject.valid_lpos;
  }
  set valid_lpos(value) {
    this._valid_lposIntialized = true;
    this._refObject.valid_lpos = value;
  }
  get manual_home() {
    if (!this._manual_homeIntialized) {
      return undefined;
    }
    return this._refObject.manual_home;
  }
  set manual_home(value) {
    this._manual_homeIntialized = true;
    this._refObject.manual_home = value;
  }
  copyRefObject(refObject) {
    this._refObject = new HomePositionRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altIntialized = true;
    this._xIntialized = true;
    this._yIntialized = true;
    this._zIntialized = true;
    this._yawIntialized = true;
    this._valid_altIntialized = true;
    this._valid_hposIntialized = true;
    this._valid_lposIntialized = true;
    this._manual_homeIntialized = true;
  }
  copy(other) {
    this._refObject = new HomePositionRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altIntialized = true;
    this._xIntialized = true;
    this._yIntialized = true;
    this._zIntialized = true;
    this._yawIntialized = true;
    this._valid_altIntialized = true;
    this._valid_hposIntialized = true;
    this._valid_lposIntialized = true;
    this._manual_homeIntialized = true;
  }
  static get classType() {
    return HomePositionWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"alt","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"x","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"y","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"z","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"yaw","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid_alt","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid_hpos","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"valid_lpos","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"manual_home","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"HomePosition","stringUpperBound":null,"isPrimitiveType":false},"msgName":"HomePosition"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","lat","lon","alt","x","y","z","yaw","valid_alt","valid_hpos","valid_lpos","manual_home"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class HomePositionArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof HomePositionWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new HomePositionWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to HomePositionArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to HomePositionArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new HomePositionRefArray(size);
    this._refObject = new HomePositionRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new HomePositionWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof HomePositionArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "HomePositionArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      HomePositionWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return HomePositionWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return HomePositionArrayWrapper;
  }
}
module.exports = HomePositionWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "alt",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "x",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "y",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "z",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "yaw",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid_alt",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid_hpos",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "valid_lpos",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "manual_home",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "HomePosition",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "HomePosition"
}
*/
