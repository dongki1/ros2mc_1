// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const EstimatorAidSource1dRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_sample: primitiveTypes.uint64,
  estimator_instance: primitiveTypes.uint8,
  device_id: primitiveTypes.uint32,
  time_last_fuse: primitiveTypes.uint64,
  observation: primitiveTypes.float32,
  observation_variance: primitiveTypes.float32,
  innovation: primitiveTypes.float32,
  innovation_variance: primitiveTypes.float32,
  test_ratio: primitiveTypes.float32,
  fusion_enabled: primitiveTypes.bool,
  innovation_rejected: primitiveTypes.bool,
  fused: primitiveTypes.bool,
});
const EstimatorAidSource1dRefArray = ArrayType(EstimatorAidSource1dRefStruct);
const EstimatorAidSource1dRefStructArray = StructType({
  data: EstimatorAidSource1dRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class EstimatorAidSource1dWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new EstimatorAidSource1dRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_sampleIntialized = true;
      this._estimator_instanceIntialized = true;
      this._device_idIntialized = true;
      this._time_last_fuseIntialized = true;
      this._observationIntialized = true;
      this._observation_varianceIntialized = true;
      this._innovationIntialized = true;
      this._innovation_varianceIntialized = true;
      this._test_ratioIntialized = true;
      this._fusion_enabledIntialized = true;
      this._innovation_rejectedIntialized = true;
      this._fusedIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new EstimatorAidSource1dRefStruct();
    this._timestampIntialized = false;
    this._timestamp_sampleIntialized = false;
    this._estimator_instanceIntialized = false;
    this._device_idIntialized = false;
    this._time_last_fuseIntialized = false;
    this._observationIntialized = false;
    this._observation_varianceIntialized = false;
    this._innovationIntialized = false;
    this._innovation_varianceIntialized = false;
    this._test_ratioIntialized = false;
    this._fusion_enabledIntialized = false;
    this._innovation_rejectedIntialized = false;
    this._fusedIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new EstimatorAidSource1dWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new EstimatorAidSource1dArrayWrapper;
  }
  static get ArrayType() {
    return EstimatorAidSource1dArrayWrapper;
  }
  static get refObjectArrayType() {
    return EstimatorAidSource1dRefStructArray
  }
  static get refObjectType() {
    return EstimatorAidSource1dRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._timestamp_sampleIntialized) {
        throw new TypeError('Invalid argument: timestamp_sample in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._estimator_instanceIntialized) {
        throw new TypeError('Invalid argument: estimator_instance in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._device_idIntialized) {
        throw new TypeError('Invalid argument: device_id in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._time_last_fuseIntialized) {
        throw new TypeError('Invalid argument: time_last_fuse in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._observationIntialized) {
        throw new TypeError('Invalid argument: observation in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._observation_varianceIntialized) {
        throw new TypeError('Invalid argument: observation_variance in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._innovationIntialized) {
        throw new TypeError('Invalid argument: innovation in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._innovation_varianceIntialized) {
        throw new TypeError('Invalid argument: innovation_variance in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._test_ratioIntialized) {
        throw new TypeError('Invalid argument: test_ratio in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._fusion_enabledIntialized) {
        throw new TypeError('Invalid argument: fusion_enabled in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._innovation_rejectedIntialized) {
        throw new TypeError('Invalid argument: innovation_rejected in EstimatorAidSource1d');
      }
      if (checkConsistency && !this._fusedIntialized) {
        throw new TypeError('Invalid argument: fused in EstimatorAidSource1d');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = refObject.timestamp_sample;
    this._estimator_instanceIntialized = true;
    this._refObject.estimator_instance = refObject.estimator_instance;
    this._device_idIntialized = true;
    this._refObject.device_id = refObject.device_id;
    this._time_last_fuseIntialized = true;
    this._refObject.time_last_fuse = refObject.time_last_fuse;
    this._observationIntialized = true;
    this._refObject.observation = refObject.observation;
    this._observation_varianceIntialized = true;
    this._refObject.observation_variance = refObject.observation_variance;
    this._innovationIntialized = true;
    this._refObject.innovation = refObject.innovation;
    this._innovation_varianceIntialized = true;
    this._refObject.innovation_variance = refObject.innovation_variance;
    this._test_ratioIntialized = true;
    this._refObject.test_ratio = refObject.test_ratio;
    this._fusion_enabledIntialized = true;
    this._refObject.fusion_enabled = refObject.fusion_enabled;
    this._innovation_rejectedIntialized = true;
    this._refObject.innovation_rejected = refObject.innovation_rejected;
    this._fusedIntialized = true;
    this._refObject.fused = refObject.fused;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    EstimatorAidSource1dWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'EstimatorAidSource1d'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_sample() {
    if (!this._timestamp_sampleIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_sample;
  }
  set timestamp_sample(value) {
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = value;
  }
  get estimator_instance() {
    if (!this._estimator_instanceIntialized) {
      return undefined;
    }
    return this._refObject.estimator_instance;
  }
  set estimator_instance(value) {
    this._estimator_instanceIntialized = true;
    this._refObject.estimator_instance = value;
  }
  get device_id() {
    if (!this._device_idIntialized) {
      return undefined;
    }
    return this._refObject.device_id;
  }
  set device_id(value) {
    this._device_idIntialized = true;
    this._refObject.device_id = value;
  }
  get time_last_fuse() {
    if (!this._time_last_fuseIntialized) {
      return undefined;
    }
    return this._refObject.time_last_fuse;
  }
  set time_last_fuse(value) {
    this._time_last_fuseIntialized = true;
    this._refObject.time_last_fuse = value;
  }
  get observation() {
    if (!this._observationIntialized) {
      return undefined;
    }
    return this._refObject.observation;
  }
  set observation(value) {
    this._observationIntialized = true;
    this._refObject.observation = value;
  }
  get observation_variance() {
    if (!this._observation_varianceIntialized) {
      return undefined;
    }
    return this._refObject.observation_variance;
  }
  set observation_variance(value) {
    this._observation_varianceIntialized = true;
    this._refObject.observation_variance = value;
  }
  get innovation() {
    if (!this._innovationIntialized) {
      return undefined;
    }
    return this._refObject.innovation;
  }
  set innovation(value) {
    this._innovationIntialized = true;
    this._refObject.innovation = value;
  }
  get innovation_variance() {
    if (!this._innovation_varianceIntialized) {
      return undefined;
    }
    return this._refObject.innovation_variance;
  }
  set innovation_variance(value) {
    this._innovation_varianceIntialized = true;
    this._refObject.innovation_variance = value;
  }
  get test_ratio() {
    if (!this._test_ratioIntialized) {
      return undefined;
    }
    return this._refObject.test_ratio;
  }
  set test_ratio(value) {
    this._test_ratioIntialized = true;
    this._refObject.test_ratio = value;
  }
  get fusion_enabled() {
    if (!this._fusion_enabledIntialized) {
      return undefined;
    }
    return this._refObject.fusion_enabled;
  }
  set fusion_enabled(value) {
    this._fusion_enabledIntialized = true;
    this._refObject.fusion_enabled = value;
  }
  get innovation_rejected() {
    if (!this._innovation_rejectedIntialized) {
      return undefined;
    }
    return this._refObject.innovation_rejected;
  }
  set innovation_rejected(value) {
    this._innovation_rejectedIntialized = true;
    this._refObject.innovation_rejected = value;
  }
  get fused() {
    if (!this._fusedIntialized) {
      return undefined;
    }
    return this._refObject.fused;
  }
  set fused(value) {
    this._fusedIntialized = true;
    this._refObject.fused = value;
  }
  copyRefObject(refObject) {
    this._refObject = new EstimatorAidSource1dRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._estimator_instanceIntialized = true;
    this._device_idIntialized = true;
    this._time_last_fuseIntialized = true;
    this._observationIntialized = true;
    this._observation_varianceIntialized = true;
    this._innovationIntialized = true;
    this._innovation_varianceIntialized = true;
    this._test_ratioIntialized = true;
    this._fusion_enabledIntialized = true;
    this._innovation_rejectedIntialized = true;
    this._fusedIntialized = true;
  }
  copy(other) {
    this._refObject = new EstimatorAidSource1dRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._estimator_instanceIntialized = true;
    this._device_idIntialized = true;
    this._time_last_fuseIntialized = true;
    this._observationIntialized = true;
    this._observation_varianceIntialized = true;
    this._innovationIntialized = true;
    this._innovation_varianceIntialized = true;
    this._test_ratioIntialized = true;
    this._fusion_enabledIntialized = true;
    this._innovation_rejectedIntialized = true;
    this._fusedIntialized = true;
  }
  static get classType() {
    return EstimatorAidSource1dWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_sample","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"estimator_instance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_last_fuse","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"observation","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"observation_variance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"innovation","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"innovation_variance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"test_ratio","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"fusion_enabled","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"innovation_rejected","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"fused","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"EstimatorAidSource1d","stringUpperBound":null,"isPrimitiveType":false},"msgName":"EstimatorAidSource1d"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_sample","estimator_instance","device_id","time_last_fuse","observation","observation_variance","innovation","innovation_variance","test_ratio","fusion_enabled","innovation_rejected","fused"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class EstimatorAidSource1dArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof EstimatorAidSource1dWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new EstimatorAidSource1dWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to EstimatorAidSource1dArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to EstimatorAidSource1dArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new EstimatorAidSource1dRefArray(size);
    this._refObject = new EstimatorAidSource1dRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new EstimatorAidSource1dWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof EstimatorAidSource1dArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "EstimatorAidSource1dArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      EstimatorAidSource1dWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return EstimatorAidSource1dWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return EstimatorAidSource1dArrayWrapper;
  }
}
module.exports = EstimatorAidSource1dWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_sample",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "estimator_instance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_last_fuse",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "observation",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "observation_variance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "innovation",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "innovation_variance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "test_ratio",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "fusion_enabled",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "innovation_rejected",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "fused",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "EstimatorAidSource1d",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "EstimatorAidSource1d"
}
*/
