// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const Int8Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int8.js');
const RcChannelsRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_last_valid: primitiveTypes.uint64,
  channels: ArrayType(primitiveTypes.float32, 18),
  channel_count: primitiveTypes.uint8,
  function: ArrayType(primitiveTypes.int8, 28),
  rssi: primitiveTypes.uint8,
  signal_lost: primitiveTypes.bool,
  frame_drop_count: primitiveTypes.uint32,
});
const RcChannelsRefArray = ArrayType(RcChannelsRefStruct);
const RcChannelsRefStructArray = StructType({
  data: RcChannelsRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class RcChannelsWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new RcChannelsRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_last_validIntialized = true;
      this._wrapperFields.channels = Float32Wrapper.createArray();
      this._wrapperFields.channels.copy(other._wrapperFields.channels);
      this._channel_countIntialized = true;
      this._wrapperFields.function = Int8Wrapper.createArray();
      this._wrapperFields.function.copy(other._wrapperFields.function);
      this._rssiIntialized = true;
      this._signal_lostIntialized = true;
      this._frame_drop_countIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new RcChannelsRefStruct();
    this._timestampIntialized = false;
    this._timestamp_last_validIntialized = false;
    this._wrapperFields.channels = Float32Wrapper.createArray();
    this._channel_countIntialized = false;
    this._wrapperFields.function = Int8Wrapper.createArray();
    this._rssiIntialized = false;
    this._signal_lostIntialized = false;
    this._frame_drop_countIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new RcChannelsWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new RcChannelsArrayWrapper;
  }
  static get ArrayType() {
    return RcChannelsArrayWrapper;
  }
  static get refObjectArrayType() {
    return RcChannelsRefStructArray
  }
  static get refObjectType() {
    return RcChannelsRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in RcChannels');
      }
      if (checkConsistency && !this._timestamp_last_validIntialized) {
        throw new TypeError('Invalid argument: timestamp_last_valid in RcChannels');
      }
      if (checkConsistency && !this._channel_countIntialized) {
        throw new TypeError('Invalid argument: channel_count in RcChannels');
      }
      if (checkConsistency && !this._rssiIntialized) {
        throw new TypeError('Invalid argument: rssi in RcChannels');
      }
      if (checkConsistency && !this._signal_lostIntialized) {
        throw new TypeError('Invalid argument: signal_lost in RcChannels');
      }
      if (checkConsistency && !this._frame_drop_countIntialized) {
        throw new TypeError('Invalid argument: frame_drop_count in RcChannels');
      }
    this._refObject.channels = Array.from(this._wrapperFields.channels.data);
    this._refObject.function = Array.from(this._wrapperFields.function.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_last_validIntialized = true;
    this._refObject.timestamp_last_valid = refObject.timestamp_last_valid;
    this._wrapperFields.channels.fill(refObject.channels.toArray());
    this._channel_countIntialized = true;
    this._refObject.channel_count = refObject.channel_count;
    this._wrapperFields.function.fill(refObject.function.toArray());
    this._rssiIntialized = true;
    this._refObject.rssi = refObject.rssi;
    this._signal_lostIntialized = true;
    this._refObject.signal_lost = refObject.signal_lost;
    this._frame_drop_countIntialized = true;
    this._refObject.frame_drop_count = refObject.frame_drop_count;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    RcChannelsWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'RcChannels'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_last_valid() {
    if (!this._timestamp_last_validIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_last_valid;
  }
  set timestamp_last_valid(value) {
    this._timestamp_last_validIntialized = true;
    this._refObject.timestamp_last_valid = value;
  }
  get channels() {
    return this._wrapperFields['channels'].data;
  }
  set channels(value) {
    if (value.length !== 18) {
      throw new RangeError('The length of the array must be 18.');
    }
    this._wrapperFields['channels'].fill(value);
  }
  get channel_count() {
    if (!this._channel_countIntialized) {
      return undefined;
    }
    return this._refObject.channel_count;
  }
  set channel_count(value) {
    this._channel_countIntialized = true;
    this._refObject.channel_count = value;
  }
  get function() {
    return this._wrapperFields['function'].data;
  }
  set function(value) {
    if (value.length !== 28) {
      throw new RangeError('The length of the array must be 28.');
    }
    this._wrapperFields['function'].fill(value);
  }
  get rssi() {
    if (!this._rssiIntialized) {
      return undefined;
    }
    return this._refObject.rssi;
  }
  set rssi(value) {
    this._rssiIntialized = true;
    this._refObject.rssi = value;
  }
  get signal_lost() {
    if (!this._signal_lostIntialized) {
      return undefined;
    }
    return this._refObject.signal_lost;
  }
  set signal_lost(value) {
    this._signal_lostIntialized = true;
    this._refObject.signal_lost = value;
  }
  get frame_drop_count() {
    if (!this._frame_drop_countIntialized) {
      return undefined;
    }
    return this._refObject.frame_drop_count;
  }
  set frame_drop_count(value) {
    this._frame_drop_countIntialized = true;
    this._refObject.frame_drop_count = value;
  }
  copyRefObject(refObject) {
    this._refObject = new RcChannelsRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_last_validIntialized = true;
    this._wrapperFields.channels.fill(refObject.channels.toArray());
    this._channel_countIntialized = true;
    this._wrapperFields.function.fill(refObject.function.toArray());
    this._rssiIntialized = true;
    this._signal_lostIntialized = true;
    this._frame_drop_countIntialized = true;
  }
  copy(other) {
    this._refObject = new RcChannelsRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_last_validIntialized = true;
    this._wrapperFields.channels.copy(other._wrapperFields.channels);
    this._channel_countIntialized = true;
    this._wrapperFields.function.copy(other._wrapperFields.function);
    this._rssiIntialized = true;
    this._signal_lostIntialized = true;
    this._frame_drop_countIntialized = true;
  }
  static get classType() {
    return RcChannelsWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"FUNCTION_THROTTLE","value":0},{"type":"uint8","name":"FUNCTION_ROLL","value":1},{"type":"uint8","name":"FUNCTION_PITCH","value":2},{"type":"uint8","name":"FUNCTION_YAW","value":3},{"type":"uint8","name":"FUNCTION_RETURN","value":4},{"type":"uint8","name":"FUNCTION_LOITER","value":5},{"type":"uint8","name":"FUNCTION_OFFBOARD","value":6},{"type":"uint8","name":"FUNCTION_FLAPS","value":7},{"type":"uint8","name":"FUNCTION_AUX_1","value":8},{"type":"uint8","name":"FUNCTION_AUX_2","value":9},{"type":"uint8","name":"FUNCTION_AUX_3","value":10},{"type":"uint8","name":"FUNCTION_AUX_4","value":11},{"type":"uint8","name":"FUNCTION_AUX_5","value":12},{"type":"uint8","name":"FUNCTION_AUX_6","value":13},{"type":"uint8","name":"FUNCTION_PARAM_1","value":14},{"type":"uint8","name":"FUNCTION_PARAM_2","value":15},{"type":"uint8","name":"FUNCTION_PARAM_3_5","value":16},{"type":"uint8","name":"FUNCTION_KILLSWITCH","value":17},{"type":"uint8","name":"FUNCTION_TRANSITION","value":18},{"type":"uint8","name":"FUNCTION_GEAR","value":19},{"type":"uint8","name":"FUNCTION_ARMSWITCH","value":20},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_1","value":21},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_2","value":22},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_3","value":23},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_4","value":24},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_5","value":25},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_6","value":26},{"type":"uint8","name":"FUNCTION_ENGAGE_MAIN_MOTOR","value":27},{"type":"uint8","name":"FUNCTION_FLTBTN_SLOT_COUNT","value":6}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_last_valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"channels","type":{"isArray":true,"arraySize":18,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"channel_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"function","type":{"isArray":true,"arraySize":28,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"int8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rssi","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"signal_lost","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"frame_drop_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"RcChannels","stringUpperBound":null,"isPrimitiveType":false},"msgName":"RcChannels"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_last_valid","channels","channel_count","function","rssi","signal_lost","frame_drop_count"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class RcChannelsArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof RcChannelsWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new RcChannelsWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to RcChannelsArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to RcChannelsArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new RcChannelsRefArray(size);
    this._refObject = new RcChannelsRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new RcChannelsWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof RcChannelsArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "RcChannelsArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      RcChannelsWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return RcChannelsWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return RcChannelsArrayWrapper;
  }
}
// Define constants (29 in total)
Object.defineProperty(RcChannelsWrapper, "FUNCTION_THROTTLE", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_ROLL", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_PITCH", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_YAW", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_RETURN", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_LOITER", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_OFFBOARD", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLAPS", {value: 7, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_1", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_2", {value: 9, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_3", {value: 10, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_4", {value: 11, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_5", {value: 12, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_AUX_6", {value: 13, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_PARAM_1", {value: 14, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_PARAM_2", {value: 15, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_PARAM_3_5", {value: 16, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_KILLSWITCH", {value: 17, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_TRANSITION", {value: 18, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_GEAR", {value: 19, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_ARMSWITCH", {value: 20, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_1", {value: 21, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_2", {value: 22, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_3", {value: 23, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_4", {value: 24, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_5", {value: 25, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_6", {value: 26, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_ENGAGE_MAIN_MOTOR", {value: 27, writable: false, enumerable: true, configurable: true});
Object.defineProperty(RcChannelsWrapper, "FUNCTION_FLTBTN_SLOT_COUNT", {value: 6, writable: false, enumerable: true, configurable: true});
module.exports = RcChannelsWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "FUNCTION_THROTTLE",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "FUNCTION_ROLL",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "FUNCTION_PITCH",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "FUNCTION_YAW",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "FUNCTION_RETURN",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "FUNCTION_LOITER",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "FUNCTION_OFFBOARD",
      "value": 6
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLAPS",
      "value": 7
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_1",
      "value": 8
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_2",
      "value": 9
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_3",
      "value": 10
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_4",
      "value": 11
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_5",
      "value": 12
    },
    {
      "type": "uint8",
      "name": "FUNCTION_AUX_6",
      "value": 13
    },
    {
      "type": "uint8",
      "name": "FUNCTION_PARAM_1",
      "value": 14
    },
    {
      "type": "uint8",
      "name": "FUNCTION_PARAM_2",
      "value": 15
    },
    {
      "type": "uint8",
      "name": "FUNCTION_PARAM_3_5",
      "value": 16
    },
    {
      "type": "uint8",
      "name": "FUNCTION_KILLSWITCH",
      "value": 17
    },
    {
      "type": "uint8",
      "name": "FUNCTION_TRANSITION",
      "value": 18
    },
    {
      "type": "uint8",
      "name": "FUNCTION_GEAR",
      "value": 19
    },
    {
      "type": "uint8",
      "name": "FUNCTION_ARMSWITCH",
      "value": 20
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_1",
      "value": 21
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_2",
      "value": 22
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_3",
      "value": 23
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_4",
      "value": 24
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_5",
      "value": 25
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_6",
      "value": 26
    },
    {
      "type": "uint8",
      "name": "FUNCTION_ENGAGE_MAIN_MOTOR",
      "value": 27
    },
    {
      "type": "uint8",
      "name": "FUNCTION_FLTBTN_SLOT_COUNT",
      "value": 6
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_last_valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "channels",
      "type": {
        "isArray": true,
        "arraySize": 18,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "channel_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "function",
      "type": {
        "isArray": true,
        "arraySize": 28,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "int8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rssi",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "signal_lost",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "frame_drop_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "RcChannels",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "RcChannels"
}
*/
