// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const GeneratorStatusRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  status: primitiveTypes.uint64,
  battery_current: primitiveTypes.float32,
  load_current: primitiveTypes.float32,
  power_generated: primitiveTypes.float32,
  bus_voltage: primitiveTypes.float32,
  bat_current_setpoint: primitiveTypes.float32,
  runtime: primitiveTypes.uint32,
  time_until_maintenance: primitiveTypes.int32,
  generator_speed: primitiveTypes.uint16,
  rectifier_temperature: primitiveTypes.int16,
  generator_temperature: primitiveTypes.int16,
});
const GeneratorStatusRefArray = ArrayType(GeneratorStatusRefStruct);
const GeneratorStatusRefStructArray = StructType({
  data: GeneratorStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class GeneratorStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new GeneratorStatusRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._statusIntialized = true;
      this._battery_currentIntialized = true;
      this._load_currentIntialized = true;
      this._power_generatedIntialized = true;
      this._bus_voltageIntialized = true;
      this._bat_current_setpointIntialized = true;
      this._runtimeIntialized = true;
      this._time_until_maintenanceIntialized = true;
      this._generator_speedIntialized = true;
      this._rectifier_temperatureIntialized = true;
      this._generator_temperatureIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new GeneratorStatusRefStruct();
    this._timestampIntialized = false;
    this._statusIntialized = false;
    this._battery_currentIntialized = false;
    this._load_currentIntialized = false;
    this._power_generatedIntialized = false;
    this._bus_voltageIntialized = false;
    this._bat_current_setpointIntialized = false;
    this._runtimeIntialized = false;
    this._time_until_maintenanceIntialized = false;
    this._generator_speedIntialized = false;
    this._rectifier_temperatureIntialized = false;
    this._generator_temperatureIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new GeneratorStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new GeneratorStatusArrayWrapper;
  }
  static get ArrayType() {
    return GeneratorStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return GeneratorStatusRefStructArray
  }
  static get refObjectType() {
    return GeneratorStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in GeneratorStatus');
      }
      if (checkConsistency && !this._statusIntialized) {
        throw new TypeError('Invalid argument: status in GeneratorStatus');
      }
      if (checkConsistency && !this._battery_currentIntialized) {
        throw new TypeError('Invalid argument: battery_current in GeneratorStatus');
      }
      if (checkConsistency && !this._load_currentIntialized) {
        throw new TypeError('Invalid argument: load_current in GeneratorStatus');
      }
      if (checkConsistency && !this._power_generatedIntialized) {
        throw new TypeError('Invalid argument: power_generated in GeneratorStatus');
      }
      if (checkConsistency && !this._bus_voltageIntialized) {
        throw new TypeError('Invalid argument: bus_voltage in GeneratorStatus');
      }
      if (checkConsistency && !this._bat_current_setpointIntialized) {
        throw new TypeError('Invalid argument: bat_current_setpoint in GeneratorStatus');
      }
      if (checkConsistency && !this._runtimeIntialized) {
        throw new TypeError('Invalid argument: runtime in GeneratorStatus');
      }
      if (checkConsistency && !this._time_until_maintenanceIntialized) {
        throw new TypeError('Invalid argument: time_until_maintenance in GeneratorStatus');
      }
      if (checkConsistency && !this._generator_speedIntialized) {
        throw new TypeError('Invalid argument: generator_speed in GeneratorStatus');
      }
      if (checkConsistency && !this._rectifier_temperatureIntialized) {
        throw new TypeError('Invalid argument: rectifier_temperature in GeneratorStatus');
      }
      if (checkConsistency && !this._generator_temperatureIntialized) {
        throw new TypeError('Invalid argument: generator_temperature in GeneratorStatus');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._statusIntialized = true;
    this._refObject.status = refObject.status;
    this._battery_currentIntialized = true;
    this._refObject.battery_current = refObject.battery_current;
    this._load_currentIntialized = true;
    this._refObject.load_current = refObject.load_current;
    this._power_generatedIntialized = true;
    this._refObject.power_generated = refObject.power_generated;
    this._bus_voltageIntialized = true;
    this._refObject.bus_voltage = refObject.bus_voltage;
    this._bat_current_setpointIntialized = true;
    this._refObject.bat_current_setpoint = refObject.bat_current_setpoint;
    this._runtimeIntialized = true;
    this._refObject.runtime = refObject.runtime;
    this._time_until_maintenanceIntialized = true;
    this._refObject.time_until_maintenance = refObject.time_until_maintenance;
    this._generator_speedIntialized = true;
    this._refObject.generator_speed = refObject.generator_speed;
    this._rectifier_temperatureIntialized = true;
    this._refObject.rectifier_temperature = refObject.rectifier_temperature;
    this._generator_temperatureIntialized = true;
    this._refObject.generator_temperature = refObject.generator_temperature;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    GeneratorStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'GeneratorStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get status() {
    if (!this._statusIntialized) {
      return undefined;
    }
    return this._refObject.status;
  }
  set status(value) {
    this._statusIntialized = true;
    this._refObject.status = value;
  }
  get battery_current() {
    if (!this._battery_currentIntialized) {
      return undefined;
    }
    return this._refObject.battery_current;
  }
  set battery_current(value) {
    this._battery_currentIntialized = true;
    this._refObject.battery_current = value;
  }
  get load_current() {
    if (!this._load_currentIntialized) {
      return undefined;
    }
    return this._refObject.load_current;
  }
  set load_current(value) {
    this._load_currentIntialized = true;
    this._refObject.load_current = value;
  }
  get power_generated() {
    if (!this._power_generatedIntialized) {
      return undefined;
    }
    return this._refObject.power_generated;
  }
  set power_generated(value) {
    this._power_generatedIntialized = true;
    this._refObject.power_generated = value;
  }
  get bus_voltage() {
    if (!this._bus_voltageIntialized) {
      return undefined;
    }
    return this._refObject.bus_voltage;
  }
  set bus_voltage(value) {
    this._bus_voltageIntialized = true;
    this._refObject.bus_voltage = value;
  }
  get bat_current_setpoint() {
    if (!this._bat_current_setpointIntialized) {
      return undefined;
    }
    return this._refObject.bat_current_setpoint;
  }
  set bat_current_setpoint(value) {
    this._bat_current_setpointIntialized = true;
    this._refObject.bat_current_setpoint = value;
  }
  get runtime() {
    if (!this._runtimeIntialized) {
      return undefined;
    }
    return this._refObject.runtime;
  }
  set runtime(value) {
    this._runtimeIntialized = true;
    this._refObject.runtime = value;
  }
  get time_until_maintenance() {
    if (!this._time_until_maintenanceIntialized) {
      return undefined;
    }
    return this._refObject.time_until_maintenance;
  }
  set time_until_maintenance(value) {
    this._time_until_maintenanceIntialized = true;
    this._refObject.time_until_maintenance = value;
  }
  get generator_speed() {
    if (!this._generator_speedIntialized) {
      return undefined;
    }
    return this._refObject.generator_speed;
  }
  set generator_speed(value) {
    this._generator_speedIntialized = true;
    this._refObject.generator_speed = value;
  }
  get rectifier_temperature() {
    if (!this._rectifier_temperatureIntialized) {
      return undefined;
    }
    return this._refObject.rectifier_temperature;
  }
  set rectifier_temperature(value) {
    this._rectifier_temperatureIntialized = true;
    this._refObject.rectifier_temperature = value;
  }
  get generator_temperature() {
    if (!this._generator_temperatureIntialized) {
      return undefined;
    }
    return this._refObject.generator_temperature;
  }
  set generator_temperature(value) {
    this._generator_temperatureIntialized = true;
    this._refObject.generator_temperature = value;
  }
  copyRefObject(refObject) {
    this._refObject = new GeneratorStatusRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._statusIntialized = true;
    this._battery_currentIntialized = true;
    this._load_currentIntialized = true;
    this._power_generatedIntialized = true;
    this._bus_voltageIntialized = true;
    this._bat_current_setpointIntialized = true;
    this._runtimeIntialized = true;
    this._time_until_maintenanceIntialized = true;
    this._generator_speedIntialized = true;
    this._rectifier_temperatureIntialized = true;
    this._generator_temperatureIntialized = true;
  }
  copy(other) {
    this._refObject = new GeneratorStatusRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._statusIntialized = true;
    this._battery_currentIntialized = true;
    this._load_currentIntialized = true;
    this._power_generatedIntialized = true;
    this._bus_voltageIntialized = true;
    this._bat_current_setpointIntialized = true;
    this._runtimeIntialized = true;
    this._time_until_maintenanceIntialized = true;
    this._generator_speedIntialized = true;
    this._rectifier_temperatureIntialized = true;
    this._generator_temperatureIntialized = true;
  }
  static get classType() {
    return GeneratorStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint64","name":"STATUS_FLAG_OFF","value":1},{"type":"uint64","name":"STATUS_FLAG_READY","value":2},{"type":"uint64","name":"STATUS_FLAG_GENERATING","value":4},{"type":"uint64","name":"STATUS_FLAG_CHARGING","value":8},{"type":"uint64","name":"STATUS_FLAG_REDUCED_POWER","value":16},{"type":"uint64","name":"STATUS_FLAG_MAXPOWER","value":32},{"type":"uint64","name":"STATUS_FLAG_OVERTEMP_WARNING","value":64},{"type":"uint64","name":"STATUS_FLAG_OVERTEMP_FAULT","value":128},{"type":"uint64","name":"STATUS_FLAG_ELECTRONICS_OVERTEMP_WARNING","value":256},{"type":"uint64","name":"STATUS_FLAG_ELECTRONICS_OVERTEMP_FAULT","value":512},{"type":"uint64","name":"STATUS_FLAG_ELECTRONICS_FAULT","value":1024},{"type":"uint64","name":"STATUS_FLAG_POWERSOURCE_FAULT","value":2048},{"type":"uint64","name":"STATUS_FLAG_COMMUNICATION_WARNING","value":4096},{"type":"uint64","name":"STATUS_FLAG_COOLING_WARNING","value":8192},{"type":"uint64","name":"STATUS_FLAG_POWER_RAIL_FAULT","value":16384},{"type":"uint64","name":"STATUS_FLAG_OVERCURRENT_FAULT","value":32768},{"type":"uint64","name":"STATUS_FLAG_BATTERY_OVERCHARGE_CURRENT_FAULT","value":65536},{"type":"uint64","name":"STATUS_FLAG_OVERVOLTAGE_FAULT","value":131072},{"type":"uint64","name":"STATUS_FLAG_BATTERY_UNDERVOLT_FAULT","value":262144},{"type":"uint64","name":"STATUS_FLAG_START_INHIBITED","value":524288},{"type":"uint64","name":"STATUS_FLAG_MAINTENANCE_REQUIRED","value":1048576},{"type":"uint64","name":"STATUS_FLAG_WARMING_UP","value":2097152},{"type":"uint64","name":"STATUS_FLAG_IDLE","value":4194304}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"battery_current","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"load_current","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"power_generated","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"bus_voltage","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"bat_current_setpoint","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"runtime","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_until_maintenance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"generator_speed","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rectifier_temperature","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"generator_temperature","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"GeneratorStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"GeneratorStatus"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","status","battery_current","load_current","power_generated","bus_voltage","bat_current_setpoint","runtime","time_until_maintenance","generator_speed","rectifier_temperature","generator_temperature"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class GeneratorStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof GeneratorStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new GeneratorStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GeneratorStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GeneratorStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new GeneratorStatusRefArray(size);
    this._refObject = new GeneratorStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new GeneratorStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof GeneratorStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "GeneratorStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      GeneratorStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return GeneratorStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return GeneratorStatusArrayWrapper;
  }
}
// Define constants (23 in total)
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_OFF", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_READY", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_GENERATING", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_CHARGING", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_REDUCED_POWER", {value: 16, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_MAXPOWER", {value: 32, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_OVERTEMP_WARNING", {value: 64, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_OVERTEMP_FAULT", {value: 128, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_ELECTRONICS_OVERTEMP_WARNING", {value: 256, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_ELECTRONICS_OVERTEMP_FAULT", {value: 512, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_ELECTRONICS_FAULT", {value: 1024, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_POWERSOURCE_FAULT", {value: 2048, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_COMMUNICATION_WARNING", {value: 4096, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_COOLING_WARNING", {value: 8192, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_POWER_RAIL_FAULT", {value: 16384, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_OVERCURRENT_FAULT", {value: 32768, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_BATTERY_OVERCHARGE_CURRENT_FAULT", {value: 65536, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_OVERVOLTAGE_FAULT", {value: 131072, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_BATTERY_UNDERVOLT_FAULT", {value: 262144, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_START_INHIBITED", {value: 524288, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_MAINTENANCE_REQUIRED", {value: 1048576, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_WARMING_UP", {value: 2097152, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GeneratorStatusWrapper, "STATUS_FLAG_IDLE", {value: 4194304, writable: false, enumerable: true, configurable: true});
module.exports = GeneratorStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint64",
      "name": "STATUS_FLAG_OFF",
      "value": 1
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_READY",
      "value": 2
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_GENERATING",
      "value": 4
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_CHARGING",
      "value": 8
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_REDUCED_POWER",
      "value": 16
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_MAXPOWER",
      "value": 32
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_OVERTEMP_WARNING",
      "value": 64
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_OVERTEMP_FAULT",
      "value": 128
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_ELECTRONICS_OVERTEMP_WARNING",
      "value": 256
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_ELECTRONICS_OVERTEMP_FAULT",
      "value": 512
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_ELECTRONICS_FAULT",
      "value": 1024
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_POWERSOURCE_FAULT",
      "value": 2048
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_COMMUNICATION_WARNING",
      "value": 4096
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_COOLING_WARNING",
      "value": 8192
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_POWER_RAIL_FAULT",
      "value": 16384
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_OVERCURRENT_FAULT",
      "value": 32768
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_BATTERY_OVERCHARGE_CURRENT_FAULT",
      "value": 65536
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_OVERVOLTAGE_FAULT",
      "value": 131072
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_BATTERY_UNDERVOLT_FAULT",
      "value": 262144
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_START_INHIBITED",
      "value": 524288
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_MAINTENANCE_REQUIRED",
      "value": 1048576
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_WARMING_UP",
      "value": 2097152
    },
    {
      "type": "uint64",
      "name": "STATUS_FLAG_IDLE",
      "value": 4194304
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "battery_current",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "load_current",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "power_generated",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "bus_voltage",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "bat_current_setpoint",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "runtime",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_until_maintenance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "generator_speed",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rectifier_temperature",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "generator_temperature",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "GeneratorStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "GeneratorStatus"
}
*/
