// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const CellularStatusRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  status: primitiveTypes.uint16,
  failure_reason: primitiveTypes.uint8,
  type: primitiveTypes.uint8,
  quality: primitiveTypes.uint8,
  mcc: primitiveTypes.uint16,
  mnc: primitiveTypes.uint16,
  lac: primitiveTypes.uint16,
});
const CellularStatusRefArray = ArrayType(CellularStatusRefStruct);
const CellularStatusRefStructArray = StructType({
  data: CellularStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class CellularStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new CellularStatusRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._statusIntialized = true;
      this._failure_reasonIntialized = true;
      this._typeIntialized = true;
      this._qualityIntialized = true;
      this._mccIntialized = true;
      this._mncIntialized = true;
      this._lacIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new CellularStatusRefStruct();
    this._timestampIntialized = false;
    this._statusIntialized = false;
    this._failure_reasonIntialized = false;
    this._typeIntialized = false;
    this._qualityIntialized = false;
    this._mccIntialized = false;
    this._mncIntialized = false;
    this._lacIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new CellularStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new CellularStatusArrayWrapper;
  }
  static get ArrayType() {
    return CellularStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return CellularStatusRefStructArray
  }
  static get refObjectType() {
    return CellularStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in CellularStatus');
      }
      if (checkConsistency && !this._statusIntialized) {
        throw new TypeError('Invalid argument: status in CellularStatus');
      }
      if (checkConsistency && !this._failure_reasonIntialized) {
        throw new TypeError('Invalid argument: failure_reason in CellularStatus');
      }
      if (checkConsistency && !this._typeIntialized) {
        throw new TypeError('Invalid argument: type in CellularStatus');
      }
      if (checkConsistency && !this._qualityIntialized) {
        throw new TypeError('Invalid argument: quality in CellularStatus');
      }
      if (checkConsistency && !this._mccIntialized) {
        throw new TypeError('Invalid argument: mcc in CellularStatus');
      }
      if (checkConsistency && !this._mncIntialized) {
        throw new TypeError('Invalid argument: mnc in CellularStatus');
      }
      if (checkConsistency && !this._lacIntialized) {
        throw new TypeError('Invalid argument: lac in CellularStatus');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._statusIntialized = true;
    this._refObject.status = refObject.status;
    this._failure_reasonIntialized = true;
    this._refObject.failure_reason = refObject.failure_reason;
    this._typeIntialized = true;
    this._refObject.type = refObject.type;
    this._qualityIntialized = true;
    this._refObject.quality = refObject.quality;
    this._mccIntialized = true;
    this._refObject.mcc = refObject.mcc;
    this._mncIntialized = true;
    this._refObject.mnc = refObject.mnc;
    this._lacIntialized = true;
    this._refObject.lac = refObject.lac;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    CellularStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'CellularStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get status() {
    if (!this._statusIntialized) {
      return undefined;
    }
    return this._refObject.status;
  }
  set status(value) {
    this._statusIntialized = true;
    this._refObject.status = value;
  }
  get failure_reason() {
    if (!this._failure_reasonIntialized) {
      return undefined;
    }
    return this._refObject.failure_reason;
  }
  set failure_reason(value) {
    this._failure_reasonIntialized = true;
    this._refObject.failure_reason = value;
  }
  get type() {
    if (!this._typeIntialized) {
      return undefined;
    }
    return this._refObject.type;
  }
  set type(value) {
    this._typeIntialized = true;
    this._refObject.type = value;
  }
  get quality() {
    if (!this._qualityIntialized) {
      return undefined;
    }
    return this._refObject.quality;
  }
  set quality(value) {
    this._qualityIntialized = true;
    this._refObject.quality = value;
  }
  get mcc() {
    if (!this._mccIntialized) {
      return undefined;
    }
    return this._refObject.mcc;
  }
  set mcc(value) {
    this._mccIntialized = true;
    this._refObject.mcc = value;
  }
  get mnc() {
    if (!this._mncIntialized) {
      return undefined;
    }
    return this._refObject.mnc;
  }
  set mnc(value) {
    this._mncIntialized = true;
    this._refObject.mnc = value;
  }
  get lac() {
    if (!this._lacIntialized) {
      return undefined;
    }
    return this._refObject.lac;
  }
  set lac(value) {
    this._lacIntialized = true;
    this._refObject.lac = value;
  }
  copyRefObject(refObject) {
    this._refObject = new CellularStatusRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._statusIntialized = true;
    this._failure_reasonIntialized = true;
    this._typeIntialized = true;
    this._qualityIntialized = true;
    this._mccIntialized = true;
    this._mncIntialized = true;
    this._lacIntialized = true;
  }
  copy(other) {
    this._refObject = new CellularStatusRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._statusIntialized = true;
    this._failure_reasonIntialized = true;
    this._typeIntialized = true;
    this._qualityIntialized = true;
    this._mccIntialized = true;
    this._mncIntialized = true;
    this._lacIntialized = true;
  }
  static get classType() {
    return CellularStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"CELLULAR_STATUS_FLAG_UNKNOWN","value":0},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_FAILED","value":1},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_INITIALIZING","value":2},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_LOCKED","value":3},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_DISABLED","value":4},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_DISABLING","value":5},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_ENABLING","value":6},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_ENABLED","value":7},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_SEARCHING","value":8},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_REGISTERED","value":9},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_DISCONNECTING","value":10},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_CONNECTING","value":11},{"type":"uint8","name":"CELLULAR_STATUS_FLAG_CONNECTED","value":12},{"type":"uint8","name":"CELLULAR_NETWORK_FAILED_REASON_NONE","value":0},{"type":"uint8","name":"CELLULAR_NETWORK_FAILED_REASON_UNKNOWN","value":1},{"type":"uint8","name":"CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING","value":2},{"type":"uint8","name":"CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR","value":3}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"failure_reason","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"quality","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mcc","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mnc","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lac","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"CellularStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"CellularStatus"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","status","failure_reason","type","quality","mcc","mnc","lac"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class CellularStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof CellularStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new CellularStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to CellularStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to CellularStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new CellularStatusRefArray(size);
    this._refObject = new CellularStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new CellularStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof CellularStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "CellularStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      CellularStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return CellularStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return CellularStatusArrayWrapper;
  }
}
// Define constants (17 in total)
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_FAILED", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_INITIALIZING", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_LOCKED", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_DISABLED", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_DISABLING", {value: 5, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_ENABLING", {value: 6, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_ENABLED", {value: 7, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_SEARCHING", {value: 8, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_REGISTERED", {value: 9, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_DISCONNECTING", {value: 10, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_CONNECTING", {value: 11, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_STATUS_FLAG_CONNECTED", {value: 12, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_NETWORK_FAILED_REASON_NONE", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_NETWORK_FAILED_REASON_UNKNOWN", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(CellularStatusWrapper, "CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR", {value: 3, writable: false, enumerable: true, configurable: true});
module.exports = CellularStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_FAILED",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_INITIALIZING",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_LOCKED",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_DISABLED",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_DISABLING",
      "value": 5
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_ENABLING",
      "value": 6
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_ENABLED",
      "value": 7
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_SEARCHING",
      "value": 8
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_REGISTERED",
      "value": 9
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_DISCONNECTING",
      "value": 10
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_CONNECTING",
      "value": 11
    },
    {
      "type": "uint8",
      "name": "CELLULAR_STATUS_FLAG_CONNECTED",
      "value": 12
    },
    {
      "type": "uint8",
      "name": "CELLULAR_NETWORK_FAILED_REASON_NONE",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "CELLULAR_NETWORK_FAILED_REASON_UNKNOWN",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR",
      "value": 3
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "failure_reason",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "quality",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mcc",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mnc",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lac",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "CellularStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "CellularStatus"
}
*/
