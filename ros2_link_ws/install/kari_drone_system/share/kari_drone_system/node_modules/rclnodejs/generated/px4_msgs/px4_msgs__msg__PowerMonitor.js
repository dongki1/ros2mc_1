// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const PowerMonitorRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  voltage_v: primitiveTypes.float32,
  current_a: primitiveTypes.float32,
  power_w: primitiveTypes.float32,
  rconf: primitiveTypes.int16,
  rsv: primitiveTypes.int16,
  rbv: primitiveTypes.int16,
  rp: primitiveTypes.int16,
  rc: primitiveTypes.int16,
  rcal: primitiveTypes.int16,
  me: primitiveTypes.int16,
  al: primitiveTypes.int16,
});
const PowerMonitorRefArray = ArrayType(PowerMonitorRefStruct);
const PowerMonitorRefStructArray = StructType({
  data: PowerMonitorRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class PowerMonitorWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new PowerMonitorRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._voltage_vIntialized = true;
      this._current_aIntialized = true;
      this._power_wIntialized = true;
      this._rconfIntialized = true;
      this._rsvIntialized = true;
      this._rbvIntialized = true;
      this._rpIntialized = true;
      this._rcIntialized = true;
      this._rcalIntialized = true;
      this._meIntialized = true;
      this._alIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new PowerMonitorRefStruct();
    this._timestampIntialized = false;
    this._voltage_vIntialized = false;
    this._current_aIntialized = false;
    this._power_wIntialized = false;
    this._rconfIntialized = false;
    this._rsvIntialized = false;
    this._rbvIntialized = false;
    this._rpIntialized = false;
    this._rcIntialized = false;
    this._rcalIntialized = false;
    this._meIntialized = false;
    this._alIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new PowerMonitorWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new PowerMonitorArrayWrapper;
  }
  static get ArrayType() {
    return PowerMonitorArrayWrapper;
  }
  static get refObjectArrayType() {
    return PowerMonitorRefStructArray
  }
  static get refObjectType() {
    return PowerMonitorRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in PowerMonitor');
      }
      if (checkConsistency && !this._voltage_vIntialized) {
        throw new TypeError('Invalid argument: voltage_v in PowerMonitor');
      }
      if (checkConsistency && !this._current_aIntialized) {
        throw new TypeError('Invalid argument: current_a in PowerMonitor');
      }
      if (checkConsistency && !this._power_wIntialized) {
        throw new TypeError('Invalid argument: power_w in PowerMonitor');
      }
      if (checkConsistency && !this._rconfIntialized) {
        throw new TypeError('Invalid argument: rconf in PowerMonitor');
      }
      if (checkConsistency && !this._rsvIntialized) {
        throw new TypeError('Invalid argument: rsv in PowerMonitor');
      }
      if (checkConsistency && !this._rbvIntialized) {
        throw new TypeError('Invalid argument: rbv in PowerMonitor');
      }
      if (checkConsistency && !this._rpIntialized) {
        throw new TypeError('Invalid argument: rp in PowerMonitor');
      }
      if (checkConsistency && !this._rcIntialized) {
        throw new TypeError('Invalid argument: rc in PowerMonitor');
      }
      if (checkConsistency && !this._rcalIntialized) {
        throw new TypeError('Invalid argument: rcal in PowerMonitor');
      }
      if (checkConsistency && !this._meIntialized) {
        throw new TypeError('Invalid argument: me in PowerMonitor');
      }
      if (checkConsistency && !this._alIntialized) {
        throw new TypeError('Invalid argument: al in PowerMonitor');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._voltage_vIntialized = true;
    this._refObject.voltage_v = refObject.voltage_v;
    this._current_aIntialized = true;
    this._refObject.current_a = refObject.current_a;
    this._power_wIntialized = true;
    this._refObject.power_w = refObject.power_w;
    this._rconfIntialized = true;
    this._refObject.rconf = refObject.rconf;
    this._rsvIntialized = true;
    this._refObject.rsv = refObject.rsv;
    this._rbvIntialized = true;
    this._refObject.rbv = refObject.rbv;
    this._rpIntialized = true;
    this._refObject.rp = refObject.rp;
    this._rcIntialized = true;
    this._refObject.rc = refObject.rc;
    this._rcalIntialized = true;
    this._refObject.rcal = refObject.rcal;
    this._meIntialized = true;
    this._refObject.me = refObject.me;
    this._alIntialized = true;
    this._refObject.al = refObject.al;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    PowerMonitorWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'PowerMonitor'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get voltage_v() {
    if (!this._voltage_vIntialized) {
      return undefined;
    }
    return this._refObject.voltage_v;
  }
  set voltage_v(value) {
    this._voltage_vIntialized = true;
    this._refObject.voltage_v = value;
  }
  get current_a() {
    if (!this._current_aIntialized) {
      return undefined;
    }
    return this._refObject.current_a;
  }
  set current_a(value) {
    this._current_aIntialized = true;
    this._refObject.current_a = value;
  }
  get power_w() {
    if (!this._power_wIntialized) {
      return undefined;
    }
    return this._refObject.power_w;
  }
  set power_w(value) {
    this._power_wIntialized = true;
    this._refObject.power_w = value;
  }
  get rconf() {
    if (!this._rconfIntialized) {
      return undefined;
    }
    return this._refObject.rconf;
  }
  set rconf(value) {
    this._rconfIntialized = true;
    this._refObject.rconf = value;
  }
  get rsv() {
    if (!this._rsvIntialized) {
      return undefined;
    }
    return this._refObject.rsv;
  }
  set rsv(value) {
    this._rsvIntialized = true;
    this._refObject.rsv = value;
  }
  get rbv() {
    if (!this._rbvIntialized) {
      return undefined;
    }
    return this._refObject.rbv;
  }
  set rbv(value) {
    this._rbvIntialized = true;
    this._refObject.rbv = value;
  }
  get rp() {
    if (!this._rpIntialized) {
      return undefined;
    }
    return this._refObject.rp;
  }
  set rp(value) {
    this._rpIntialized = true;
    this._refObject.rp = value;
  }
  get rc() {
    if (!this._rcIntialized) {
      return undefined;
    }
    return this._refObject.rc;
  }
  set rc(value) {
    this._rcIntialized = true;
    this._refObject.rc = value;
  }
  get rcal() {
    if (!this._rcalIntialized) {
      return undefined;
    }
    return this._refObject.rcal;
  }
  set rcal(value) {
    this._rcalIntialized = true;
    this._refObject.rcal = value;
  }
  get me() {
    if (!this._meIntialized) {
      return undefined;
    }
    return this._refObject.me;
  }
  set me(value) {
    this._meIntialized = true;
    this._refObject.me = value;
  }
  get al() {
    if (!this._alIntialized) {
      return undefined;
    }
    return this._refObject.al;
  }
  set al(value) {
    this._alIntialized = true;
    this._refObject.al = value;
  }
  copyRefObject(refObject) {
    this._refObject = new PowerMonitorRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._voltage_vIntialized = true;
    this._current_aIntialized = true;
    this._power_wIntialized = true;
    this._rconfIntialized = true;
    this._rsvIntialized = true;
    this._rbvIntialized = true;
    this._rpIntialized = true;
    this._rcIntialized = true;
    this._rcalIntialized = true;
    this._meIntialized = true;
    this._alIntialized = true;
  }
  copy(other) {
    this._refObject = new PowerMonitorRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._voltage_vIntialized = true;
    this._current_aIntialized = true;
    this._power_wIntialized = true;
    this._rconfIntialized = true;
    this._rsvIntialized = true;
    this._rbvIntialized = true;
    this._rpIntialized = true;
    this._rcIntialized = true;
    this._rcalIntialized = true;
    this._meIntialized = true;
    this._alIntialized = true;
  }
  static get classType() {
    return PowerMonitorWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"voltage_v","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"current_a","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"power_w","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rconf","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rsv","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rbv","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rc","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rcal","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"me","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"al","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"PowerMonitor","stringUpperBound":null,"isPrimitiveType":false},"msgName":"PowerMonitor"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","voltage_v","current_a","power_w","rconf","rsv","rbv","rp","rc","rcal","me","al"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class PowerMonitorArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof PowerMonitorWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new PowerMonitorWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to PowerMonitorArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to PowerMonitorArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new PowerMonitorRefArray(size);
    this._refObject = new PowerMonitorRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new PowerMonitorWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof PowerMonitorArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "PowerMonitorArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      PowerMonitorWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return PowerMonitorWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return PowerMonitorArrayWrapper;
  }
}
module.exports = PowerMonitorWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "voltage_v",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "current_a",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "power_w",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rconf",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rsv",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rbv",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rc",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rcal",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "me",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "al",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "PowerMonitor",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "PowerMonitor"
}
*/
