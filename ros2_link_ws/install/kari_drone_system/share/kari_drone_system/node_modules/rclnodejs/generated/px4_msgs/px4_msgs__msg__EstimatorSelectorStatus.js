// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const BoolWrapper = require('../../generated/std_msgs/std_msgs__msg__Bool.js');
const EstimatorSelectorStatusRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  primary_instance: primitiveTypes.uint8,
  instances_available: primitiveTypes.uint8,
  instance_changed_count: primitiveTypes.uint32,
  last_instance_change: primitiveTypes.uint64,
  accel_device_id: primitiveTypes.uint32,
  baro_device_id: primitiveTypes.uint32,
  gyro_device_id: primitiveTypes.uint32,
  mag_device_id: primitiveTypes.uint32,
  combined_test_ratio: ArrayType(primitiveTypes.float32, 9),
  relative_test_ratio: ArrayType(primitiveTypes.float32, 9),
  healthy: ArrayType(primitiveTypes.bool, 9),
  accumulated_gyro_error: ArrayType(primitiveTypes.float32, 4),
  accumulated_accel_error: ArrayType(primitiveTypes.float32, 4),
  gyro_fault_detected: primitiveTypes.bool,
  accel_fault_detected: primitiveTypes.bool,
});
const EstimatorSelectorStatusRefArray = ArrayType(EstimatorSelectorStatusRefStruct);
const EstimatorSelectorStatusRefStructArray = StructType({
  data: EstimatorSelectorStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class EstimatorSelectorStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    this._healthyArray = [];
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new EstimatorSelectorStatusRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._primary_instanceIntialized = true;
      this._instances_availableIntialized = true;
      this._instance_changed_countIntialized = true;
      this._last_instance_changeIntialized = true;
      this._accel_device_idIntialized = true;
      this._baro_device_idIntialized = true;
      this._gyro_device_idIntialized = true;
      this._mag_device_idIntialized = true;
      this._wrapperFields.combined_test_ratio = Float32Wrapper.createArray();
      this._wrapperFields.combined_test_ratio.copy(other._wrapperFields.combined_test_ratio);
      this._wrapperFields.relative_test_ratio = Float32Wrapper.createArray();
      this._wrapperFields.relative_test_ratio.copy(other._wrapperFields.relative_test_ratio);
      this._wrapperFields.healthy = BoolWrapper.createArray();
      this._wrapperFields.healthy.copy(other._wrapperFields.healthy);
      this.healthy = other.healthy;
      this._wrapperFields.accumulated_gyro_error = Float32Wrapper.createArray();
      this._wrapperFields.accumulated_gyro_error.copy(other._wrapperFields.accumulated_gyro_error);
      this._wrapperFields.accumulated_accel_error = Float32Wrapper.createArray();
      this._wrapperFields.accumulated_accel_error.copy(other._wrapperFields.accumulated_accel_error);
      this._gyro_fault_detectedIntialized = true;
      this._accel_fault_detectedIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new EstimatorSelectorStatusRefStruct();
    this._timestampIntialized = false;
    this._primary_instanceIntialized = false;
    this._instances_availableIntialized = false;
    this._instance_changed_countIntialized = false;
    this._last_instance_changeIntialized = false;
    this._accel_device_idIntialized = false;
    this._baro_device_idIntialized = false;
    this._gyro_device_idIntialized = false;
    this._mag_device_idIntialized = false;
    this._wrapperFields.combined_test_ratio = Float32Wrapper.createArray();
    this._wrapperFields.relative_test_ratio = Float32Wrapper.createArray();
    this._wrapperFields.healthy = BoolWrapper.createArray();
    this._wrapperFields.accumulated_gyro_error = Float32Wrapper.createArray();
    this._wrapperFields.accumulated_accel_error = Float32Wrapper.createArray();
    this._gyro_fault_detectedIntialized = false;
    this._accel_fault_detectedIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new EstimatorSelectorStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new EstimatorSelectorStatusArrayWrapper;
  }
  static get ArrayType() {
    return EstimatorSelectorStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return EstimatorSelectorStatusRefStructArray
  }
  static get refObjectType() {
    return EstimatorSelectorStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._primary_instanceIntialized) {
        throw new TypeError('Invalid argument: primary_instance in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._instances_availableIntialized) {
        throw new TypeError('Invalid argument: instances_available in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._instance_changed_countIntialized) {
        throw new TypeError('Invalid argument: instance_changed_count in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._last_instance_changeIntialized) {
        throw new TypeError('Invalid argument: last_instance_change in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._accel_device_idIntialized) {
        throw new TypeError('Invalid argument: accel_device_id in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._baro_device_idIntialized) {
        throw new TypeError('Invalid argument: baro_device_id in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._gyro_device_idIntialized) {
        throw new TypeError('Invalid argument: gyro_device_id in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._mag_device_idIntialized) {
        throw new TypeError('Invalid argument: mag_device_id in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._gyro_fault_detectedIntialized) {
        throw new TypeError('Invalid argument: gyro_fault_detected in EstimatorSelectorStatus');
      }
      if (checkConsistency && !this._accel_fault_detectedIntialized) {
        throw new TypeError('Invalid argument: accel_fault_detected in EstimatorSelectorStatus');
      }
    this._refObject.combined_test_ratio = Array.from(this._wrapperFields.combined_test_ratio.data);
    this._refObject.relative_test_ratio = Array.from(this._wrapperFields.relative_test_ratio.data);
    this._refObject.healthy = this._healthyArray;
    this._refObject.accumulated_gyro_error = Array.from(this._wrapperFields.accumulated_gyro_error.data);
    this._refObject.accumulated_accel_error = Array.from(this._wrapperFields.accumulated_accel_error.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._primary_instanceIntialized = true;
    this._refObject.primary_instance = refObject.primary_instance;
    this._instances_availableIntialized = true;
    this._refObject.instances_available = refObject.instances_available;
    this._instance_changed_countIntialized = true;
    this._refObject.instance_changed_count = refObject.instance_changed_count;
    this._last_instance_changeIntialized = true;
    this._refObject.last_instance_change = refObject.last_instance_change;
    this._accel_device_idIntialized = true;
    this._refObject.accel_device_id = refObject.accel_device_id;
    this._baro_device_idIntialized = true;
    this._refObject.baro_device_id = refObject.baro_device_id;
    this._gyro_device_idIntialized = true;
    this._refObject.gyro_device_id = refObject.gyro_device_id;
    this._mag_device_idIntialized = true;
    this._refObject.mag_device_id = refObject.mag_device_id;
    this._wrapperFields.combined_test_ratio.fill(refObject.combined_test_ratio.toArray());
    this._wrapperFields.relative_test_ratio.fill(refObject.relative_test_ratio.toArray());
    this._healthyArray = refObject.healthy.toArray();
    this._wrapperFields.accumulated_gyro_error.fill(refObject.accumulated_gyro_error.toArray());
    this._wrapperFields.accumulated_accel_error.fill(refObject.accumulated_accel_error.toArray());
    this._gyro_fault_detectedIntialized = true;
    this._refObject.gyro_fault_detected = refObject.gyro_fault_detected;
    this._accel_fault_detectedIntialized = true;
    this._refObject.accel_fault_detected = refObject.accel_fault_detected;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    EstimatorSelectorStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'EstimatorSelectorStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get primary_instance() {
    if (!this._primary_instanceIntialized) {
      return undefined;
    }
    return this._refObject.primary_instance;
  }
  set primary_instance(value) {
    this._primary_instanceIntialized = true;
    this._refObject.primary_instance = value;
  }
  get instances_available() {
    if (!this._instances_availableIntialized) {
      return undefined;
    }
    return this._refObject.instances_available;
  }
  set instances_available(value) {
    this._instances_availableIntialized = true;
    this._refObject.instances_available = value;
  }
  get instance_changed_count() {
    if (!this._instance_changed_countIntialized) {
      return undefined;
    }
    return this._refObject.instance_changed_count;
  }
  set instance_changed_count(value) {
    this._instance_changed_countIntialized = true;
    this._refObject.instance_changed_count = value;
  }
  get last_instance_change() {
    if (!this._last_instance_changeIntialized) {
      return undefined;
    }
    return this._refObject.last_instance_change;
  }
  set last_instance_change(value) {
    this._last_instance_changeIntialized = true;
    this._refObject.last_instance_change = value;
  }
  get accel_device_id() {
    if (!this._accel_device_idIntialized) {
      return undefined;
    }
    return this._refObject.accel_device_id;
  }
  set accel_device_id(value) {
    this._accel_device_idIntialized = true;
    this._refObject.accel_device_id = value;
  }
  get baro_device_id() {
    if (!this._baro_device_idIntialized) {
      return undefined;
    }
    return this._refObject.baro_device_id;
  }
  set baro_device_id(value) {
    this._baro_device_idIntialized = true;
    this._refObject.baro_device_id = value;
  }
  get gyro_device_id() {
    if (!this._gyro_device_idIntialized) {
      return undefined;
    }
    return this._refObject.gyro_device_id;
  }
  set gyro_device_id(value) {
    this._gyro_device_idIntialized = true;
    this._refObject.gyro_device_id = value;
  }
  get mag_device_id() {
    if (!this._mag_device_idIntialized) {
      return undefined;
    }
    return this._refObject.mag_device_id;
  }
  set mag_device_id(value) {
    this._mag_device_idIntialized = true;
    this._refObject.mag_device_id = value;
  }
  get combined_test_ratio() {
    return this._wrapperFields['combined_test_ratio'].data;
  }
  set combined_test_ratio(value) {
    if (value.length !== 9) {
      throw new RangeError('The length of the array must be 9.');
    }
    this._wrapperFields['combined_test_ratio'].fill(value);
  }
  get relative_test_ratio() {
    return this._wrapperFields['relative_test_ratio'].data;
  }
  set relative_test_ratio(value) {
    if (value.length !== 9) {
      throw new RangeError('The length of the array must be 9.');
    }
    this._wrapperFields['relative_test_ratio'].fill(value);
  }
  get healthy() {
    return this._healthyArray;
  }
  set healthy(value) {
    if (value.length !== 9) {
      throw new RangeError('The length of the array must be 9.');
    }
    this._healthyArray = value;
  }
  get accumulated_gyro_error() {
    return this._wrapperFields['accumulated_gyro_error'].data;
  }
  set accumulated_gyro_error(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['accumulated_gyro_error'].fill(value);
  }
  get accumulated_accel_error() {
    return this._wrapperFields['accumulated_accel_error'].data;
  }
  set accumulated_accel_error(value) {
    if (value.length !== 4) {
      throw new RangeError('The length of the array must be 4.');
    }
    this._wrapperFields['accumulated_accel_error'].fill(value);
  }
  get gyro_fault_detected() {
    if (!this._gyro_fault_detectedIntialized) {
      return undefined;
    }
    return this._refObject.gyro_fault_detected;
  }
  set gyro_fault_detected(value) {
    this._gyro_fault_detectedIntialized = true;
    this._refObject.gyro_fault_detected = value;
  }
  get accel_fault_detected() {
    if (!this._accel_fault_detectedIntialized) {
      return undefined;
    }
    return this._refObject.accel_fault_detected;
  }
  set accel_fault_detected(value) {
    this._accel_fault_detectedIntialized = true;
    this._refObject.accel_fault_detected = value;
  }
  copyRefObject(refObject) {
    this._refObject = new EstimatorSelectorStatusRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._primary_instanceIntialized = true;
    this._instances_availableIntialized = true;
    this._instance_changed_countIntialized = true;
    this._last_instance_changeIntialized = true;
    this._accel_device_idIntialized = true;
    this._baro_device_idIntialized = true;
    this._gyro_device_idIntialized = true;
    this._mag_device_idIntialized = true;
    this._wrapperFields.combined_test_ratio.fill(refObject.combined_test_ratio.toArray());
    this._wrapperFields.relative_test_ratio.fill(refObject.relative_test_ratio.toArray());
    refObject.healthy.data.length = refObject.healthy.size;
    for (let index = 0; index < refObject.healthy.size; index++) {
      this._healthyArray[index] = refObject.healthy.data[index].data;
    }
    this._wrapperFields.accumulated_gyro_error.fill(refObject.accumulated_gyro_error.toArray());
    this._wrapperFields.accumulated_accel_error.fill(refObject.accumulated_accel_error.toArray());
    this._gyro_fault_detectedIntialized = true;
    this._accel_fault_detectedIntialized = true;
  }
  copy(other) {
    this._refObject = new EstimatorSelectorStatusRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._primary_instanceIntialized = true;
    this._instances_availableIntialized = true;
    this._instance_changed_countIntialized = true;
    this._last_instance_changeIntialized = true;
    this._accel_device_idIntialized = true;
    this._baro_device_idIntialized = true;
    this._gyro_device_idIntialized = true;
    this._mag_device_idIntialized = true;
    this._wrapperFields.combined_test_ratio.copy(other._wrapperFields.combined_test_ratio);
    this._wrapperFields.relative_test_ratio.copy(other._wrapperFields.relative_test_ratio);
    this._healthyArray = other._healthyArray.slice();
    this._wrapperFields.accumulated_gyro_error.copy(other._wrapperFields.accumulated_gyro_error);
    this._wrapperFields.accumulated_accel_error.copy(other._wrapperFields.accumulated_accel_error);
    this._gyro_fault_detectedIntialized = true;
    this._accel_fault_detectedIntialized = true;
  }
  static get classType() {
    return EstimatorSelectorStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"primary_instance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"instances_available","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"instance_changed_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"last_instance_change","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"baro_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mag_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"combined_test_ratio","type":{"isArray":true,"arraySize":9,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"relative_test_ratio","type":{"isArray":true,"arraySize":9,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"healthy","type":{"isArray":true,"arraySize":9,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accumulated_gyro_error","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accumulated_accel_error","type":{"isArray":true,"arraySize":4,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_fault_detected","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_fault_detected","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"EstimatorSelectorStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"EstimatorSelectorStatus"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","primary_instance","instances_available","instance_changed_count","last_instance_change","accel_device_id","baro_device_id","gyro_device_id","mag_device_id","combined_test_ratio","relative_test_ratio","healthy","accumulated_gyro_error","accumulated_accel_error","gyro_fault_detected","accel_fault_detected"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class EstimatorSelectorStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof EstimatorSelectorStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new EstimatorSelectorStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to EstimatorSelectorStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to EstimatorSelectorStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new EstimatorSelectorStatusRefArray(size);
    this._refObject = new EstimatorSelectorStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new EstimatorSelectorStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof EstimatorSelectorStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "EstimatorSelectorStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      EstimatorSelectorStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return EstimatorSelectorStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return EstimatorSelectorStatusArrayWrapper;
  }
}
module.exports = EstimatorSelectorStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "primary_instance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "instances_available",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "instance_changed_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "last_instance_change",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "baro_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mag_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "combined_test_ratio",
      "type": {
        "isArray": true,
        "arraySize": 9,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "relative_test_ratio",
      "type": {
        "isArray": true,
        "arraySize": 9,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "healthy",
      "type": {
        "isArray": true,
        "arraySize": 9,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accumulated_gyro_error",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accumulated_accel_error",
      "type": {
        "isArray": true,
        "arraySize": 4,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_fault_detected",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_fault_detected",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "EstimatorSelectorStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "EstimatorSelectorStatus"
}
*/
