// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const SensorGpsRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  timestamp_sample: primitiveTypes.uint64,
  device_id: primitiveTypes.uint32,
  lat: primitiveTypes.int32,
  lon: primitiveTypes.int32,
  alt: primitiveTypes.int32,
  alt_ellipsoid: primitiveTypes.int32,
  s_variance_m_s: primitiveTypes.float32,
  c_variance_rad: primitiveTypes.float32,
  fix_type: primitiveTypes.uint8,
  eph: primitiveTypes.float32,
  epv: primitiveTypes.float32,
  hdop: primitiveTypes.float32,
  vdop: primitiveTypes.float32,
  noise_per_ms: primitiveTypes.int32,
  automatic_gain_control: primitiveTypes.uint16,
  jamming_state: primitiveTypes.uint8,
  jamming_indicator: primitiveTypes.int32,
  spoofing_state: primitiveTypes.uint8,
  vel_m_s: primitiveTypes.float32,
  vel_n_m_s: primitiveTypes.float32,
  vel_e_m_s: primitiveTypes.float32,
  vel_d_m_s: primitiveTypes.float32,
  cog_rad: primitiveTypes.float32,
  vel_ned_valid: primitiveTypes.bool,
  timestamp_time_relative: primitiveTypes.int32,
  time_utc_usec: primitiveTypes.uint64,
  satellites_used: primitiveTypes.uint8,
  heading: primitiveTypes.float32,
  heading_offset: primitiveTypes.float32,
  heading_accuracy: primitiveTypes.float32,
  rtcm_injection_rate: primitiveTypes.float32,
  selected_rtcm_instance: primitiveTypes.uint8,
});
const SensorGpsRefArray = ArrayType(SensorGpsRefStruct);
const SensorGpsRefStructArray = StructType({
  data: SensorGpsRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class SensorGpsWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new SensorGpsRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._timestamp_sampleIntialized = true;
      this._device_idIntialized = true;
      this._latIntialized = true;
      this._lonIntialized = true;
      this._altIntialized = true;
      this._alt_ellipsoidIntialized = true;
      this._s_variance_m_sIntialized = true;
      this._c_variance_radIntialized = true;
      this._fix_typeIntialized = true;
      this._ephIntialized = true;
      this._epvIntialized = true;
      this._hdopIntialized = true;
      this._vdopIntialized = true;
      this._noise_per_msIntialized = true;
      this._automatic_gain_controlIntialized = true;
      this._jamming_stateIntialized = true;
      this._jamming_indicatorIntialized = true;
      this._spoofing_stateIntialized = true;
      this._vel_m_sIntialized = true;
      this._vel_n_m_sIntialized = true;
      this._vel_e_m_sIntialized = true;
      this._vel_d_m_sIntialized = true;
      this._cog_radIntialized = true;
      this._vel_ned_validIntialized = true;
      this._timestamp_time_relativeIntialized = true;
      this._time_utc_usecIntialized = true;
      this._satellites_usedIntialized = true;
      this._headingIntialized = true;
      this._heading_offsetIntialized = true;
      this._heading_accuracyIntialized = true;
      this._rtcm_injection_rateIntialized = true;
      this._selected_rtcm_instanceIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new SensorGpsRefStruct();
    this._timestampIntialized = false;
    this._timestamp_sampleIntialized = false;
    this._device_idIntialized = false;
    this._latIntialized = false;
    this._lonIntialized = false;
    this._altIntialized = false;
    this._alt_ellipsoidIntialized = false;
    this._s_variance_m_sIntialized = false;
    this._c_variance_radIntialized = false;
    this._fix_typeIntialized = false;
    this._ephIntialized = false;
    this._epvIntialized = false;
    this._hdopIntialized = false;
    this._vdopIntialized = false;
    this._noise_per_msIntialized = false;
    this._automatic_gain_controlIntialized = false;
    this._jamming_stateIntialized = false;
    this._jamming_indicatorIntialized = false;
    this._spoofing_stateIntialized = false;
    this._vel_m_sIntialized = false;
    this._vel_n_m_sIntialized = false;
    this._vel_e_m_sIntialized = false;
    this._vel_d_m_sIntialized = false;
    this._cog_radIntialized = false;
    this._vel_ned_validIntialized = false;
    this._timestamp_time_relativeIntialized = false;
    this._time_utc_usecIntialized = false;
    this._satellites_usedIntialized = false;
    this._headingIntialized = false;
    this._heading_offsetIntialized = false;
    this._heading_accuracyIntialized = false;
    this._rtcm_injection_rateIntialized = false;
    this._selected_rtcm_instanceIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new SensorGpsWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new SensorGpsArrayWrapper;
  }
  static get ArrayType() {
    return SensorGpsArrayWrapper;
  }
  static get refObjectArrayType() {
    return SensorGpsRefStructArray
  }
  static get refObjectType() {
    return SensorGpsRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in SensorGps');
      }
      if (checkConsistency && !this._timestamp_sampleIntialized) {
        throw new TypeError('Invalid argument: timestamp_sample in SensorGps');
      }
      if (checkConsistency && !this._device_idIntialized) {
        throw new TypeError('Invalid argument: device_id in SensorGps');
      }
      if (checkConsistency && !this._latIntialized) {
        throw new TypeError('Invalid argument: lat in SensorGps');
      }
      if (checkConsistency && !this._lonIntialized) {
        throw new TypeError('Invalid argument: lon in SensorGps');
      }
      if (checkConsistency && !this._altIntialized) {
        throw new TypeError('Invalid argument: alt in SensorGps');
      }
      if (checkConsistency && !this._alt_ellipsoidIntialized) {
        throw new TypeError('Invalid argument: alt_ellipsoid in SensorGps');
      }
      if (checkConsistency && !this._s_variance_m_sIntialized) {
        throw new TypeError('Invalid argument: s_variance_m_s in SensorGps');
      }
      if (checkConsistency && !this._c_variance_radIntialized) {
        throw new TypeError('Invalid argument: c_variance_rad in SensorGps');
      }
      if (checkConsistency && !this._fix_typeIntialized) {
        throw new TypeError('Invalid argument: fix_type in SensorGps');
      }
      if (checkConsistency && !this._ephIntialized) {
        throw new TypeError('Invalid argument: eph in SensorGps');
      }
      if (checkConsistency && !this._epvIntialized) {
        throw new TypeError('Invalid argument: epv in SensorGps');
      }
      if (checkConsistency && !this._hdopIntialized) {
        throw new TypeError('Invalid argument: hdop in SensorGps');
      }
      if (checkConsistency && !this._vdopIntialized) {
        throw new TypeError('Invalid argument: vdop in SensorGps');
      }
      if (checkConsistency && !this._noise_per_msIntialized) {
        throw new TypeError('Invalid argument: noise_per_ms in SensorGps');
      }
      if (checkConsistency && !this._automatic_gain_controlIntialized) {
        throw new TypeError('Invalid argument: automatic_gain_control in SensorGps');
      }
      if (checkConsistency && !this._jamming_stateIntialized) {
        throw new TypeError('Invalid argument: jamming_state in SensorGps');
      }
      if (checkConsistency && !this._jamming_indicatorIntialized) {
        throw new TypeError('Invalid argument: jamming_indicator in SensorGps');
      }
      if (checkConsistency && !this._spoofing_stateIntialized) {
        throw new TypeError('Invalid argument: spoofing_state in SensorGps');
      }
      if (checkConsistency && !this._vel_m_sIntialized) {
        throw new TypeError('Invalid argument: vel_m_s in SensorGps');
      }
      if (checkConsistency && !this._vel_n_m_sIntialized) {
        throw new TypeError('Invalid argument: vel_n_m_s in SensorGps');
      }
      if (checkConsistency && !this._vel_e_m_sIntialized) {
        throw new TypeError('Invalid argument: vel_e_m_s in SensorGps');
      }
      if (checkConsistency && !this._vel_d_m_sIntialized) {
        throw new TypeError('Invalid argument: vel_d_m_s in SensorGps');
      }
      if (checkConsistency && !this._cog_radIntialized) {
        throw new TypeError('Invalid argument: cog_rad in SensorGps');
      }
      if (checkConsistency && !this._vel_ned_validIntialized) {
        throw new TypeError('Invalid argument: vel_ned_valid in SensorGps');
      }
      if (checkConsistency && !this._timestamp_time_relativeIntialized) {
        throw new TypeError('Invalid argument: timestamp_time_relative in SensorGps');
      }
      if (checkConsistency && !this._time_utc_usecIntialized) {
        throw new TypeError('Invalid argument: time_utc_usec in SensorGps');
      }
      if (checkConsistency && !this._satellites_usedIntialized) {
        throw new TypeError('Invalid argument: satellites_used in SensorGps');
      }
      if (checkConsistency && !this._headingIntialized) {
        throw new TypeError('Invalid argument: heading in SensorGps');
      }
      if (checkConsistency && !this._heading_offsetIntialized) {
        throw new TypeError('Invalid argument: heading_offset in SensorGps');
      }
      if (checkConsistency && !this._heading_accuracyIntialized) {
        throw new TypeError('Invalid argument: heading_accuracy in SensorGps');
      }
      if (checkConsistency && !this._rtcm_injection_rateIntialized) {
        throw new TypeError('Invalid argument: rtcm_injection_rate in SensorGps');
      }
      if (checkConsistency && !this._selected_rtcm_instanceIntialized) {
        throw new TypeError('Invalid argument: selected_rtcm_instance in SensorGps');
      }
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = refObject.timestamp_sample;
    this._device_idIntialized = true;
    this._refObject.device_id = refObject.device_id;
    this._latIntialized = true;
    this._refObject.lat = refObject.lat;
    this._lonIntialized = true;
    this._refObject.lon = refObject.lon;
    this._altIntialized = true;
    this._refObject.alt = refObject.alt;
    this._alt_ellipsoidIntialized = true;
    this._refObject.alt_ellipsoid = refObject.alt_ellipsoid;
    this._s_variance_m_sIntialized = true;
    this._refObject.s_variance_m_s = refObject.s_variance_m_s;
    this._c_variance_radIntialized = true;
    this._refObject.c_variance_rad = refObject.c_variance_rad;
    this._fix_typeIntialized = true;
    this._refObject.fix_type = refObject.fix_type;
    this._ephIntialized = true;
    this._refObject.eph = refObject.eph;
    this._epvIntialized = true;
    this._refObject.epv = refObject.epv;
    this._hdopIntialized = true;
    this._refObject.hdop = refObject.hdop;
    this._vdopIntialized = true;
    this._refObject.vdop = refObject.vdop;
    this._noise_per_msIntialized = true;
    this._refObject.noise_per_ms = refObject.noise_per_ms;
    this._automatic_gain_controlIntialized = true;
    this._refObject.automatic_gain_control = refObject.automatic_gain_control;
    this._jamming_stateIntialized = true;
    this._refObject.jamming_state = refObject.jamming_state;
    this._jamming_indicatorIntialized = true;
    this._refObject.jamming_indicator = refObject.jamming_indicator;
    this._spoofing_stateIntialized = true;
    this._refObject.spoofing_state = refObject.spoofing_state;
    this._vel_m_sIntialized = true;
    this._refObject.vel_m_s = refObject.vel_m_s;
    this._vel_n_m_sIntialized = true;
    this._refObject.vel_n_m_s = refObject.vel_n_m_s;
    this._vel_e_m_sIntialized = true;
    this._refObject.vel_e_m_s = refObject.vel_e_m_s;
    this._vel_d_m_sIntialized = true;
    this._refObject.vel_d_m_s = refObject.vel_d_m_s;
    this._cog_radIntialized = true;
    this._refObject.cog_rad = refObject.cog_rad;
    this._vel_ned_validIntialized = true;
    this._refObject.vel_ned_valid = refObject.vel_ned_valid;
    this._timestamp_time_relativeIntialized = true;
    this._refObject.timestamp_time_relative = refObject.timestamp_time_relative;
    this._time_utc_usecIntialized = true;
    this._refObject.time_utc_usec = refObject.time_utc_usec;
    this._satellites_usedIntialized = true;
    this._refObject.satellites_used = refObject.satellites_used;
    this._headingIntialized = true;
    this._refObject.heading = refObject.heading;
    this._heading_offsetIntialized = true;
    this._refObject.heading_offset = refObject.heading_offset;
    this._heading_accuracyIntialized = true;
    this._refObject.heading_accuracy = refObject.heading_accuracy;
    this._rtcm_injection_rateIntialized = true;
    this._refObject.rtcm_injection_rate = refObject.rtcm_injection_rate;
    this._selected_rtcm_instanceIntialized = true;
    this._refObject.selected_rtcm_instance = refObject.selected_rtcm_instance;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    SensorGpsWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'SensorGps'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get timestamp_sample() {
    if (!this._timestamp_sampleIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_sample;
  }
  set timestamp_sample(value) {
    this._timestamp_sampleIntialized = true;
    this._refObject.timestamp_sample = value;
  }
  get device_id() {
    if (!this._device_idIntialized) {
      return undefined;
    }
    return this._refObject.device_id;
  }
  set device_id(value) {
    this._device_idIntialized = true;
    this._refObject.device_id = value;
  }
  get lat() {
    if (!this._latIntialized) {
      return undefined;
    }
    return this._refObject.lat;
  }
  set lat(value) {
    this._latIntialized = true;
    this._refObject.lat = value;
  }
  get lon() {
    if (!this._lonIntialized) {
      return undefined;
    }
    return this._refObject.lon;
  }
  set lon(value) {
    this._lonIntialized = true;
    this._refObject.lon = value;
  }
  get alt() {
    if (!this._altIntialized) {
      return undefined;
    }
    return this._refObject.alt;
  }
  set alt(value) {
    this._altIntialized = true;
    this._refObject.alt = value;
  }
  get alt_ellipsoid() {
    if (!this._alt_ellipsoidIntialized) {
      return undefined;
    }
    return this._refObject.alt_ellipsoid;
  }
  set alt_ellipsoid(value) {
    this._alt_ellipsoidIntialized = true;
    this._refObject.alt_ellipsoid = value;
  }
  get s_variance_m_s() {
    if (!this._s_variance_m_sIntialized) {
      return undefined;
    }
    return this._refObject.s_variance_m_s;
  }
  set s_variance_m_s(value) {
    this._s_variance_m_sIntialized = true;
    this._refObject.s_variance_m_s = value;
  }
  get c_variance_rad() {
    if (!this._c_variance_radIntialized) {
      return undefined;
    }
    return this._refObject.c_variance_rad;
  }
  set c_variance_rad(value) {
    this._c_variance_radIntialized = true;
    this._refObject.c_variance_rad = value;
  }
  get fix_type() {
    if (!this._fix_typeIntialized) {
      return undefined;
    }
    return this._refObject.fix_type;
  }
  set fix_type(value) {
    this._fix_typeIntialized = true;
    this._refObject.fix_type = value;
  }
  get eph() {
    if (!this._ephIntialized) {
      return undefined;
    }
    return this._refObject.eph;
  }
  set eph(value) {
    this._ephIntialized = true;
    this._refObject.eph = value;
  }
  get epv() {
    if (!this._epvIntialized) {
      return undefined;
    }
    return this._refObject.epv;
  }
  set epv(value) {
    this._epvIntialized = true;
    this._refObject.epv = value;
  }
  get hdop() {
    if (!this._hdopIntialized) {
      return undefined;
    }
    return this._refObject.hdop;
  }
  set hdop(value) {
    this._hdopIntialized = true;
    this._refObject.hdop = value;
  }
  get vdop() {
    if (!this._vdopIntialized) {
      return undefined;
    }
    return this._refObject.vdop;
  }
  set vdop(value) {
    this._vdopIntialized = true;
    this._refObject.vdop = value;
  }
  get noise_per_ms() {
    if (!this._noise_per_msIntialized) {
      return undefined;
    }
    return this._refObject.noise_per_ms;
  }
  set noise_per_ms(value) {
    this._noise_per_msIntialized = true;
    this._refObject.noise_per_ms = value;
  }
  get automatic_gain_control() {
    if (!this._automatic_gain_controlIntialized) {
      return undefined;
    }
    return this._refObject.automatic_gain_control;
  }
  set automatic_gain_control(value) {
    this._automatic_gain_controlIntialized = true;
    this._refObject.automatic_gain_control = value;
  }
  get jamming_state() {
    if (!this._jamming_stateIntialized) {
      return undefined;
    }
    return this._refObject.jamming_state;
  }
  set jamming_state(value) {
    this._jamming_stateIntialized = true;
    this._refObject.jamming_state = value;
  }
  get jamming_indicator() {
    if (!this._jamming_indicatorIntialized) {
      return undefined;
    }
    return this._refObject.jamming_indicator;
  }
  set jamming_indicator(value) {
    this._jamming_indicatorIntialized = true;
    this._refObject.jamming_indicator = value;
  }
  get spoofing_state() {
    if (!this._spoofing_stateIntialized) {
      return undefined;
    }
    return this._refObject.spoofing_state;
  }
  set spoofing_state(value) {
    this._spoofing_stateIntialized = true;
    this._refObject.spoofing_state = value;
  }
  get vel_m_s() {
    if (!this._vel_m_sIntialized) {
      return undefined;
    }
    return this._refObject.vel_m_s;
  }
  set vel_m_s(value) {
    this._vel_m_sIntialized = true;
    this._refObject.vel_m_s = value;
  }
  get vel_n_m_s() {
    if (!this._vel_n_m_sIntialized) {
      return undefined;
    }
    return this._refObject.vel_n_m_s;
  }
  set vel_n_m_s(value) {
    this._vel_n_m_sIntialized = true;
    this._refObject.vel_n_m_s = value;
  }
  get vel_e_m_s() {
    if (!this._vel_e_m_sIntialized) {
      return undefined;
    }
    return this._refObject.vel_e_m_s;
  }
  set vel_e_m_s(value) {
    this._vel_e_m_sIntialized = true;
    this._refObject.vel_e_m_s = value;
  }
  get vel_d_m_s() {
    if (!this._vel_d_m_sIntialized) {
      return undefined;
    }
    return this._refObject.vel_d_m_s;
  }
  set vel_d_m_s(value) {
    this._vel_d_m_sIntialized = true;
    this._refObject.vel_d_m_s = value;
  }
  get cog_rad() {
    if (!this._cog_radIntialized) {
      return undefined;
    }
    return this._refObject.cog_rad;
  }
  set cog_rad(value) {
    this._cog_radIntialized = true;
    this._refObject.cog_rad = value;
  }
  get vel_ned_valid() {
    if (!this._vel_ned_validIntialized) {
      return undefined;
    }
    return this._refObject.vel_ned_valid;
  }
  set vel_ned_valid(value) {
    this._vel_ned_validIntialized = true;
    this._refObject.vel_ned_valid = value;
  }
  get timestamp_time_relative() {
    if (!this._timestamp_time_relativeIntialized) {
      return undefined;
    }
    return this._refObject.timestamp_time_relative;
  }
  set timestamp_time_relative(value) {
    this._timestamp_time_relativeIntialized = true;
    this._refObject.timestamp_time_relative = value;
  }
  get time_utc_usec() {
    if (!this._time_utc_usecIntialized) {
      return undefined;
    }
    return this._refObject.time_utc_usec;
  }
  set time_utc_usec(value) {
    this._time_utc_usecIntialized = true;
    this._refObject.time_utc_usec = value;
  }
  get satellites_used() {
    if (!this._satellites_usedIntialized) {
      return undefined;
    }
    return this._refObject.satellites_used;
  }
  set satellites_used(value) {
    this._satellites_usedIntialized = true;
    this._refObject.satellites_used = value;
  }
  get heading() {
    if (!this._headingIntialized) {
      return undefined;
    }
    return this._refObject.heading;
  }
  set heading(value) {
    this._headingIntialized = true;
    this._refObject.heading = value;
  }
  get heading_offset() {
    if (!this._heading_offsetIntialized) {
      return undefined;
    }
    return this._refObject.heading_offset;
  }
  set heading_offset(value) {
    this._heading_offsetIntialized = true;
    this._refObject.heading_offset = value;
  }
  get heading_accuracy() {
    if (!this._heading_accuracyIntialized) {
      return undefined;
    }
    return this._refObject.heading_accuracy;
  }
  set heading_accuracy(value) {
    this._heading_accuracyIntialized = true;
    this._refObject.heading_accuracy = value;
  }
  get rtcm_injection_rate() {
    if (!this._rtcm_injection_rateIntialized) {
      return undefined;
    }
    return this._refObject.rtcm_injection_rate;
  }
  set rtcm_injection_rate(value) {
    this._rtcm_injection_rateIntialized = true;
    this._refObject.rtcm_injection_rate = value;
  }
  get selected_rtcm_instance() {
    if (!this._selected_rtcm_instanceIntialized) {
      return undefined;
    }
    return this._refObject.selected_rtcm_instance;
  }
  set selected_rtcm_instance(value) {
    this._selected_rtcm_instanceIntialized = true;
    this._refObject.selected_rtcm_instance = value;
  }
  copyRefObject(refObject) {
    this._refObject = new SensorGpsRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._device_idIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altIntialized = true;
    this._alt_ellipsoidIntialized = true;
    this._s_variance_m_sIntialized = true;
    this._c_variance_radIntialized = true;
    this._fix_typeIntialized = true;
    this._ephIntialized = true;
    this._epvIntialized = true;
    this._hdopIntialized = true;
    this._vdopIntialized = true;
    this._noise_per_msIntialized = true;
    this._automatic_gain_controlIntialized = true;
    this._jamming_stateIntialized = true;
    this._jamming_indicatorIntialized = true;
    this._spoofing_stateIntialized = true;
    this._vel_m_sIntialized = true;
    this._vel_n_m_sIntialized = true;
    this._vel_e_m_sIntialized = true;
    this._vel_d_m_sIntialized = true;
    this._cog_radIntialized = true;
    this._vel_ned_validIntialized = true;
    this._timestamp_time_relativeIntialized = true;
    this._time_utc_usecIntialized = true;
    this._satellites_usedIntialized = true;
    this._headingIntialized = true;
    this._heading_offsetIntialized = true;
    this._heading_accuracyIntialized = true;
    this._rtcm_injection_rateIntialized = true;
    this._selected_rtcm_instanceIntialized = true;
  }
  copy(other) {
    this._refObject = new SensorGpsRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._timestamp_sampleIntialized = true;
    this._device_idIntialized = true;
    this._latIntialized = true;
    this._lonIntialized = true;
    this._altIntialized = true;
    this._alt_ellipsoidIntialized = true;
    this._s_variance_m_sIntialized = true;
    this._c_variance_radIntialized = true;
    this._fix_typeIntialized = true;
    this._ephIntialized = true;
    this._epvIntialized = true;
    this._hdopIntialized = true;
    this._vdopIntialized = true;
    this._noise_per_msIntialized = true;
    this._automatic_gain_controlIntialized = true;
    this._jamming_stateIntialized = true;
    this._jamming_indicatorIntialized = true;
    this._spoofing_stateIntialized = true;
    this._vel_m_sIntialized = true;
    this._vel_n_m_sIntialized = true;
    this._vel_e_m_sIntialized = true;
    this._vel_d_m_sIntialized = true;
    this._cog_radIntialized = true;
    this._vel_ned_validIntialized = true;
    this._timestamp_time_relativeIntialized = true;
    this._time_utc_usecIntialized = true;
    this._satellites_usedIntialized = true;
    this._headingIntialized = true;
    this._heading_offsetIntialized = true;
    this._heading_accuracyIntialized = true;
    this._rtcm_injection_rateIntialized = true;
    this._selected_rtcm_instanceIntialized = true;
  }
  static get classType() {
    return SensorGpsWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"JAMMING_STATE_UNKNOWN","value":0},{"type":"uint8","name":"JAMMING_STATE_OK","value":1},{"type":"uint8","name":"JAMMING_STATE_WARNING","value":2},{"type":"uint8","name":"JAMMING_STATE_CRITICAL","value":3},{"type":"uint8","name":"SPOOFING_STATE_UNKNOWN","value":0},{"type":"uint8","name":"SPOOFING_STATE_NONE","value":1},{"type":"uint8","name":"SPOOFING_STATE_INDICATED","value":2},{"type":"uint8","name":"SPOOFING_STATE_MULTIPLE","value":3}],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_sample","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lat","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"lon","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"alt","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"alt_ellipsoid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"s_variance_m_s","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"c_variance_rad","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"fix_type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"eph","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"epv","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"hdop","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vdop","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"noise_per_ms","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"automatic_gain_control","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"jamming_state","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"jamming_indicator","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"spoofing_state","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_m_s","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_n_m_s","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_e_m_s","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_d_m_s","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"cog_rad","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"vel_ned_valid","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"timestamp_time_relative","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_utc_usec","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"satellites_used","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading_offset","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"heading_accuracy","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rtcm_injection_rate","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"selected_rtcm_instance","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"SensorGps","stringUpperBound":null,"isPrimitiveType":false},"msgName":"SensorGps"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","timestamp_sample","device_id","lat","lon","alt","alt_ellipsoid","s_variance_m_s","c_variance_rad","fix_type","eph","epv","hdop","vdop","noise_per_ms","automatic_gain_control","jamming_state","jamming_indicator","spoofing_state","vel_m_s","vel_n_m_s","vel_e_m_s","vel_d_m_s","cog_rad","vel_ned_valid","timestamp_time_relative","time_utc_usec","satellites_used","heading","heading_offset","heading_accuracy","rtcm_injection_rate","selected_rtcm_instance"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class SensorGpsArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof SensorGpsWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new SensorGpsWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorGpsArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to SensorGpsArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new SensorGpsRefArray(size);
    this._refObject = new SensorGpsRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new SensorGpsWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof SensorGpsArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "SensorGpsArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      SensorGpsWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return SensorGpsWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return SensorGpsArrayWrapper;
  }
}
// Define constants (8 in total)
Object.defineProperty(SensorGpsWrapper, "JAMMING_STATE_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "JAMMING_STATE_OK", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "JAMMING_STATE_WARNING", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "JAMMING_STATE_CRITICAL", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "SPOOFING_STATE_UNKNOWN", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "SPOOFING_STATE_NONE", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "SPOOFING_STATE_INDICATED", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(SensorGpsWrapper, "SPOOFING_STATE_MULTIPLE", {value: 3, writable: false, enumerable: true, configurable: true});
module.exports = SensorGpsWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "JAMMING_STATE_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "JAMMING_STATE_OK",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "JAMMING_STATE_WARNING",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "JAMMING_STATE_CRITICAL",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "SPOOFING_STATE_UNKNOWN",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "SPOOFING_STATE_NONE",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "SPOOFING_STATE_INDICATED",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "SPOOFING_STATE_MULTIPLE",
      "value": 3
    }
  ],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_sample",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lat",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "lon",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "alt",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "alt_ellipsoid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "s_variance_m_s",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "c_variance_rad",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "fix_type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "eph",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "epv",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "hdop",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vdop",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "noise_per_ms",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "automatic_gain_control",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "jamming_state",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "jamming_indicator",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "spoofing_state",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_m_s",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_n_m_s",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_e_m_s",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_d_m_s",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "cog_rad",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "vel_ned_valid",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "timestamp_time_relative",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_utc_usec",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "satellites_used",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading_offset",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "heading_accuracy",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rtcm_injection_rate",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "selected_rtcm_instance",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "SensorGps",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "SensorGps"
}
*/
