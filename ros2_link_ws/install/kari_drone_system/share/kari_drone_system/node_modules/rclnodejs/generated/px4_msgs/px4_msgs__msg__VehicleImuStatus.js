// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const UInt32Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt32.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const VehicleImuStatusRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  accel_device_id: primitiveTypes.uint32,
  gyro_device_id: primitiveTypes.uint32,
  accel_clipping: ArrayType(primitiveTypes.uint32, 3),
  gyro_clipping: ArrayType(primitiveTypes.uint32, 3),
  accel_error_count: primitiveTypes.uint32,
  gyro_error_count: primitiveTypes.uint32,
  accel_rate_hz: primitiveTypes.float32,
  gyro_rate_hz: primitiveTypes.float32,
  accel_raw_rate_hz: primitiveTypes.float32,
  gyro_raw_rate_hz: primitiveTypes.float32,
  accel_vibration_metric: primitiveTypes.float32,
  gyro_vibration_metric: primitiveTypes.float32,
  delta_angle_coning_metric: primitiveTypes.float32,
  mean_accel: ArrayType(primitiveTypes.float32, 3),
  mean_gyro: ArrayType(primitiveTypes.float32, 3),
  var_accel: ArrayType(primitiveTypes.float32, 3),
  var_gyro: ArrayType(primitiveTypes.float32, 3),
  temperature_accel: primitiveTypes.float32,
  temperature_gyro: primitiveTypes.float32,
});
const VehicleImuStatusRefArray = ArrayType(VehicleImuStatusRefStruct);
const VehicleImuStatusRefStructArray = StructType({
  data: VehicleImuStatusRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class VehicleImuStatusWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new VehicleImuStatusRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._accel_device_idIntialized = true;
      this._gyro_device_idIntialized = true;
      this._wrapperFields.accel_clipping = UInt32Wrapper.createArray();
      this._wrapperFields.accel_clipping.copy(other._wrapperFields.accel_clipping);
      this._wrapperFields.gyro_clipping = UInt32Wrapper.createArray();
      this._wrapperFields.gyro_clipping.copy(other._wrapperFields.gyro_clipping);
      this._accel_error_countIntialized = true;
      this._gyro_error_countIntialized = true;
      this._accel_rate_hzIntialized = true;
      this._gyro_rate_hzIntialized = true;
      this._accel_raw_rate_hzIntialized = true;
      this._gyro_raw_rate_hzIntialized = true;
      this._accel_vibration_metricIntialized = true;
      this._gyro_vibration_metricIntialized = true;
      this._delta_angle_coning_metricIntialized = true;
      this._wrapperFields.mean_accel = Float32Wrapper.createArray();
      this._wrapperFields.mean_accel.copy(other._wrapperFields.mean_accel);
      this._wrapperFields.mean_gyro = Float32Wrapper.createArray();
      this._wrapperFields.mean_gyro.copy(other._wrapperFields.mean_gyro);
      this._wrapperFields.var_accel = Float32Wrapper.createArray();
      this._wrapperFields.var_accel.copy(other._wrapperFields.var_accel);
      this._wrapperFields.var_gyro = Float32Wrapper.createArray();
      this._wrapperFields.var_gyro.copy(other._wrapperFields.var_gyro);
      this._temperature_accelIntialized = true;
      this._temperature_gyroIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new VehicleImuStatusRefStruct();
    this._timestampIntialized = false;
    this._accel_device_idIntialized = false;
    this._gyro_device_idIntialized = false;
    this._wrapperFields.accel_clipping = UInt32Wrapper.createArray();
    this._wrapperFields.gyro_clipping = UInt32Wrapper.createArray();
    this._accel_error_countIntialized = false;
    this._gyro_error_countIntialized = false;
    this._accel_rate_hzIntialized = false;
    this._gyro_rate_hzIntialized = false;
    this._accel_raw_rate_hzIntialized = false;
    this._gyro_raw_rate_hzIntialized = false;
    this._accel_vibration_metricIntialized = false;
    this._gyro_vibration_metricIntialized = false;
    this._delta_angle_coning_metricIntialized = false;
    this._wrapperFields.mean_accel = Float32Wrapper.createArray();
    this._wrapperFields.mean_gyro = Float32Wrapper.createArray();
    this._wrapperFields.var_accel = Float32Wrapper.createArray();
    this._wrapperFields.var_gyro = Float32Wrapper.createArray();
    this._temperature_accelIntialized = false;
    this._temperature_gyroIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new VehicleImuStatusWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new VehicleImuStatusArrayWrapper;
  }
  static get ArrayType() {
    return VehicleImuStatusArrayWrapper;
  }
  static get refObjectArrayType() {
    return VehicleImuStatusRefStructArray
  }
  static get refObjectType() {
    return VehicleImuStatusRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in VehicleImuStatus');
      }
      if (checkConsistency && !this._accel_device_idIntialized) {
        throw new TypeError('Invalid argument: accel_device_id in VehicleImuStatus');
      }
      if (checkConsistency && !this._gyro_device_idIntialized) {
        throw new TypeError('Invalid argument: gyro_device_id in VehicleImuStatus');
      }
      if (checkConsistency && !this._accel_error_countIntialized) {
        throw new TypeError('Invalid argument: accel_error_count in VehicleImuStatus');
      }
      if (checkConsistency && !this._gyro_error_countIntialized) {
        throw new TypeError('Invalid argument: gyro_error_count in VehicleImuStatus');
      }
      if (checkConsistency && !this._accel_rate_hzIntialized) {
        throw new TypeError('Invalid argument: accel_rate_hz in VehicleImuStatus');
      }
      if (checkConsistency && !this._gyro_rate_hzIntialized) {
        throw new TypeError('Invalid argument: gyro_rate_hz in VehicleImuStatus');
      }
      if (checkConsistency && !this._accel_raw_rate_hzIntialized) {
        throw new TypeError('Invalid argument: accel_raw_rate_hz in VehicleImuStatus');
      }
      if (checkConsistency && !this._gyro_raw_rate_hzIntialized) {
        throw new TypeError('Invalid argument: gyro_raw_rate_hz in VehicleImuStatus');
      }
      if (checkConsistency && !this._accel_vibration_metricIntialized) {
        throw new TypeError('Invalid argument: accel_vibration_metric in VehicleImuStatus');
      }
      if (checkConsistency && !this._gyro_vibration_metricIntialized) {
        throw new TypeError('Invalid argument: gyro_vibration_metric in VehicleImuStatus');
      }
      if (checkConsistency && !this._delta_angle_coning_metricIntialized) {
        throw new TypeError('Invalid argument: delta_angle_coning_metric in VehicleImuStatus');
      }
      if (checkConsistency && !this._temperature_accelIntialized) {
        throw new TypeError('Invalid argument: temperature_accel in VehicleImuStatus');
      }
      if (checkConsistency && !this._temperature_gyroIntialized) {
        throw new TypeError('Invalid argument: temperature_gyro in VehicleImuStatus');
      }
    this._refObject.accel_clipping = Array.from(this._wrapperFields.accel_clipping.data);
    this._refObject.gyro_clipping = Array.from(this._wrapperFields.gyro_clipping.data);
    this._refObject.mean_accel = Array.from(this._wrapperFields.mean_accel.data);
    this._refObject.mean_gyro = Array.from(this._wrapperFields.mean_gyro.data);
    this._refObject.var_accel = Array.from(this._wrapperFields.var_accel.data);
    this._refObject.var_gyro = Array.from(this._wrapperFields.var_gyro.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._accel_device_idIntialized = true;
    this._refObject.accel_device_id = refObject.accel_device_id;
    this._gyro_device_idIntialized = true;
    this._refObject.gyro_device_id = refObject.gyro_device_id;
    this._wrapperFields.accel_clipping.fill(refObject.accel_clipping.toArray());
    this._wrapperFields.gyro_clipping.fill(refObject.gyro_clipping.toArray());
    this._accel_error_countIntialized = true;
    this._refObject.accel_error_count = refObject.accel_error_count;
    this._gyro_error_countIntialized = true;
    this._refObject.gyro_error_count = refObject.gyro_error_count;
    this._accel_rate_hzIntialized = true;
    this._refObject.accel_rate_hz = refObject.accel_rate_hz;
    this._gyro_rate_hzIntialized = true;
    this._refObject.gyro_rate_hz = refObject.gyro_rate_hz;
    this._accel_raw_rate_hzIntialized = true;
    this._refObject.accel_raw_rate_hz = refObject.accel_raw_rate_hz;
    this._gyro_raw_rate_hzIntialized = true;
    this._refObject.gyro_raw_rate_hz = refObject.gyro_raw_rate_hz;
    this._accel_vibration_metricIntialized = true;
    this._refObject.accel_vibration_metric = refObject.accel_vibration_metric;
    this._gyro_vibration_metricIntialized = true;
    this._refObject.gyro_vibration_metric = refObject.gyro_vibration_metric;
    this._delta_angle_coning_metricIntialized = true;
    this._refObject.delta_angle_coning_metric = refObject.delta_angle_coning_metric;
    this._wrapperFields.mean_accel.fill(refObject.mean_accel.toArray());
    this._wrapperFields.mean_gyro.fill(refObject.mean_gyro.toArray());
    this._wrapperFields.var_accel.fill(refObject.var_accel.toArray());
    this._wrapperFields.var_gyro.fill(refObject.var_gyro.toArray());
    this._temperature_accelIntialized = true;
    this._refObject.temperature_accel = refObject.temperature_accel;
    this._temperature_gyroIntialized = true;
    this._refObject.temperature_gyro = refObject.temperature_gyro;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    VehicleImuStatusWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'VehicleImuStatus'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get accel_device_id() {
    if (!this._accel_device_idIntialized) {
      return undefined;
    }
    return this._refObject.accel_device_id;
  }
  set accel_device_id(value) {
    this._accel_device_idIntialized = true;
    this._refObject.accel_device_id = value;
  }
  get gyro_device_id() {
    if (!this._gyro_device_idIntialized) {
      return undefined;
    }
    return this._refObject.gyro_device_id;
  }
  set gyro_device_id(value) {
    this._gyro_device_idIntialized = true;
    this._refObject.gyro_device_id = value;
  }
  get accel_clipping() {
    return this._wrapperFields['accel_clipping'].data;
  }
  set accel_clipping(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['accel_clipping'].fill(value);
  }
  get gyro_clipping() {
    return this._wrapperFields['gyro_clipping'].data;
  }
  set gyro_clipping(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['gyro_clipping'].fill(value);
  }
  get accel_error_count() {
    if (!this._accel_error_countIntialized) {
      return undefined;
    }
    return this._refObject.accel_error_count;
  }
  set accel_error_count(value) {
    this._accel_error_countIntialized = true;
    this._refObject.accel_error_count = value;
  }
  get gyro_error_count() {
    if (!this._gyro_error_countIntialized) {
      return undefined;
    }
    return this._refObject.gyro_error_count;
  }
  set gyro_error_count(value) {
    this._gyro_error_countIntialized = true;
    this._refObject.gyro_error_count = value;
  }
  get accel_rate_hz() {
    if (!this._accel_rate_hzIntialized) {
      return undefined;
    }
    return this._refObject.accel_rate_hz;
  }
  set accel_rate_hz(value) {
    this._accel_rate_hzIntialized = true;
    this._refObject.accel_rate_hz = value;
  }
  get gyro_rate_hz() {
    if (!this._gyro_rate_hzIntialized) {
      return undefined;
    }
    return this._refObject.gyro_rate_hz;
  }
  set gyro_rate_hz(value) {
    this._gyro_rate_hzIntialized = true;
    this._refObject.gyro_rate_hz = value;
  }
  get accel_raw_rate_hz() {
    if (!this._accel_raw_rate_hzIntialized) {
      return undefined;
    }
    return this._refObject.accel_raw_rate_hz;
  }
  set accel_raw_rate_hz(value) {
    this._accel_raw_rate_hzIntialized = true;
    this._refObject.accel_raw_rate_hz = value;
  }
  get gyro_raw_rate_hz() {
    if (!this._gyro_raw_rate_hzIntialized) {
      return undefined;
    }
    return this._refObject.gyro_raw_rate_hz;
  }
  set gyro_raw_rate_hz(value) {
    this._gyro_raw_rate_hzIntialized = true;
    this._refObject.gyro_raw_rate_hz = value;
  }
  get accel_vibration_metric() {
    if (!this._accel_vibration_metricIntialized) {
      return undefined;
    }
    return this._refObject.accel_vibration_metric;
  }
  set accel_vibration_metric(value) {
    this._accel_vibration_metricIntialized = true;
    this._refObject.accel_vibration_metric = value;
  }
  get gyro_vibration_metric() {
    if (!this._gyro_vibration_metricIntialized) {
      return undefined;
    }
    return this._refObject.gyro_vibration_metric;
  }
  set gyro_vibration_metric(value) {
    this._gyro_vibration_metricIntialized = true;
    this._refObject.gyro_vibration_metric = value;
  }
  get delta_angle_coning_metric() {
    if (!this._delta_angle_coning_metricIntialized) {
      return undefined;
    }
    return this._refObject.delta_angle_coning_metric;
  }
  set delta_angle_coning_metric(value) {
    this._delta_angle_coning_metricIntialized = true;
    this._refObject.delta_angle_coning_metric = value;
  }
  get mean_accel() {
    return this._wrapperFields['mean_accel'].data;
  }
  set mean_accel(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['mean_accel'].fill(value);
  }
  get mean_gyro() {
    return this._wrapperFields['mean_gyro'].data;
  }
  set mean_gyro(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['mean_gyro'].fill(value);
  }
  get var_accel() {
    return this._wrapperFields['var_accel'].data;
  }
  set var_accel(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['var_accel'].fill(value);
  }
  get var_gyro() {
    return this._wrapperFields['var_gyro'].data;
  }
  set var_gyro(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._wrapperFields['var_gyro'].fill(value);
  }
  get temperature_accel() {
    if (!this._temperature_accelIntialized) {
      return undefined;
    }
    return this._refObject.temperature_accel;
  }
  set temperature_accel(value) {
    this._temperature_accelIntialized = true;
    this._refObject.temperature_accel = value;
  }
  get temperature_gyro() {
    if (!this._temperature_gyroIntialized) {
      return undefined;
    }
    return this._refObject.temperature_gyro;
  }
  set temperature_gyro(value) {
    this._temperature_gyroIntialized = true;
    this._refObject.temperature_gyro = value;
  }
  copyRefObject(refObject) {
    this._refObject = new VehicleImuStatusRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._accel_device_idIntialized = true;
    this._gyro_device_idIntialized = true;
    this._wrapperFields.accel_clipping.fill(refObject.accel_clipping.toArray());
    this._wrapperFields.gyro_clipping.fill(refObject.gyro_clipping.toArray());
    this._accel_error_countIntialized = true;
    this._gyro_error_countIntialized = true;
    this._accel_rate_hzIntialized = true;
    this._gyro_rate_hzIntialized = true;
    this._accel_raw_rate_hzIntialized = true;
    this._gyro_raw_rate_hzIntialized = true;
    this._accel_vibration_metricIntialized = true;
    this._gyro_vibration_metricIntialized = true;
    this._delta_angle_coning_metricIntialized = true;
    this._wrapperFields.mean_accel.fill(refObject.mean_accel.toArray());
    this._wrapperFields.mean_gyro.fill(refObject.mean_gyro.toArray());
    this._wrapperFields.var_accel.fill(refObject.var_accel.toArray());
    this._wrapperFields.var_gyro.fill(refObject.var_gyro.toArray());
    this._temperature_accelIntialized = true;
    this._temperature_gyroIntialized = true;
  }
  copy(other) {
    this._refObject = new VehicleImuStatusRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._accel_device_idIntialized = true;
    this._gyro_device_idIntialized = true;
    this._wrapperFields.accel_clipping.copy(other._wrapperFields.accel_clipping);
    this._wrapperFields.gyro_clipping.copy(other._wrapperFields.gyro_clipping);
    this._accel_error_countIntialized = true;
    this._gyro_error_countIntialized = true;
    this._accel_rate_hzIntialized = true;
    this._gyro_rate_hzIntialized = true;
    this._accel_raw_rate_hzIntialized = true;
    this._gyro_raw_rate_hzIntialized = true;
    this._accel_vibration_metricIntialized = true;
    this._gyro_vibration_metricIntialized = true;
    this._delta_angle_coning_metricIntialized = true;
    this._wrapperFields.mean_accel.copy(other._wrapperFields.mean_accel);
    this._wrapperFields.mean_gyro.copy(other._wrapperFields.mean_gyro);
    this._wrapperFields.var_accel.copy(other._wrapperFields.var_accel);
    this._wrapperFields.var_gyro.copy(other._wrapperFields.var_gyro);
    this._temperature_accelIntialized = true;
    this._temperature_gyroIntialized = true;
  }
  static get classType() {
    return VehicleImuStatusWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_device_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_clipping","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_clipping","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_error_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_error_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_rate_hz","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_rate_hz","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_raw_rate_hz","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_raw_rate_hz","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"accel_vibration_metric","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"gyro_vibration_metric","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"delta_angle_coning_metric","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mean_accel","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mean_gyro","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"var_accel","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"var_gyro","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"temperature_accel","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"temperature_gyro","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"VehicleImuStatus","stringUpperBound":null,"isPrimitiveType":false},"msgName":"VehicleImuStatus"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","accel_device_id","gyro_device_id","accel_clipping","gyro_clipping","accel_error_count","gyro_error_count","accel_rate_hz","gyro_rate_hz","accel_raw_rate_hz","gyro_raw_rate_hz","accel_vibration_metric","gyro_vibration_metric","delta_angle_coning_metric","mean_accel","mean_gyro","var_accel","var_gyro","temperature_accel","temperature_gyro"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class VehicleImuStatusArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof VehicleImuStatusWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new VehicleImuStatusWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to VehicleImuStatusArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to VehicleImuStatusArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new VehicleImuStatusRefArray(size);
    this._refObject = new VehicleImuStatusRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new VehicleImuStatusWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof VehicleImuStatusArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "VehicleImuStatusArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      VehicleImuStatusWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return VehicleImuStatusWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return VehicleImuStatusArrayWrapper;
  }
}
module.exports = VehicleImuStatusWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_device_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_clipping",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_clipping",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_error_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_error_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_rate_hz",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_rate_hz",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_raw_rate_hz",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_raw_rate_hz",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "accel_vibration_metric",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "gyro_vibration_metric",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "delta_angle_coning_metric",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mean_accel",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mean_gyro",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "var_accel",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "var_gyro",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "temperature_accel",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "temperature_gyro",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "VehicleImuStatus",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "VehicleImuStatus"
}
*/
