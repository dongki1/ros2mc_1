// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const CharWrapper = require('../../generated/std_msgs/std_msgs__msg__Char.js');
const UavcanParameterValueRefStruct = StructType({
  timestamp: primitiveTypes.uint64,
  node_id: primitiveTypes.uint8,
  param_id: ArrayType(primitiveTypes.char, 17),
  param_index: primitiveTypes.int16,
  param_count: primitiveTypes.uint16,
  param_type: primitiveTypes.uint8,
  int_value: primitiveTypes.int64,
  real_value: primitiveTypes.float32,
});
const UavcanParameterValueRefArray = ArrayType(UavcanParameterValueRefStruct);
const UavcanParameterValueRefStructArray = StructType({
  data: UavcanParameterValueRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class UavcanParameterValueWrapper {
  constructor(other, willCheckConsistency = false) {
    this._wrapperFields = {};
    this._willCheckConsistency = willCheckConsistency;
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new UavcanParameterValueRefStruct(other._refObject.toObject());
      this._timestampIntialized = true;
      this._node_idIntialized = true;
      this._wrapperFields.param_id = CharWrapper.createArray();
      this._wrapperFields.param_id.copy(other._wrapperFields.param_id);
      this._param_indexIntialized = true;
      this._param_countIntialized = true;
      this._param_typeIntialized = true;
      this._int_valueIntialized = true;
      this._real_valueIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new UavcanParameterValueRefStruct();
    this._timestampIntialized = false;
    this._node_idIntialized = false;
    this._wrapperFields.param_id = CharWrapper.createArray();
    this._param_indexIntialized = false;
    this._param_countIntialized = false;
    this._param_typeIntialized = false;
    this._int_valueIntialized = false;
    this._real_valueIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new UavcanParameterValueWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new UavcanParameterValueArrayWrapper;
  }
  static get ArrayType() {
    return UavcanParameterValueArrayWrapper;
  }
  static get refObjectArrayType() {
    return UavcanParameterValueRefStructArray
  }
  static get refObjectType() {
    return UavcanParameterValueRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
      if (checkConsistency && !this._timestampIntialized) {
        throw new TypeError('Invalid argument: timestamp in UavcanParameterValue');
      }
      if (checkConsistency && !this._node_idIntialized) {
        throw new TypeError('Invalid argument: node_id in UavcanParameterValue');
      }
      if (checkConsistency && !this._param_indexIntialized) {
        throw new TypeError('Invalid argument: param_index in UavcanParameterValue');
      }
      if (checkConsistency && !this._param_countIntialized) {
        throw new TypeError('Invalid argument: param_count in UavcanParameterValue');
      }
      if (checkConsistency && !this._param_typeIntialized) {
        throw new TypeError('Invalid argument: param_type in UavcanParameterValue');
      }
      if (checkConsistency && !this._int_valueIntialized) {
        throw new TypeError('Invalid argument: int_value in UavcanParameterValue');
      }
      if (checkConsistency && !this._real_valueIntialized) {
        throw new TypeError('Invalid argument: real_value in UavcanParameterValue');
      }
    this._refObject.param_id = Array.from(this._wrapperFields.param_id.data);
  }
  serialize() {
    this.freeze(/*own=*/false, this._willCheckConsistency);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._timestampIntialized = true;
    this._refObject.timestamp = refObject.timestamp;
    this._node_idIntialized = true;
    this._refObject.node_id = refObject.node_id;
    this._wrapperFields.param_id.fill(refObject.param_id.toArray());
    this._param_indexIntialized = true;
    this._refObject.param_index = refObject.param_index;
    this._param_countIntialized = true;
    this._refObject.param_count = refObject.param_count;
    this._param_typeIntialized = true;
    this._refObject.param_type = refObject.param_type;
    this._int_valueIntialized = true;
    this._refObject.int_value = refObject.int_value;
    this._real_valueIntialized = true;
    this._refObject.real_value = refObject.real_value;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    UavcanParameterValueWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'px4_msgs', subFolder: 'msg', interfaceName: 'UavcanParameterValue'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get timestamp() {
    if (!this._timestampIntialized) {
      return undefined;
    }
    return this._refObject.timestamp;
  }
  set timestamp(value) {
    this._timestampIntialized = true;
    this._refObject.timestamp = value;
  }
  get node_id() {
    if (!this._node_idIntialized) {
      return undefined;
    }
    return this._refObject.node_id;
  }
  set node_id(value) {
    this._node_idIntialized = true;
    this._refObject.node_id = value;
  }
  get param_id() {
    return this._wrapperFields['param_id'].data;
  }
  set param_id(value) {
    if (value.length !== 17) {
      throw new RangeError('The length of the array must be 17.');
    }
    this._wrapperFields['param_id'].fill(value);
  }
  get param_index() {
    if (!this._param_indexIntialized) {
      return undefined;
    }
    return this._refObject.param_index;
  }
  set param_index(value) {
    this._param_indexIntialized = true;
    this._refObject.param_index = value;
  }
  get param_count() {
    if (!this._param_countIntialized) {
      return undefined;
    }
    return this._refObject.param_count;
  }
  set param_count(value) {
    this._param_countIntialized = true;
    this._refObject.param_count = value;
  }
  get param_type() {
    if (!this._param_typeIntialized) {
      return undefined;
    }
    return this._refObject.param_type;
  }
  set param_type(value) {
    this._param_typeIntialized = true;
    this._refObject.param_type = value;
  }
  get int_value() {
    if (!this._int_valueIntialized) {
      return undefined;
    }
    return this._refObject.int_value;
  }
  set int_value(value) {
    this._int_valueIntialized = true;
    this._refObject.int_value = value;
  }
  get real_value() {
    if (!this._real_valueIntialized) {
      return undefined;
    }
    return this._refObject.real_value;
  }
  set real_value(value) {
    this._real_valueIntialized = true;
    this._refObject.real_value = value;
  }
  copyRefObject(refObject) {
    this._refObject = new UavcanParameterValueRefStruct(refObject.toObject());
    this._timestampIntialized = true;
    this._node_idIntialized = true;
    this._wrapperFields.param_id.fill(refObject.param_id.toArray());
    this._param_indexIntialized = true;
    this._param_countIntialized = true;
    this._param_typeIntialized = true;
    this._int_valueIntialized = true;
    this._real_valueIntialized = true;
  }
  copy(other) {
    this._refObject = new UavcanParameterValueRefStruct(other._refObject.toObject());
    this._timestampIntialized = true;
    this._node_idIntialized = true;
    this._wrapperFields.param_id.copy(other._wrapperFields.param_id);
    this._param_indexIntialized = true;
    this._param_countIntialized = true;
    this._param_typeIntialized = true;
    this._int_valueIntialized = true;
    this._real_valueIntialized = true;
  }
  static get classType() {
    return UavcanParameterValueWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"timestamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"node_id","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"param_id","type":{"isArray":true,"arraySize":17,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"char","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"param_index","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"param_count","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"param_type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"int_value","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"real_value","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"px4_msgs","type":"UavcanParameterValue","stringUpperBound":null,"isPrimitiveType":false},"msgName":"UavcanParameterValue"};
  }
  hasMember(name) {
    let memberNames = ["timestamp","node_id","param_id","param_index","param_count","param_type","int_value","real_value"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class UavcanParameterValueArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof UavcanParameterValueWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new UavcanParameterValueWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to UavcanParameterValueArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to UavcanParameterValueArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new UavcanParameterValueRefArray(size);
    this._refObject = new UavcanParameterValueRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new UavcanParameterValueWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof UavcanParameterValueArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "UavcanParameterValueArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      UavcanParameterValueWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return UavcanParameterValueWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return UavcanParameterValueArrayWrapper;
  }
}
module.exports = UavcanParameterValueWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "timestamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "node_id",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "param_id",
      "type": {
        "isArray": true,
        "arraySize": 17,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "char",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "param_index",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "param_count",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "param_type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "int_value",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "real_value",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "px4_msgs",
    "type": "UavcanParameterValue",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "UavcanParameterValue"
}
*/
